<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hugenye个人博客</title>
  
  <subtitle>学习总结</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hugenye.github.io/"/>
  <updated>2020-07-21T02:20:19.666Z</updated>
  <id>http://hugenye.github.io/</id>
  
  <author>
    <name>Hugenye</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo速度提升</title>
    <link href="http://hugenye.github.io/2020/07/21/double/"/>
    <id>http://hugenye.github.io/2020/07/21/double/</id>
    <published>2020-07-21T00:40:05.000Z</published>
    <updated>2020-07-21T02:20:19.666Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo-双线部署到-Coding-（2020版）和-GitHub-提升访问速度"><a href="#Hexo-双线部署到-Coding-（2020版）和-GitHub-提升访问速度" class="headerlink" title="Hexo 双线部署到 Coding （2020版）和 GitHub 提升访问速度"></a>Hexo 双线部署到 Coding （2020版）和 GitHub 提升访问速度</h1><p>Hex+GitHub搭建的博客，网站访问速度特别的慢，所以选择把博客推送到Coding来提升访问速度。</p><p>由于Coding Pages改版，很多功能找起来和网上看到的功能块的位置不一样，所以觉得还是写一个最新的部署案例。</p><p>部署步骤：</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><a href="https://coding.net/" target="_blank" rel="noopener">Coding Pages网址</a>点击进入后，选择【免费注册】</p><p>进入注册页面，会看到要先创建团队(我的团队，才可以创建用户。</p><img src="/2020/07/21/double/Coding的注册.PNG" title="Coding的注册页面"><p>进入Coding的后台</p><img src="/2020/07/21/double/Coding后台.PNG" title="Coding的用户后台页面"><p>选择【项目】-》【创建项目】</p><img src="/2020/07/21/double/创建项目.PNG" title="创建项目"><p>之后会弹出要你选择项目模板，我选择的是项目托管</p><img src="/2020/07/21/double/选择项目模板.PNG" title="选择项目模板"><p>之后填写项目名称建议和自己的用户名保持一致，可以直接通过 user_name.coding.me （我设置的是hugenye.coding.me访问博客，项目标识是自动填写，之后【完成创建】</p><p>项目就创建好了。</p><h2 id="配置公钥"><a href="#配置公钥" class="headerlink" title="配置公钥"></a>配置公钥</h2><p>参考<a href="https://help.coding.net/docs/project/features/ssh.html?_ga=2.71797075.1386798579.1595219352-1055493866.1595219352" target="_blank" rel="noopener">Coding 配置公钥</a></p><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h2><p>进入我们的项目，选择SSH链接，复制链接</p><p>然后打开本地博客根目录的config.yml文件，找到deploy关键字，添加复制的coding地址：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"> <span class="comment"># repository: https://github.com/Hugenye/Hugenye.github.io.git</span></span><br><span class="line"> <span class="comment"># branch: master</span></span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line">       <span class="comment">#github的ssh链接</span></span><br><span class="line"><span class="attr">       github:</span> <span class="attr">https://github.com/Hugenye/Hugenye.github.io.git,master</span></span><br><span class="line">       <span class="comment">##coding的ssh链接</span></span><br><span class="line"><span class="attr">       coding:</span> <span class="string">git@e.coding.net:hugenye/hugenye.coding.me/hugenye.coding.me.git,master</span></span><br></pre></td></tr></table></figure><h2 id="将代码推送到Coding。"><a href="#将代码推送到Coding。" class="headerlink" title="将代码推送到Coding。"></a>将代码推送到Coding。</h2><p>在博客根目录右击Git Bash Here，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>代码就会被推送</p><img src="/2020/07/21/double/代码推送.PNG" title="代码被推送到Coding"><p>开启Coding Pages（深坑）</p><p>查看之前别人发的微博，根本找不到位置，找了好久才找到</p><p>进入项目，选择左下角的【项目设置】</p><img src="/2020/07/21/double/项目设置.PNG" title="项目设置1"><p>【功能开关】-》打开【持续部署】的开关（不打开静态网站功能不启用）-》返回上一级菜单选择【持续部署】-》【静态网站】</p><img src="/2020/07/21/double/功能开关.PNG" title="项目设置2"><img src="/2020/07/21/double/静态网站.PNG" title="项目设置3"><p>选择【新建】，填写网站名称</p><img src="/2020/07/21/double/新建静态网站.PNG" title="项目设置4"><p>保存后会生成一个随机的网址</p><p>可以选择【立即部署】，域名就是免费给我们生成的随即域名</p><p>也可以选择自己购买域名绑定域名</p><h2 id="绑定域名并开启Https"><a href="#绑定域名并开启Https" class="headerlink" title="绑定域名并开启Https"></a>绑定域名并开启Https</h2><p>在静态网站一栏的右上角点击【设置】，下滑到底部，绑定我们的域名</p><h3 id="注册域名"><a href="#注册域名" class="headerlink" title="注册域名"></a>注册域名</h3><p>域名有免费的，也有收费的，也不是很贵。</p><p>在腾讯云买了个.xyz的域名，最近有活动，新用户一年1元钱。</p><h3 id="DNSPod域名解析"><a href="#DNSPod域名解析" class="headerlink" title="DNSPod域名解析"></a>DNSPod域名解析</h3><p>域名解析有两种方式：</p><p>1.在域名 DNS 设置中添加一条 CNAME 记录指向 xxxx.coding.me，解析路线选择默认。<br>2.在域名 DNS 设置中添加一条A记录，记录指向 xxxx.coding.me的ip，解析路线选择默认。（ip地址获取：WIN+R输入cmd进入终端，输入：ping xxxx.coding.me 即可。）</p><p>操作方式：（选择第一种方式）</p><p>进入DNSPod的控制台，选择【DNS解析】—》【我的域名】</p><p>添加要解析的域名</p><img src="/2020/07/21/double/添加要域名解析.PNG" title="域名解析"><p>进入要解析的域名【添加记录】，添加一条 CNAME 记录指向Coding产生的xxxx.coding-pages.com的地址，之后选择这条记录有个SSL的开关，选中生成SSL证书，之后都点击开启就可以了。</p><img src="/2020/07/21/double/添加记录.PNG" title="添加记录"><p>开启HTTPS，勾选如图所示：</p><img src="/2020/07/21/double/HTTPS.PNG" title="HTTPS设置">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Hexo" scheme="http://hugenye.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>JDK8新特性</title>
    <link href="http://hugenye.github.io/2020/07/18/jdk8/"/>
    <id>http://hugenye.github.io/2020/07/18/jdk8/</id>
    <published>2020-07-18T01:16:25.000Z</published>
    <updated>2020-07-18T02:03:42.667Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Lamda表达式"><a href="#Lamda表达式" class="headerlink" title="Lamda表达式"></a>Lamda表达式</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="JAVA" scheme="http://hugenye.github.io/categories/JAVA/"/>
    
    
      <category term="JDK8新特性" scheme="http://hugenye.github.io/tags/JDK8%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>自动化测试学习</title>
    <link href="http://hugenye.github.io/2020/03/13/auto/"/>
    <id>http://hugenye.github.io/2020/03/13/auto/</id>
    <published>2020-03-13T06:48:56.000Z</published>
    <updated>2020-07-13T06:57:26.445Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://hugenye.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>http</title>
    <link href="http://hugenye.github.io/2019/12/10/http/"/>
    <id>http://hugenye.github.io/2019/12/10/http/</id>
    <published>2019-12-10T10:50:06.000Z</published>
    <updated>2020-07-13T06:51:14.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h2><h3 id="Content-MD5"><a href="#Content-MD5" class="headerlink" title="Content-MD5"></a>Content-MD5</h3><p><a href="https://www.ituring.com.cn/article/74167" target="_blank" rel="noopener">https://www.ituring.com.cn/article/74167</a></p><p>MD5和Content-MD5的最大区别，MD5的长度是32位，Content-MD5的长度是16位，Content-MD5比MD5安全性要高一些。</p><h3 id="Content-Type"><a href="#Content-Type" class="headerlink" title="Content-Type"></a>Content-Type</h3><p><a href="https://www.cnblogs.com/Im-Victor/p/9408449.html" target="_blank" rel="noopener">https://www.cnblogs.com/Im-Victor/p/9408449.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="http" scheme="http://hugenye.github.io/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>网上习题</title>
    <link href="http://hugenye.github.io/2019/09/29/exercises/"/>
    <id>http://hugenye.github.io/2019/09/29/exercises/</id>
    <published>2019-09-29T05:17:20.000Z</published>
    <updated>2019-09-29T08:35:28.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><h3 id="网络协议通俗理解"><a href="#网络协议通俗理解" class="headerlink" title="网络协议通俗理解"></a>网络协议通俗理解</h3><table><thead><tr><th align="center">OSI中的层</th><th align="center">功能</th><th align="center">TCP/IP协议</th></tr></thead><tbody><tr><td align="center">应用层</td><td align="center">文件传输，电子邮件，文件服务，虚拟终端</td><td align="center">TETP,HTTP,SNMP,FTP,SMTP,DNS,RIP,Telnet</td></tr><tr><td align="center">表示层</td><td align="center">数据格式化，代码转换，数据加密</td><td align="center">没有协议</td></tr><tr><td align="center">会话层</td><td align="center">解除或建立于别的接点的联系</td><td align="center">没有协议</td></tr><tr><td align="center">传输层</td><td align="center">提供端与端的接口</td><td align="center">TCP,UDP</td></tr><tr><td align="center">网络层</td><td align="center">为数据包选择路由</td><td align="center">IP,ICMP,OSPF,BGP,IGMP,ARP.RARP</td></tr><tr><td align="center">数据链路层</td><td align="center">传输有地址的帧以及错误检测功能</td><td align="center">SLIP,CSLIP,PPP,MTU,ARP,RARP</td></tr><tr><td align="center">物理层</td><td align="center">以二进制数据形式在物理媒体上传输数据</td><td align="center">ISO2110,IEEE802,IEEE802,2</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="面试题" scheme="http://hugenye.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Python学习</title>
    <link href="http://hugenye.github.io/2019/09/24/python/"/>
    <id>http://hugenye.github.io/2019/09/24/python/</id>
    <published>2019-09-24T12:37:52.000Z</published>
    <updated>2020-07-17T00:40:04.497Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h2><p>python跨平台，python应用范围广（操作系统、web平台、3d动画、企业应用、云计算）</p><p><a href="https://fishc.com.cn/thread-35584-1-1.html" target="_blank" rel="noopener">学习参考</a></p><p>python有很多BIF内置函数（dir(<strong>builtins</strong>)查看python中所用BIF）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(__builtins__)  纯小写的是内置函数</span><br><span class="line">[<span class="string">'ArithmeticError'</span>, <span class="string">'AssertionError'</span>, <span class="string">'AttributeError'</span>, <span class="string">'BaseException'</span>, <span class="string">'BlockingIOError'</span>, <span class="string">'BrokenPipeError'</span>, <span class="string">'BufferError'</span>, <span class="string">'BytesWarning'</span>, <span class="string">'ChildProcessError'</span>, <span class="string">'ConnectionAbortedError'</span>, <span class="string">'ConnectionError'</span>, <span class="string">'ConnectionRefusedError'</span>, <span class="string">'ConnectionResetError'</span>, <span class="string">'DeprecationWarning'</span>, <span class="string">'EOFError'</span>, <span class="string">'Ellipsis'</span>, <span class="string">'EnvironmentError'</span>, <span class="string">'Exception'</span>, <span class="string">'False'</span>, <span class="string">'FileExistsError'</span>, <span class="string">'FileNotFoundError'</span>, <span class="string">'FloatingPointError'</span>, <span class="string">'FutureWarning'</span>, <span class="string">'GeneratorExit'</span>, <span class="string">'IOError'</span>, <span class="string">'ImportError'</span>, <span class="string">'ImportWarning'</span>, <span class="string">'IndentationError'</span>, <span class="string">'IndexError'</span>, <span class="string">'InterruptedError'</span>, <span class="string">'IsADirectoryError'</span>, <span class="string">'KeyError'</span>, <span class="string">'KeyboardInterrupt'</span>, <span class="string">'LookupError'</span>, <span class="string">'MemoryError'</span>, <span class="string">'ModuleNotFoundError'</span>, <span class="string">'NameError'</span>, <span class="string">'None'</span>, <span class="string">'NotADirectoryError'</span>, <span class="string">'NotImplemented'</span>, <span class="string">'NotImplementedError'</span>, <span class="string">'OSError'</span>, <span class="string">'OverflowError'</span>, <span class="string">'PendingDeprecationWarning'</span>, <span class="string">'PermissionError'</span>, <span class="string">'ProcessLookupError'</span>, <span class="string">'RecursionError'</span>, <span class="string">'ReferenceError'</span>, <span class="string">'ResourceWarning'</span>, <span class="string">'RuntimeError'</span>, <span class="string">'RuntimeWarning'</span>, <span class="string">'StopAsyncIteration'</span>, <span class="string">'StopIteration'</span>, <span class="string">'SyntaxError'</span>, <span class="string">'SyntaxWarning'</span>, <span class="string">'SystemError'</span>, <span class="string">'SystemExit'</span>, <span class="string">'TabError'</span>, <span class="string">'TimeoutError'</span>, <span class="string">'True'</span>, <span class="string">'TypeError'</span>, <span class="string">'UnboundLocalError'</span>, <span class="string">'UnicodeDecodeError'</span>, <span class="string">'UnicodeEncodeError'</span>, <span class="string">'UnicodeError'</span>, <span class="string">'UnicodeTranslateError'</span>, <span class="string">'UnicodeWarning'</span>, <span class="string">'UserWarning'</span>, <span class="string">'ValueError'</span>, <span class="string">'Warning'</span>, <span class="string">'WindowsError'</span>, <span class="string">'ZeroDivisionError'</span>, <span class="string">'__build_class__'</span>, <span class="string">'__debug__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__import__'</span>, <span class="string">'__loader__'</span>, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>, <span class="string">'abs'</span>, <span class="string">'all'</span>, <span class="string">'any'</span>, <span class="string">'ascii'</span>, <span class="string">'bin'</span>, <span class="string">'bool'</span>, <span class="string">'breakpoint'</span>, <span class="string">'bytearray'</span>, <span class="string">'bytes'</span>, <span class="string">'callable'</span>, <span class="string">'chr'</span>, <span class="string">'classmethod'</span>, <span class="string">'compile'</span>, <span class="string">'complex'</span>, <span class="string">'delattr'</span>, <span class="string">'dict'</span>, <span class="string">'dir'</span>, <span class="string">'divmod'</span>, <span class="string">'enumerate'</span>, <span class="string">'eval'</span>, <span class="string">'exec'</span>, <span class="string">'filter'</span>, <span class="string">'float'</span>, <span class="string">'format'</span>, <span class="string">'frozenset'</span>, <span class="string">'getattr'</span>, <span class="string">'globals'</span>, <span class="string">'hasattr'</span>, <span class="string">'hash'</span>, <span class="string">'hex'</span>, <span class="string">'id'</span>, <span class="string">'input'</span>, <span class="string">'int'</span>, <span class="string">'isinstance'</span>, <span class="string">'issubclass'</span>, <span class="string">'iter'</span>, <span class="string">'len'</span>, <span class="string">'list'</span>, <span class="string">'locals'</span>, <span class="string">'map'</span>, <span class="string">'max'</span>, <span class="string">'memoryview'</span>, <span class="string">'min'</span>, <span class="string">'next'</span>, <span class="string">'object'</span>, <span class="string">'oct'</span>, <span class="string">'open'</span>, <span class="string">'ord'</span>, <span class="string">'pow'</span>, <span class="string">'print'</span>, <span class="string">'property'</span>, <span class="string">'range'</span>, <span class="string">'repr'</span>, <span class="string">'reversed'</span>, <span class="string">'round'</span>, <span class="string">'set'</span>, <span class="string">'setattr'</span>, <span class="string">'slice'</span>, <span class="string">'sorted'</span>, <span class="string">'staticmethod'</span>, <span class="string">'str'</span>, <span class="string">'sum'</span>, <span class="string">'super'</span>, <span class="string">'tuple'</span>, <span class="string">'type'</span>, <span class="string">'vars'</span>, <span class="string">'zip'</span>]</span><br></pre></td></tr></table></figure><h2 id="Python的安装（免安装版）"><a href="#Python的安装（免安装版）" class="headerlink" title="Python的安装（免安装版）"></a>Python的安装（免安装版）</h2><p>1、在<a href="http://python.org/download%20" target="_blank" rel="noopener">官网下载地址</a>，下载windows系统 下的zip安装包</p><p>2、解压安装在c盘</p><p>3、启动python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;cd C:\python37 </span><br><span class="line">&gt;python </span><br><span class="line">Python 3. 7.4 (tags/v3. 7. 4:e09359112e, Jul 8 2019, 20:34:20) CMSC v. 1916 64 bit (kWD64)) on win32</span><br></pre></td></tr></table></figure><p>4、配置python环境变量</p><p>A.右键点击“我的电脑”，点击“属性”；</p><p>B.在弹出的界面中点击“高级系统设置”</p><p>C.在弹出的界面中点击“环境变量”；</p><p>D.在弹出的页面中进行环境变量的配置；</p><h2 id="Idea下Python开发平台的搭建"><a href="#Idea下Python开发平台的搭建" class="headerlink" title="Idea下Python开发平台的搭建"></a><a href="https://www.cnblogs.com/arxive/p/9780158.html" target="_blank" rel="noopener">Idea下Python开发平台的搭建</a></h2><p>\1. python的下载</p><p><a href="https://www.python.org/downloads/" target="_blank" rel="noopener">https://www.python.org/downloads/</a> </p><p>\2. idea下python插件的安装</p><p>点击File-&gt;Settings…-&gt;Plugins，在里面搜索python。</p><p>发现搜索并没有结果。我们点击search in repositories链接</p><p>\3. idea下的配置</p><p>File-&gt;New-&gt;Project，可以看到左边的项目类型中多了一个python。点击它</p><h2 id="基础入门"><a href="#基础入门" class="headerlink" title="基础入门"></a>基础入门</h2><h3 id="变量和字符串"><a href="#变量和字符串" class="headerlink" title="变量和字符串"></a>变量和字符串</h3><p>定义<strong>变量</strong>需要注意：</p><ul><li>在使用变量之前，需要对其先赋值</li><li>变量名可以包括字母、数字、下划线，但是变量名不能以数字开头。</li><li>字母可以是大写或着小写，但是大小写是不同的。也就是说hu和Hu对于python来说是完全不同的两个名字</li><li>变量命名理论上是可以取任何合法的名字。但是尽量给变量取一个专业一点的名字</li></ul><p><strong>字符串</strong></p><p>如果字符串出现单引号（’）或双引号（“）怎么办？</p><p>1.利用转义符号（)对字符串中的引号进行转义；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'I\'m Jane'</span>)  打印出I<span class="string">'m Jane</span></span><br></pre></td></tr></table></figure><p> 如果遇到要打印路径之类的比如C:\note，需要反斜杠对自身进行转义</p><p>但是如果对于一个字符串中有很多个反斜杠，可以使用原始字符串比如str=r’C:\note’</p><p><strong>长字符串</strong></p><p>如果想要得到一个跨域多行的字符串，就需要三重引号（’‘’）字符串</p><p>###Python的数据类型 </p><p>‘数字’和数字代表不同的意义</p><p>整型（在版本3.0后和长整型表示一致）</p><p>浮点型（有小数点是浮点型，没有小数点是整型）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">15e10</span>)   <span class="comment">#150000000000.0 </span></span><br><span class="line">print(<span class="number">0.0000000001</span>)  <span class="comment">#1e-10</span></span><br><span class="line">e代表<span class="number">10</span>的含义，小数点左边是正数，右边是负数</span><br></pre></td></tr></table></figure><p>布尔类型（可以当作整数看待）</p><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><img src="/2019/09/24/python/zhuan.PNG" title="这是类型转换的图片"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">b=int(<span class="string">'340'</span>) <span class="comment">#340</span></span><br><span class="line">c=int(<span class="string">'我的'</span>) <span class="comment">#ValueError: invalid literal for int() with base 10: '我的'</span></span><br><span class="line"></span><br><span class="line">f=<span class="number">5.59</span>  </span><br><span class="line">f=int(f)</span><br><span class="line">print(f) <span class="comment">#5  浮点数转型为整型，python采取截断处理，效率高</span></span><br></pre></td></tr></table></figure><p>获取关于数据的类型的信息（type()、isinstance()）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print( isinstance(<span class="string">'字符串'</span>, str)) <span class="comment">#True</span></span><br><span class="line">print( isinstance(<span class="number">1</span>,int)) <span class="comment">#True</span></span><br><span class="line">print( isinstance(<span class="number">2.0</span>,float)) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><p>注意：TypeError: isinstance() arg 2 must be a type or tuple of types，对<code>str</code>进行了赋值，导致了<code>字符串</code>这个字符串比较的时候报错</p><h3 id="常用操作符"><a href="#常用操作符" class="headerlink" title="常用操作符"></a>常用操作符</h3><p>算术操作符大部分和c语言一致</p><p><code>**</code>是幂运算操作符 3<code>**</code>2实际上是3<code>^</code>2</p><p>比较操符</p><p>逻辑操作符（and or not)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">not</span> <span class="number">0</span> <span class="comment"># True  0代表false</span></span><br><span class="line"><span class="keyword">not</span> <span class="number">3</span><span class="comment"># False</span></span><br><span class="line">例外 只用python可以执行的语句</span><br><span class="line"><span class="number">3</span>&lt;<span class="number">4</span>&lt;<span class="number">5</span>  <span class="comment">#True</span></span><br></pre></td></tr></table></figure><img src="/2019/09/24/python/you.PNG" title="这是优先级选择的图片"><h3 id="分支和循环"><a href="#分支和循环" class="headerlink" title="分支和循环"></a>分支和循环</h3><p>elif 是else if的缩写</p><h4 id="条件表达式（三元操作符）"><a href="#条件表达式（三元操作符）" class="headerlink" title="条件表达式（三元操作符）"></a>条件表达式（三元操作符）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法： x <span class="keyword">if</span> 条件 <span class="keyword">else</span> y</span><br></pre></td></tr></table></figure><h4 id="断言-assert"><a href="#断言-assert" class="headerlink" title="断言 assert"></a>断言 assert</h4><p>当assert这个关键字后边的条件为假的时候，程序自动崩溃并抛出AssertionError的异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> <span class="number">3</span>&gt;<span class="number">4</span></span><br></pre></td></tr></table></figure><p>一般用来在程序中置入检查点，当需要确保程序中的某个条件一定为真才能让程序正常工作。</p><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件:</span><br><span class="line">循环体</span><br></pre></td></tr></table></figure><h4 id="for循环（与c不太一样，更强大）"><a href="#for循环（与c不太一样，更强大）" class="headerlink" title="for循环（与c不太一样，更强大）"></a>for循环（与c不太一样，更强大）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 目标 <span class="keyword">in</span> 表达式    </span><br><span class="line"> 循环体</span><br><span class="line">range([start],stop,[step])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):<span class="comment"># 0 1 2 3 4</span></span><br><span class="line">    print(i)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">3</span>): <span class="comment"># 1 2</span></span><br><span class="line">    print(j)</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>):<span class="comment"># 1 3 5 7 9</span></span><br><span class="line">    print(m)</span><br></pre></td></tr></table></figure><h3 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h3><h4 id="列表、元组和字符串的共同点"><a href="#列表、元组和字符串的共同点" class="headerlink" title="列表、元组和字符串的共同点"></a>列表、元组和字符串的共同点</h4><ul><li>都可以通过索引得到每一个元素</li><li>默认所引致总是从0开始</li><li>可以通过分片的方法得到一个范围内的元素的集合</li><li>有很多共同的操作符（重读操作符、拼接操作符、成员关系操作符）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">list()<span class="comment"># [] 空列表  将对象转为列表</span></span><br><span class="line">list(<span class="string">"www.baidu.com"</span>)</span><br><span class="line"><span class="comment"># ['w', 'w', 'w', '.', 'b', 'a', 'i', 'd', 'u', '.', 'c', 'o', 'm']</span></span><br><span class="line">list((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)) <span class="comment">#[1, 2, 3, 4]</span></span><br><span class="line">tuple() 将可迭代对象转换为元组</span><br><span class="line">tuple(<span class="string">"www.baidu.com"</span>)</span><br><span class="line"><span class="comment">#('w', 'w', 'w', '.', 'b', 'a', 'i', 'd', 'u', '.', 'c', 'o', 'm')</span></span><br><span class="line">str()转化为字符串</span><br><span class="line">len(<span class="string">"www.baidu.com"</span>) <span class="comment">#13</span></span><br><span class="line">max()/min() 要保证数据类型是统一的</span><br><span class="line">sum((<span class="number">2.3</span>,<span class="number">3.2</span>,<span class="number">4</span>),<span class="number">3</span>) <span class="comment">#12.5 =&gt;(2.3+3.2+4)+3</span></span><br><span class="line">sorted((<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>)) <span class="comment">#[1, 2, 3, 4, 5]</span></span><br><span class="line">list(reversed((<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>))) <span class="comment">#[1, 4, 3, 2, 5]</span></span><br><span class="line">list(enumerate((<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>))) <span class="comment">#[(0, 5), (1, 2), (2, 3), (3, 4), (4, 1)]</span></span><br><span class="line">list(zip([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])) <span class="comment">#[(1, 4), (2, 5), (3, 6)]</span></span><br></pre></td></tr></table></figure><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><h5 id="创建列表"><a href="#创建列表" class="headerlink" title="创建列表"></a>创建列表</h5><p>创建一个普通列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">members=[<span class="string">'字符串1'</span>，<span class="string">'字符串2'</span>，<span class="string">'字符串3'</span>]</span><br><span class="line">number=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>创建一个混合列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="string">'字符串1'</span>,<span class="number">3.2</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br></pre></td></tr></table></figure><p>创建一个空列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">number=[]</span><br></pre></td></tr></table></figure><h5 id="向列表列表添加元素"><a href="#向列表列表添加元素" class="headerlink" title="向列表列表添加元素"></a>向列表列表添加元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="string">'字符串1'</span>,<span class="number">3.2</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">mix.append(<span class="string">'添加数据'</span>)</span><br><span class="line">mix.extend([<span class="string">'字符串1'</span>,<span class="number">22</span>,<span class="number">1.2</span>])<span class="comment">#extend必须添加对象的是列表</span></span><br><span class="line">mix.insert(<span class="number">1</span>,<span class="string">'插在第二位'</span>)</span><br></pre></td></tr></table></figure><h5 id="从列表中获取元素"><a href="#从列表中获取元素" class="headerlink" title="从列表中获取元素"></a>从列表中获取元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix[<span class="number">0</span>] <span class="comment">#1</span></span><br></pre></td></tr></table></figure><h5 id="从列表中删除元素"><a href="#从列表中删除元素" class="headerlink" title="从列表中删除元素"></a>从列表中删除元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="string">'字符串1'</span>,<span class="number">3.2</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'数组二的元素'</span>]]</span><br><span class="line">mix.remove(<span class="number">22</span>) <span class="comment">#要删除的内容 remove('字符串')</span></span><br><span class="line"><span class="keyword">del</span> mix[<span class="number">0</span>] <span class="comment">#也可以删除整个数组</span></span><br><span class="line">mix.pop() <span class="comment">#移除最后的一个元素并返回删除元素的值</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">[1, 2, 3, '数组二的元素'] </span></span><br><span class="line"><span class="string">[1, '字符串1', 3.2]</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">mix.pop(<span class="number">1</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">字符串1</span></span><br><span class="line"><span class="string">[1, 3.2, [1, 2, 3, '数组二的元素']]</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h5 id="列表分片slice"><a href="#列表分片slice" class="headerlink" title="列表分片slice"></a>列表分片slice</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(mix[<span class="number">1</span>:<span class="number">3</span>])<span class="comment">#['字符串1', 3.2]</span></span><br><span class="line">print(mix[:<span class="number">3</span>])<span class="comment">#[1, '字符串1', 3.2]</span></span><br><span class="line">print(mix[:])<span class="comment">#列表的拷贝</span></span><br></pre></td></tr></table></figure><h5 id="列表的一些常用操作符"><a href="#列表的一些常用操作符" class="headerlink" title="列表的一些常用操作符"></a>列表的一些常用操作符</h5><p>可以比较大小，但是比较的列表内容是以数组第一个元素进行比较；</p><p>列表组合可以用+号连接，但是不能连接一个字符串等数据；</p><p>列表*次数，列表原有数据增加了次数的几个元素</p><h5 id="列表类型内置函数"><a href="#列表类型内置函数" class="headerlink" title="列表类型内置函数"></a>列表类型内置函数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dir(list)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">list3=[<span class="number">110</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">110</span>]</span><br><span class="line">list3.count(<span class="number">110</span>) <span class="comment"># 2</span></span><br><span class="line">list3.index(<span class="number">110</span>) <span class="comment">#0  </span></span><br><span class="line">list3.sort()<span class="comment">#从小到大排序</span></span><br><span class="line">list3.sort(reverse=<span class="literal">True</span>)<span class="comment">#逆序</span></span><br></pre></td></tr></table></figure><h4 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h4><p>元组和列表的不同：</p><p>元组内容是不能被修改的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">temp=()<span class="comment">#空的元组</span></span><br><span class="line">temp=(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>)或者<span class="number">1</span>,<span class="number">34</span> <span class="comment">#元组</span></span><br><span class="line">(<span class="number">3</span>)不是元组是个整型元素</span><br><span class="line"><span class="number">8</span>*(<span class="number">8</span>) 是<span class="number">64</span></span><br><span class="line">而<span class="number">8</span>*(<span class="number">8</span>,)是(<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">temp=(<span class="string">"组1"</span>,<span class="string">"数2"</span>,<span class="string">"word"</span>)</span><br><span class="line">temp=temp[:<span class="number">1</span>]+(<span class="string">"插入值"</span>,<span class="number">23.6</span>,)+temp[<span class="number">1</span>:]</span><br><span class="line"><span class="comment">#('组1', '插入值', 23.6, '数2', 'word')</span></span><br><span class="line">新的temp生成，旧的temp会被回收器回收</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> temp <span class="comment">#删除整个元组</span></span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><h5 id="奇葩的内置方法"><a href="#奇葩的内置方法" class="headerlink" title="奇葩的内置方法"></a>奇葩的内置方法</h5><p><a href="https://fishc.com.cn/forum.php?mod=viewthread&tid=38992&extra=page%3D1%26filter%3Dtypeid%26typeid%3D403" target="_blank" rel="noopener">字符串的方法与注释</a></p><h5 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'&#123;0&#125; love &#123;1&#125;.&#123;2&#125;'</span>.format(<span class="string">'I'</span>,<span class="string">'baidu'</span>,<span class="string">'com'</span>)</span><br><span class="line"><span class="comment">#I love baidu.com</span></span><br><span class="line"><span class="string">'&#123;a&#125; love &#123;b&#125;.&#123;c&#125;'</span>.format(a=<span class="string">'I'</span>,b=<span class="string">'baidu'</span>,c=<span class="string">'com'</span>)</span><br><span class="line"><span class="string">'&#123;0&#125; love &#123;b&#125;.&#123;c&#125;'</span>.format(<span class="string">'I'</span>,b=<span class="string">'baidu'</span>,c=<span class="string">'com'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'&#123;0:.1f&#125;&#123;1&#125;'</span>.format(<span class="number">27.698</span>,<span class="string">'GB'</span>)</span><br><span class="line"><span class="comment">#27.7GB   </span></span><br><span class="line">:表示格式化符号的开始</span><br><span class="line"><span class="number">.1</span> 四舍五入保留一位小数点</span><br><span class="line">f定点数</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">格式化符号</span><br><span class="line"><span class="string">'%c %c %c'</span> % (<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>)<span class="comment">#a b c</span></span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="实参和形参"><a href="#实参和形参" class="headerlink" title="实参和形参"></a>实参和形参</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"fun1"</span>)</span><br><span class="line">fun1()<span class="comment"># fun1()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">(num1,num2)</span>:</span><span class="comment">#num1,num2是形参</span></span><br><span class="line">    <span class="keyword">return</span> num1+num2</span><br><span class="line">print(fun2(<span class="number">2</span>,<span class="number">3</span>))<span class="comment">#2，3是实参</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun3</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">"参数是："</span>+name)</span><br><span class="line">fun3(<span class="string">"数值"</span>)</span><br></pre></td></tr></table></figure><h4 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayWord</span><span class="params">(name,words)</span>:</span></span><br><span class="line">    print(name+<span class="string">"-&gt;"</span>+words)</span><br><span class="line"></span><br><span class="line">sayWord(words=<span class="string">"Hello"</span>,name=<span class="string">"小明"</span>)<span class="comment">#words= ，name= 关键字参数</span></span><br><span class="line">小明-&gt;Hello</span><br></pre></td></tr></table></figure><h4 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayWord</span><span class="params">(name=<span class="string">'小白'</span>,words=<span class="string">'世界和平'</span>)</span>:</span></span><br><span class="line">    print(name+<span class="string">"-&gt;"</span>+words)</span><br><span class="line">sayWord()<span class="comment">#小白-&gt;世界和平</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayWord</span><span class="params">(name=<span class="string">'小白'</span>,words=<span class="string">'世界和平'</span>)</span>:</span></span><br><span class="line">    print(name+<span class="string">"-&gt;"</span>+words)</span><br><span class="line">sayWord(words=<span class="string">"想看雪"</span>)<span class="comment">#小白-&gt;想看雪</span></span><br></pre></td></tr></table></figure><h4 id="收集参数（可变参数）"><a href="#收集参数（可变参数）" class="headerlink" title="收集参数（可变参数）"></a>收集参数（可变参数）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(*params)</span>:</span></span><br><span class="line">    print(<span class="string">"参数长度是："</span>,len(params))</span><br><span class="line">    print(<span class="string">"第二个参数是："</span>,params[<span class="number">1</span>])</span><br><span class="line">test(<span class="number">1</span>,<span class="string">"雄安"</span>,<span class="number">3.21</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"><span class="comment">#参数长度是： 6</span></span><br><span class="line"><span class="comment">#第二个参数是： 雄安</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(*params,exp=<span class="string">'关键字参数'</span>)</span>:</span></span><br><span class="line">    print(<span class="string">"收集参数长度是："</span>,len(params),exp)</span><br><span class="line">    print(<span class="string">"第二个参数是："</span>,params[<span class="number">1</span>])</span><br><span class="line">test(<span class="number">1</span>,<span class="string">"雄安"</span>,<span class="number">3.21</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">收集参数如果有其他参数在里面，</span><br><span class="line">会报错：TypeError: test() missing <span class="number">1</span> required keyword-only argument: <span class="string">'exp'</span></span><br><span class="line">要把关键字参数使用上</span><br></pre></td></tr></table></figure><h4 id="函数和过程"><a href="#函数和过程" class="headerlink" title="函数和过程"></a>函数和过程</h4><p>对于一般的编程语言来说函数是有返回值，过程是没有返回值的；</p><p>但是python只有函数没有过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"Hello World"</span>)</span><br><span class="line"></span><br><span class="line">temp=hello()<span class="comment">#Hello World</span></span><br><span class="line">print(temp)<span class="comment">#None</span></span><br></pre></td></tr></table></figure><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><p>python动态确定返回类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">back</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># return &#123;1,"shu",2.43&#125;  ---》&#123;1,"shu",2.43&#125;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>,<span class="string">"shu"</span>,<span class="number">2.43</span></span><br><span class="line"><span class="comment">#(1, 'shu', 2.43)</span></span><br><span class="line">print(back())</span><br></pre></td></tr></table></figure><h4 id="变量的可见性"><a href="#变量的可见性" class="headerlink" title="变量的可见性"></a>变量的可见性</h4><p>局部变量和（global）全局变量</p><p>在函数中对全局变量修改值时，系统会自创建一个新的同名的局部变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">discount</span><span class="params">(price,rate)</span>:</span></span><br><span class="line">    final_price=price*(<span class="number">1</span>-rate)</span><br><span class="line">    old_price=<span class="number">50</span></span><br><span class="line">    print(<span class="string">"修改的old_price："</span>,old_price) <span class="comment"># 50 创建了一个局部变量</span></span><br><span class="line">    <span class="keyword">return</span> final_price</span><br><span class="line"></span><br><span class="line">old_price=float(input(<span class="string">"请输入价格："</span>)) <span class="comment">#100</span></span><br><span class="line">rate=float(input(<span class="string">"请输入折扣率："</span>)) <span class="comment">#0.1</span></span><br><span class="line">new_price=discount(old_price,rate) </span><br><span class="line">print(<span class="string">'修改后old_price的值是：'</span>,old_price)<span class="comment"># 100</span></span><br><span class="line">print(<span class="string">'打折后的价格是：'</span>,new_price) <span class="comment">#90</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">global</span> old_price</span><br><span class="line"> old_price=<span class="number">50</span><span class="comment">#全在函数中局修饰后，只会被变为全局变量</span></span><br><span class="line">修改的old_price： <span class="number">50</span></span><br><span class="line">修改后old_price的值是： <span class="number">50</span></span><br></pre></td></tr></table></figure><h4 id="内嵌函数和闭包"><a href="#内嵌函数和闭包" class="headerlink" title="内嵌函数和闭包"></a>内嵌函数和闭包</h4><p>内嵌函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"fun1()函数正在被调用"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">()</span>:</span></span><br><span class="line">        print(<span class="string">"fun2()函数正在被调用"</span>)</span><br><span class="line">    fun2()</span><br><span class="line">    </span><br><span class="line">fun1()</span><br><span class="line"><span class="comment">#fun1()函数正在被调用</span></span><br><span class="line"><span class="comment">#fun2()函数正在被调用</span></span><br><span class="line">fun2()</span><br><span class="line"><span class="comment">#NameError: name 'fun2' is not defined</span></span><br></pre></td></tr></table></figure><p>闭包（）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">(num1)</span>:</span> <span class="comment">#在内部函数的fun2的外部作用域时fun1的整个内部空间的变量x进行引用</span></span><br><span class="line">    print(<span class="string">"num1:"</span>,num1)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">(num2)</span>:</span></span><br><span class="line">        print(<span class="string">"num2:"</span>,num2)</span><br><span class="line">        <span class="keyword">return</span> num1+num2</span><br><span class="line">    <span class="keyword">return</span> fun2</span><br><span class="line"></span><br><span class="line">i=fun1(<span class="number">5</span>) </span><br><span class="line">print(type(i))</span><br><span class="line">print(i(<span class="number">7</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">num1: 5</span></span><br><span class="line"><span class="string">&lt;class 'function'&gt;</span></span><br><span class="line"><span class="string">num2: 7</span></span><br><span class="line"><span class="string">12</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(fun1(<span class="number">1</span>)(<span class="number">3</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">num1: 1</span></span><br><span class="line"><span class="string">num2: 3</span></span><br><span class="line"><span class="string">4'''</span></span><br><span class="line">在fun2()中返回的之不能是fun2() ，会报错TypeError: fun2() missing <span class="number">1</span> required positional argument: <span class="string">'num2'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span> </span><br><span class="line">    x=<span class="number">2</span></span><br><span class="line">    print(<span class="string">"num1:"</span>,x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="comment"># nonlocal x</span></span><br><span class="line">        x *= x</span><br><span class="line">        print(<span class="string">"num2:"</span>,x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">return</span> fun2()</span><br><span class="line">fun1()</span><br><span class="line">会报错：UnboundLocalError: local variable <span class="string">'x'</span> referenced before assignment</span><br><span class="line">解决方法：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span> <span class="comment">#在内部函数的fun2的外部作用域时fun1的整个内部空间的变量x进行引用</span></span><br><span class="line">    x=[<span class="number">2</span>] 变为列表 </span><br><span class="line">    print(<span class="string">"num1:"</span>,x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">()</span>:</span></span><br><span class="line">        x[<span class="number">0</span>] *= x[<span class="number">0</span>]</span><br><span class="line">        print(<span class="string">"num2:"</span>,x[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> x[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> fun2()</span><br><span class="line">fun1()</span><br><span class="line"> 可以使用局部变量 推荐</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span> <span class="comment">#在内部函数的fun2的外部作用域时fun1的整个内部空间的变量x进行引用</span></span><br><span class="line">    x=<span class="number">2</span></span><br><span class="line">    print(<span class="string">"num1:"</span>,x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">nonlocal</span> x  推荐使用</span><br><span class="line">        x *= x</span><br><span class="line">        print(<span class="string">"num2:"</span>,x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">return</span> fun2()</span><br><span class="line">fun1()</span><br><span class="line"><span class="comment">#num1: 2</span></span><br><span class="line"><span class="comment">#num2: 4</span></span><br></pre></td></tr></table></figure><h4 id="lamda表达式"><a href="#lamda表达式" class="headerlink" title="lamda表达式"></a>lamda表达式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ds</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*x+<span class="number">3</span></span><br><span class="line">print(ds(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">g=<span class="keyword">lambda</span> x : <span class="number">2</span>*x+<span class="number">3</span></span><br><span class="line">print(g(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line">m=<span class="keyword">lambda</span> x,y : x+y</span><br><span class="line">print(add(<span class="number">1</span>,<span class="number">2</span>)==m(<span class="number">1</span>,<span class="number">2</span>)) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><h5 id="lamda的作用："><a href="#lamda的作用：" class="headerlink" title="lamda的作用："></a>lamda的作用：</h5><ul><li>写脚本时，使用lamda表达式可以省下定义函数过程。</li><li>对于一些比较抽象并且整个程序执行下来只需要带哦用两次的函数，有时候给函数起个名字也是头疼的问题，使用lamda就不需要考虑命名的问题</li><li>简化带的可读性</li></ul><h5 id="比较厉害的BIF内置函数"><a href="#比较厉害的BIF内置函数" class="headerlink" title="比较厉害的BIF内置函数"></a>比较厉害的BIF内置函数</h5><p>filter(过滤的要求，要被过滤的内容)过滤器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">list(filter(<span class="literal">None</span>,[<span class="number">1</span>,<span class="number">0</span>,<span class="literal">False</span>,<span class="literal">True</span>])) <span class="comment">#[1, True] 过滤非True的内容</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd</span><span class="params">(x)</span>:</span> <span class="comment">#获取偶数</span></span><br><span class="line">    <span class="keyword">return</span> x%<span class="number">2</span></span><br><span class="line">temp=range(<span class="number">10</span>)</span><br><span class="line">show=filter(odd,temp) <span class="comment">#odd要过滤的内容，temp取值范围</span></span><br><span class="line">list(show)  </span><br><span class="line"></span><br><span class="line">list(filter(<span class="keyword">lambda</span> x:x%<span class="number">2</span>,range(<span class="number">10</span>))) <span class="comment">#是上面的简化</span></span><br></pre></td></tr></table></figure><p>map映射</p><h4 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h4><h5 id="什么是递归？"><a href="#什么是递归？" class="headerlink" title="什么是递归？"></a>什么是递归？</h5><p>有调用函数自身的行为，有个正确的返回条件</p><p>例子：汉诺塔游戏、树结构的定义、谢尔宾斯基三角形</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">非递归方法</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span><span class="params">(n)</span>:</span></span><br><span class="line">    retult=n</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n):</span><br><span class="line">        retult *=i</span><br><span class="line">    <span class="keyword">return</span> retult</span><br><span class="line">number=int(input(<span class="string">'请输入一个参数:'</span>))</span><br><span class="line">result=factorial(number)</span><br><span class="line">print(<span class="string">'阶乘是：'</span>,result)</span><br><span class="line">递归阶乘方法</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recursion</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> recursion(x<span class="number">-1</span>)*x</span><br></pre></td></tr></table></figure><h5 id="递归例子——斐波那契数列："><a href="#递归例子——斐波那契数列：" class="headerlink" title="递归例子——斐波那契数列："></a>递归例子——斐波那契数列：</h5><p>分治思想是递归的主要思想</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">迭代方法：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dei</span><span class="params">(m)</span>:</span></span><br><span class="line">    n1=n2=n3=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> m&lt;<span class="number">1</span>:</span><br><span class="line">       print(<span class="string">'请输入大于或等于1的值：'</span>)</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">       <span class="keyword">while</span> (m<span class="number">-2</span>)&gt;<span class="number">0</span>:</span><br><span class="line">           n3=n1+n2</span><br><span class="line">           n1=n2</span><br><span class="line">           n2=n3</span><br><span class="line">           m-=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> n3</span><br><span class="line">递归方法：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fei</span><span class="params">(m)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> m&lt;<span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'请输入大于或等于1的值：'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    <span class="keyword">if</span> m==<span class="number">1</span> <span class="keyword">or</span> m==<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fei(m<span class="number">-1</span>)+fei(m<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line">result=fei(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">if</span> result!=<span class="number">-1</span>:</span><br><span class="line">    print(<span class="string">"共有多少只兔子："</span>,result)</span><br></pre></td></tr></table></figure><h5 id="递归例子——汉诺塔游戏"><a href="#递归例子——汉诺塔游戏" class="headerlink" title="递归例子——汉诺塔游戏"></a>递归例子——汉诺塔游戏</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanol</span><span class="params">(n,x,y,z)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        print(x,<span class="string">'--&gt;'</span>,z)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanol(n<span class="number">-1</span>,x,z,y)<span class="comment"># 将前n-1个盘子从x移动到y上</span></span><br><span class="line">        print(x,<span class="string">'--&gt;'</span>,z)<span class="comment"># 将最底下的最后一个盘子从x移动到z上</span></span><br><span class="line">        hanol(n<span class="number">-1</span>,y,x,z)<span class="comment"># 将y上的n-1个盘子移动到z上</span></span><br><span class="line"></span><br><span class="line">n=int(input(<span class="string">'请输入汉诺塔的层数：'</span>))</span><br><span class="line">hanol(n,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>)</span><br></pre></td></tr></table></figure><h3 id="列表存储（对于大量数据的可以导入为一个数据包）"><a href="#列表存储（对于大量数据的可以导入为一个数据包）" class="headerlink" title="列表存储（对于大量数据的可以导入为一个数据包）"></a>列表存储（对于大量数据的可以导入为一个数据包）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#永久存储 写</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">my_list=[<span class="number">123</span>,<span class="number">23.3</span>,<span class="string">"我的"</span>,[<span class="string">'another list'</span>]]</span><br><span class="line">pickle_file=open(<span class="string">"my_list.pkl"</span>,<span class="string">"wb"</span>)</span><br><span class="line">pickle.dump(my_list, pickle_file)</span><br><span class="line">pickle_file.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 读数据</span></span><br><span class="line">pickle_file=open(<span class="string">"my_list.pkl"</span>,<span class="string">"rb"</span>)</span><br><span class="line">my_list2=pickle.load(pickle_file)</span><br><span class="line">print(my_list2)</span><br></pre></td></tr></table></figure><h4 id="字典（sadomasochism）："><a href="#字典（sadomasochism）：" class="headerlink" title="字典（sadomasochism）："></a>字典（sadomasochism）：</h4><p>当索引不好用时 ,选用字典</p><h5 id="创建和访问字典"><a href="#创建和访问字典" class="headerlink" title="创建和访问字典"></a>创建和访问字典</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Exception异常处理"><a href="#Exception异常处理" class="headerlink" title="Exception异常处理"></a>Exception异常处理</h3><h2 id="python设计游戏"><a href="#python设计游戏" class="headerlink" title="python设计游戏"></a>python设计游戏</h2><h3 id="猜数字游戏"><a href="#猜数字游戏" class="headerlink" title="猜数字游戏"></a>猜数字游戏</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">i=<span class="number">2</span></span><br><span class="line">num=random.randint(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">print(<span class="string">'---------欢迎进入猜数字游戏-------------'</span>)</span><br><span class="line">temp=input(<span class="string">"不妨猜一下现在可能出现的是哪个数字："</span>)</span><br><span class="line">guess=int(temp)</span><br><span class="line"><span class="keyword">while</span> guess!=num <span class="keyword">and</span> i!=<span class="number">0</span>:<span class="comment">#联合条件</span></span><br><span class="line">    i=i<span class="number">-1</span><span class="comment">#有三次机会</span></span><br><span class="line">    <span class="comment"># print("i=",i)</span></span><br><span class="line">    temp=input(<span class="string">"猜错了请重新输入："</span>)</span><br><span class="line">    guess=int(temp)</span><br><span class="line">    <span class="keyword">if</span> guess==num:</span><br><span class="line">        print(<span class="string">"猜对了！"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> guess&lt;num:</span><br><span class="line">           print(<span class="string">"猜小了，正确答案是"</span>,num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"猜大了，正确答案是"</span>,num)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'游戏结束'</span>)</span><br></pre></td></tr></table></figure><h3 id="打飞机"><a href="#打飞机" class="headerlink" title="打飞机"></a>打飞机</h3><p>实现逻辑：</p><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Python" scheme="http://hugenye.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>amCharts图表插件学习</title>
    <link href="http://hugenye.github.io/2019/09/24/amcharts/"/>
    <id>http://hugenye.github.io/2019/09/24/amcharts/</id>
    <published>2019-09-24T01:13:21.000Z</published>
    <updated>2019-09-24T11:57:28.687Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="初步了解"><a href="#初步了解" class="headerlink" title="初步了解"></a>初步了解</h2><p>amCharts是一个图表组件，支持柱状图、条形图、线形图、面积图、烛台图、雷达等基本图形，个人感觉色彩效果特别好，使用起来也很方便，是基于JavaScript和HTML的组合，一般我只用做图表，它还可以做地图，但是我没用过，我用的是amchart3，现在已经更新到4了，添加了ES6形式的图表操作。</p><h2 id="折线图画法"><a href="#折线图画法" class="headerlink" title="折线图画法"></a>折线图画法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'amchart.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;link rel="stylesheet" type="text/css" href="styles.css"&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#chartdiv0</span> &#123;</span></span><br><span class="line">  width: 50%;</span><br><span class="line">  height: 500px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#chartdiv2</span> &#123;</span></span><br><span class="line">  width: 50%;</span><br><span class="line">  height: 500px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- yibiaopan --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"chartdiv0"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/amcharts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/serial.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/themes/light.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/plugins/export/export.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://www.amcharts.com/lib/3/plugins/export/export.css"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chart1;  </span></span><br><span class="line"><span class="javascript">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> collect30 = [ &#123;day : <span class="string">"2018/2/4"</span>,energy: <span class="number">71</span>,control:<span class="number">51</span>&#125;, </span></span><br><span class="line"><span class="actionscript">     &#123;day : <span class="string">"2018/2/5"</span>,energy: <span class="number">1844</span>,control:<span class="number">1528</span>&#125;, </span></span><br><span class="line"><span class="actionscript">     &#123;day : <span class="string">"2018/2/6"</span>,energy: <span class="number">2864</span>,control:<span class="number">2626</span>&#125;, </span></span><br><span class="line"><span class="actionscript">     &#123;day : <span class="string">"2018/2/7"</span>,energy:<span class="number">2728</span>,control:<span class="number">2410</span>&#125;, </span></span><br><span class="line"><span class="actionscript">     &#123;day : <span class="string">"2018/2/8"</span>,energy:<span class="number">2772</span>,control:<span class="number">2467</span>&#125; ];</span></span><br><span class="line"><span class="actionscript"><span class="comment">//一共画折线图，要画图的对象，导入数据，画得div位置 </span></span></span><br><span class="line"><span class="actionscript">amchartDisplay(chart1, collect30, <span class="string">"chartdiv0"</span>);</span></span><br><span class="line">&#125;);</span><br><span class="line">        </span><br><span class="line"><span class="actionscript"><span class="comment">//amcharts画图函数 </span></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">amchartDisplay</span><span class="params">(chart, chartData, div)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">chart = <span class="keyword">new</span> AmCharts.AmSerialChart();</span></span><br><span class="line"><span class="actionscript">chart.panEventsEnabled = <span class="literal">true</span>;</span></span><br><span class="line">chart.zoomOutButton = &#123;</span><br><span class="line"><span class="actionscript">backgroundColor : <span class="string">"#000000"</span>,</span></span><br><span class="line"><span class="actionscript">backgroundAlpha : <span class="number">0.15</span><span class="comment">//背景透明度</span></span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*//设置时间，和原有时间设置出现冲突，仅显示一部分</span><br><span class="line"><span class="actionscript">chart.addListener(<span class="string">"dataUpdated"</span>, zoomChart);</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">zoomChart</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">    chart.zoomToDates(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2018</span>, <span class="number">2</span>, <span class="number">4</span>), <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2018</span>, <span class="number">3</span>, <span class="number">20</span>));</span></span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line"><span class="actionscript">chart.dataProvider = chartData;<span class="comment">//传入数据</span></span></span><br><span class="line"><span class="actionscript">chart.validateData();<span class="comment">//校验数据</span></span></span><br><span class="line"><span class="actionscript">chart.categoryField = <span class="string">"day"</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//设置横坐标; </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> categoryAxis = chart.categoryAxis;</span></span><br><span class="line">categoryAxis.gridAlpha = 0;</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">// 设置纵坐标value                </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> valueAxis = <span class="keyword">new</span> AmCharts.ValueAxis();</span></span><br><span class="line"><span class="actionscript">valueAxis.axisColor = <span class="string">"#DADADA"</span>;</span></span><br><span class="line">valueAxis.dashLength = 1;</span><br><span class="line">chart.addValueAxis(valueAxis);</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">// GRAPH </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> graph = <span class="keyword">new</span> AmCharts.AmGraph();</span></span><br><span class="line"><span class="actionscript">graph.type = <span class="string">"smoothedLine"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bullet = <span class="string">"round"</span>;<span class="comment">//节点形状</span></span></span><br><span class="line"><span class="actionscript">graph.bulletColor = <span class="string">"#FFFFFF"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bulletBorderColor = <span class="string">"#00BBCC"</span>;</span></span><br><span class="line">graph.bulletBorderThickness = 2;</span><br><span class="line">graph.bulletSize = 7;</span><br><span class="line"><span class="actionscript">graph.title = <span class="string">"能量值"</span>;</span></span><br><span class="line"><span class="actionscript">graph.valueField = <span class="string">"energy"</span>;</span></span><br><span class="line">graph.lineThickness = 2;</span><br><span class="line"><span class="actionscript">graph.lineColor = <span class="string">"#FF0000"</span>;</span></span><br><span class="line">chart.addGraph(graph);</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> graph = <span class="keyword">new</span> AmCharts.AmGraph();</span></span><br><span class="line"><span class="actionscript">graph.type = <span class="string">"smoothedLine"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bullet = <span class="string">"round"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bulletColor = <span class="string">"#FFFFF"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bulletBorderColor = <span class="string">"#ff9900"</span>;</span></span><br><span class="line">graph.bulletBorderThickness = 2;</span><br><span class="line">graph.bulletSize = 7;</span><br><span class="line"><span class="actionscript">graph.title = <span class="string">"控制后能量"</span>;</span></span><br><span class="line"><span class="actionscript">graph.valueField = <span class="string">"control"</span>;</span></span><br><span class="line">graph.lineThickness = 2;</span><br><span class="line"><span class="actionscript">graph.lineColor = <span class="string">"#66CD00"</span>;</span></span><br><span class="line">chart.addGraph(graph);</span><br><span class="line"><span class="actionscript"><span class="comment">// CURSOR </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chartCursor = <span class="keyword">new</span> AmCharts.ChartCursor();</span></span><br><span class="line"><span class="actionscript">chartCursor.cursorPosition = <span class="string">"mouse"</span>;</span></span><br><span class="line">chart.addChartCursor(chartCursor);</span><br><span class="line"><span class="actionscript"><span class="comment">// SCROLLBAR </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chartScrollbar = <span class="keyword">new</span> AmCharts.ChartScrollbar();</span></span><br><span class="line">chart.addChartScrollbar(chartScrollbar);</span><br><span class="line"><span class="actionscript"><span class="comment">// WRITE </span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//var parent = document.getElementById("#"+div);</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//alert($("#chart").children().length);</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> ($(<span class="string">"#"</span>+div).children().length) <span class="comment">//注意，此处需要清空div内容，以避免浏览器缓存上次的图形信息。 </span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">$(<span class="string">"#"</span>+div).empty(); <span class="comment">//.is(":empty");  </span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript">chart.write(div);<span class="comment">//画图到指定的div上 </span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="柱状图画法"><a href="#柱状图画法" class="headerlink" title="柱状图画法"></a>柱状图画法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Styles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#chartdiv</span> &#123;</span></span><br><span class="line">width: 100%;</span><br><span class="line">height: 500px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Resources --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/amcharts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/serial.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/themes/light.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/plugins/export/export.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://www.amcharts.com/lib/3/plugins/export/export.css"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Chart code --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chartData =[&#123;day:<span class="string">"2018/2/1"</span>,val1:<span class="number">0.34</span>,val2:<span class="number">45</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                &#123;day:<span class="string">"2018/2/2"</span>,val1:<span class="number">0.89</span>,val2:<span class="number">15</span>&#125;,</span></span><br><span class="line"><span class="actionscript">               &#123;day:<span class="string">"2018/2/3"</span>,val1:<span class="number">0.3</span>,val2:<span class="number">35</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                &#123;day:<span class="string">"2018/2/4"</span>,val1:<span class="number">0.60</span>,val2:<span class="number">47</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                &#123;day:<span class="string">"2018/2/5"</span>,val1:<span class="number">0.37</span>,val2:<span class="number">45</span>&#125;];</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chart = AmCharts.makeChart(<span class="string">"chartdiv"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="string">"type"</span>: <span class="string">"serial"</span>,</span></span><br><span class="line"><span class="actionscript">    <span class="string">"theme"</span>: <span class="string">"light"</span>,   </span></span><br><span class="line"><span class="actionscript">    <span class="string">"legend"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"useGraphSettings"</span>: <span class="literal">true</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="string">"dataProvider"</span>: chartData,</span></span><br><span class="line"><span class="actionscript">    <span class="string">"synchronizeGrid"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">    <span class="string">"valueAxes"</span>: [&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"id"</span>:<span class="string">"v1"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisColor"</span>: <span class="string">"#FF6600"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisThickness"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisAlpha"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"position"</span>: <span class="string">"left"</span><span class="comment">//定位纵坐标的位置</span></span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">"id"</span>:<span class="string">"v2"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisColor"</span>: <span class="string">"#FCD202"</span>,<span class="comment">//坐标轴的颜色</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisThickness"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisAlpha"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"position"</span>: <span class="string">"right"</span></span></span><br><span class="line">    &#125;],</span><br><span class="line"><span class="actionscript">    <span class="string">"graphs"</span>: [&#123;<span class="comment">//绘制图形</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"valueAxis"</span>: <span class="string">"v1"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"lineColor"</span>: <span class="string">"#FF6600"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bullet"</span>: <span class="string">"round"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bulletBorderThickness"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bulletColor"</span>:<span class="string">"#FFFFF"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//"bulletColor":"#FFFFF",</span></span></span><br><span class="line"><span class="actionscript">       <span class="comment">// "hideBulletsCount": 30,</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"title"</span>: <span class="string">"平均节能率"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"valueField"</span>: <span class="string">"val1"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"widthField"</span>:<span class="number">120</span>,</span></span><br><span class="line"><span class="actionscript">       <span class="comment">//  "labelOffset":1,</span></span></span><br><span class="line"><span class="actionscript"><span class="string">"fillAlphas"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript"><span class="string">"type"</span>: <span class="string">"column"</span><span class="comment">//设置为矩形</span></span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">"valueAxis"</span>: <span class="string">"v2"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"lineColor"</span>: <span class="string">"#FCD202"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bullet"</span>: <span class="string">"square"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bulletBorderThickness"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bulletColor"</span>:<span class="string">"#FFFFF"</span>,</span></span><br><span class="line"><span class="actionscript">     <span class="comment">//   "hideBulletsCount": 30,</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"title"</span>: <span class="string">"数值2"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"valueField"</span>: <span class="string">"val2"</span>,</span></span><br><span class="line"><span class="actionscript">       <span class="comment">// "labelOffset":40,</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"widthField"</span>:<span class="number">120</span>,</span></span><br><span class="line"><span class="actionscript"><span class="string">"fillAlphas"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript"><span class="string">"type"</span>: <span class="string">"column"</span></span></span><br><span class="line">    &#125;],</span><br><span class="line"><span class="actionscript">    <span class="string">"chartScrollbar"</span>: &#123;</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="string">"chartCursor"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="string">"bulletBorderColor"</span>:<span class="string">"yyyy/MM/dd"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"cursorPosition"</span>: <span class="string">"mouse"</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="string">"categoryField"</span>: <span class="string">"day"</span>,</span></span><br><span class="line"><span class="actionscript">    <span class="string">"categoryAxis"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"dataDateFormat"</span> : <span class="string">"YYYY-MM-DD"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisColor"</span>: <span class="string">"#DADADA"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"minorGridEnabled"</span>: <span class="literal">true</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="string">"export"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="string">"enabled"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"position"</span>: <span class="string">"bottom-right"</span></span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"chartdiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="amcharts图表使用大全："><a href="#amcharts图表使用大全：" class="headerlink" title="amcharts图表使用大全："></a>amcharts图表使用大全：</h2><p>amcharts图表使用大全</p><p>Amcharts JS 版属性/方法详细说明书 </p><p>1、 坐标轴(Y轴) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 valueAxis对象 图表的Y轴，一个图表中可以有多个Y轴 Var valueAxis = new AmCharts.ValueAxis(); </p><p>2 axisColor 轴的颜色 valueAxis.axisColor= “#FF6600”; </p><p>3 axisThickness 轴的宽度valueAxis.axisThickness = 1; </p><p>4 gridAlpha 轴的透明度，值介于0-1之间，0全透明</p><p> valueAxis1.gridAlpha = 0.2; </p><p>5 tickLength 轴从下到上像左或右伸出来的延长线 </p><p>valueAxis1.tickLength =0; </p><p>6 minimum 轴的最小值，如果不设置那么最小值根据数据动态变化 </p><p>valueAxis1.minimum = -100; </p><p>7 maximum 轴的最大值，如果不设置那么最大值根据数据动态变化 </p><p> valueAxis1.maximum = 100; </p><p>8 title 轴的名称valueAxis1.title=”哈哈”; </p><p>9 logarithmic 是否为对数函数分布，一般轴的刻度是均匀划分的分布， valueAxis1.logarithmic = </p><p>当该属性设置为true的时候，刻度分布呈对数形式false; </p><p>10 integersOnly 是否只显示整数，如果为true轴的刻度只显示整数形式valueAxis1.integersOnly = true; </p><p>11 gridCount 最大刻度个数 valueAxis1.gridCount= 10; </p><p>12 unit 单位 valueAxis1.unit =”%”; </p><p>13 labelsEnabled 是否显示轴标签，默认值为truevalueAxis1.labelsEnabled = true; </p><p>14 inside 轴的刻度值显示在表里面还是外面 valueAxis1.inside = true; 15 position 轴的位置，默认在左侧 valueAxis1.position= “left”; </p><p>16 stackType valueAxis.stackType =”0%”; </p><p>2、 categoryAxis(图表线，相当于X轴) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 valueAxis对象 图表的线，一个图表中可以有多个，每个对应一个Y轴或者共同拥有一个Y轴</p><p>var categoryAxis = chart.categoryAxis; </p><p>2 parseDates 是否以日期为x轴的值 True、falsecategoryAxis.parseDates = false; </p><p>3 minPeriod 当以日期为x轴的时候x轴显示的最小范围SS:分钟 DD:天 categoryAxis.minPeriod = “SS” </p><p>4 dashLength 破折线长度，默认为0是实心线categoryAxis.dashLength = 1; </p><p>5 gridAlpha 网格的透明度，垂直x轴的刻度线形成网格categoryAxis.gridAlpha = 0.15; </p><p>6 axisColor 轴的颜色categoryAxis.axisColor = “#DADADA”; </p><p>7 position 轴的位置，默认在最下方 top:显示在上方 left:左侧right: 右侧   categoryAxis.position = “top”; </p><p>8 gridPosition 网格位置categoryAxis.gridPosition = “start”; </p><p>9 startOnAxis 是否从轴上开始绘制，默认为false，即第一个点绘制是从中间开始的，当设置为true、false</p><p>categoryAxis.startOnAxis = true;</p><p>true的时候，第一个点开始总是从Y轴上</p><p>开始，结束总是在最后一个跟Y轴平行的</p><p>轴上结束 </p><p>10 gridColor 网格颜色 categoryAxis.gridColor= “#FFFFFF”; </p><p>11 dateFormats 日期格式，将数据格式化成对应的日期格式categoryAxis.dateFormats = </p><p>[{ </p><p>period:’DD’, </p><p>format: ‘DD’}, </p><p>{period:’WW’, </p><p>format: ‘MMM DD’}, </p><p>{period: ‘MM’,format:’MMM’}, </p><p>period: ‘YYYY’, </p><p>format: ‘YYYY’ </p><p>}]; </p><p>12 minorGridEnabled Specifies if minor gridshould be true,false </p><p>displayed. </p><p>3、 Legend(图例) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 legend对象 在图表的上方或者下方显示图例，图例的颜色就是对应线条的颜色</p><p>var legend = new AmCharts.AmLegend(); </p><p>2 align 排列样式 center legend.align= “center”; </p><p>3 marginLeft 左边缘 legend.marginLeft =0; </p><p>4 title 标题 legend.title=”测试”; </p><p>5 horizontalGap 水平间隔，一个图表可以有多个图例，图例之间的间隔用此属性 </p><p> legend.horizontalGap = 10; </p><p>6 equalWidths 是否等宽 legend.equalWidths =false;</p><p>7 valueWidth 值的宽度，在图例的右侧会显示该线或者图表的当前选中的值，设置为0时则不显示值 </p><p> legend.valueWidth = 120; </p><p>8 switchType 暂时没明白什么意思 legend.switchType =”v”; </p><p>4、 Guide(向导线) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 1 guide对象 向导线可以是一条根Y轴平行的线，也可以是一个矩形区域</p><p>var guide = new AmCharts.Guide(); </p><p>2 fillAlpha 区域透明度 guide.fillAlpha =0.1;</p><p>3 lineAlpha 线透明度 guide.lineAlpha = 0;</p><p>4 value 其实值，其实指对应Y坐标的值 guide.value = 50; </p><p>5 toValue 到达值，其实指对应Y坐标的值，跟上面属性共同确定了一个从value到toValue的区域，宽度为图表的宽度，高度为(toValue-value)的绝对值 </p><p> guide.toValue = 0; </p><p>6 lineColor 相导线的颜色 guide.lineColor =”#CC0000”;</p><p>7 dashLength 破折长度，默认为0为实心线条，设置值后为破折线 </p><p> guide.dashLength = 4; </p><p>8 label 标签，就是给向导线显示一个名字 guide.label = “平均值”; </p><p>9 inside 是否让向导线显示在图形里面，默认为true True，false guide.inside = true; </p><p>5、 Scrollbar(滚动条) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 scrollbar对象 滚动条可以选择图表显示的区域 </p><p>var chartScrollbar = newAmCharts.ChartScrollbar(); </p><p>3 backgroundAlpha滚动条背景透明度 </p><p>chartScrollbar.backgroundAlpha= 0.1; </p><p>4滚动条背景颜色backgroundColor </p><p>chartScrollbar.backgroundColor=”#000000”; </p><p>5 graphLineAlpha 图像线条的透明度 </p><p>chartScrollbar.graphLineAlpha = 0.1; </p><p>6 graphFillAlpha 图像的填充透明度 </p><p>chartScrollbar.graphFillAlpha = 0; </p><p>7 selectedGraphFillAlpha选中图像的填充色的透明度         b    chartScrollbar.selectedGraphFillAlpha = 0; </p><p>8 selectedGraphLineAlpha选中区域的图像线条透明度chartScrollbar.selectedGraphLineAlpha = 0.25; </p><p>9 scrollbarHeight滚动条高度chartScrollbar.scrollbarHeight = 30; </p><p>10 selectedBackgroundColor选中区域的背景颜色 chartScrollbar.selectedBackgroundColor = “#FFFFFF”; </p><p>6、 Graph (图表) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 graph对象 图像对象，必须有该属性 </p><p>var graph1 = new AmCharts.AmGraph(); </p><p>2 valueAxis 图像的Y轴，一个chart可以添加多个valueAxis</p><p>graph1.valueAxis = graph，一个graph只能有一个valueAxis1;  </p><p>*<em>var *</em>valueAxis1= *<em>new *</em>AmCharts.ValueAxis;//添加坐标轴</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br>**valueAxis1.axisThickness</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br><strong>valueAxis1.axisThickness<br>=</strong>1**;</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br><strong>valueAxis1.axisThickness<br>=</strong>1<strong>;<br>valueAxis1.unit=</strong>“kwh”**;</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br><strong>valueAxis1.axisThickness<br>=</strong>1<strong>;<br>valueAxis1.unit=</strong>“kwh”<strong>;<br>valueAxis1.position=</strong>“left”**;</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br><strong>valueAxis1.axisThickness<br>=</strong>1<strong>;<br>valueAxis1.unit=</strong>“kwh”<strong>;<br>valueAxis1.position=</strong>“left”<strong>;<br>chart.addValueAxis</strong>(<strong>valueAxis1</strong>)**</p><hr><p><strong>//**</strong>图表**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">var graph = new AmCharts.AmGraph();</span><br><span class="line"></span><br><span class="line">graph.bullet=&quot;round&quot;;</span><br><span class="line"></span><br><span class="line">graph.hideBulletsCount=30;</span><br><span class="line"></span><br><span class="line">graph.useLineColorForBulletBorder=true;</span><br><span class="line"></span><br><span class="line">// graph.fillAlphas=0.8;</span><br><span class="line"></span><br><span class="line">graph.lineAlpha=1;</span><br><span class="line"></span><br><span class="line">graph.id =aa; // 英文字段；</span><br><span class="line"></span><br><span class="line">graph.Title = &quot;能效&quot;+ &quot; Title&quot;;</span><br><span class="line"></span><br><span class="line">// console.log(deduplication(arr)[i])</span><br><span class="line"></span><br><span class="line">graph.valueField = aa; // 英文字段</span><br><span class="line"></span><br><span class="line">// graph.valueAxis=valueAxis1;</span><br><span class="line"></span><br><span class="line">graph.type = &quot;line&quot;; // 表示线性；</span><br><span class="line"></span><br><span class="line">graph.balloonText = &quot;能效&quot;+ &quot;:[[value]]&quot;;</span><br><span class="line"></span><br><span class="line">graph.valueAxis=&quot;val2&quot;;</span><br><span class="line"></span><br><span class="line">chart.addGraph(graph);</span><br></pre></td></tr></table></figure><p>  3 valueField 指定一个字段作为Y坐标值 graph1.valueField = “visits”;</p><p>4 bullet 图像的节点类型 graph1.bullet =”round”; </p><p>5 dashLength 绘制图像时延时，默认为0秒，设置为正整数时可以看到动态生成效果 </p><p> graph1.dashLength= 0; </p><p>6 hideBulletsCount一个图像中当节点大于一定数值后隐藏节点形状 </p><p> graph1.hideBulletsCount = 10; </p><p>7 balloonText 节点显示的文本内容 </p><p>graph1.balloonText = “<a href="[[visits]]">[date]</a>“;</p><p> 8lineColor 图像线颜色 graph1.lineColor = “#d1655d”; </p><p>9 connect 是否连接起来，是指如果数据有x轴值，但是y轴值丢失的时候，如果设置为true则忽略该点，设置为false则线条在此点处断开 </p><p> graph1.connect = false; </p><p>10 bulletBorderColor节点边框颜色 </p><p>graph1.bulletBorderColor = “#FFFFFF”; </p><p>11 bulletBorderThickness节点边框宽度 </p><p>graph1.bulletBorderThickness = 2; </p><p>12 customBulletField用户自定义节点字段</p><p> graph.customBulletField = “bullet”; </p><p>13 bulletOffset 节点偏移量 graph.bulletOffset =16; </p><p>14 cornerRadiusTop graph.cornerRadiusTop = 8; </p><p>15 bulletSize 节点大小 graph.bulletSize =14; </p><p>16 colorField 颜色字段，颜色可以从数据中读取 graph1.colorField = “color”; </p><p>17 type 图像类型，有line、column、smoothedLine类型，第一种为线形图，第二种为柱状图 </p><p>graph1.type = “line”; line/column/smoothedLine </p><p>18 fillAlphas 填充区透明度，默认为0，最大值为1，当设置值时，在线条跟x轴之间的区域会填充颜色 </p><p>graph1.fillAlphas = 0.3; </p><p>19 negativeLineColor当数值为负数时线条的颜色</p><p> graph1.negativeLineColor =”#efcc26”; </p><p>7、 Chart (amcharts 对象) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 chart对象 Amcharts 的核心对象 </p><p>var chart = new AmCharts.AmSerialChart(); </p><p>2 pathToImages 指定chart图片的引用地址 </p><p>chart.pathToImages =”amcharts/images/“; </p><p>3 zoomOutButton 设置放大/缩小按钮的背景色和透明度</p><p> chart.zoomOutButton = { </p><p>backgroundColor: </p><p>‘#000000’, </p><p>backgroundAlpha: 0.15 </p><p>}; </p><p>4 dataProvider 指定数据来源，一般指向一个数组对象 </p><p>chart.dataProvider = chartData; </p><p>5 categoryField 指定X轴由哪个字段决定 chart.categoryField = “date”; </p><p>6 autoMargins 自动调整边距，如果设置为true则边距设置不起效 </p><p> chart.autoMargins = true; </p><p>7 fontSize 字体大小 chart.fontSize = 14;</p><p>8 color 图标颜色 chart.color =”#FFFFFF”; </p><p>9 marginTop 上边距 chart.marginTop =100; </p><p>10 marginLeft 左边距 chart.marginLeft =50; </p><p>11 marginRight 右边距 chart.marginRight =30; </p><p>12 addGraph(graph) 添加一个图形，可以添加多个，想要绘制图形，必须有此方法 </p><p>chart.addGraph(graph1); </p><p>13 validateNow(div) 当数据改变时或者属性改变时，想要重新绘图，可以调用该方法chart.validateNow(‘chartdiv’); </p><p>14 chart.write(‘chartdiv’);将amcharts对象写到一个div中，最常用方法chart.chart.write(‘chartdiv’);</p><p> 15addListener(‘dataUp dated’, zoomChart); </p><p>添加一个监听函数，第一个参数是指定事件，第二个是调用的函数名’, </p><p><strong>对象获取方法/常用属性值</strong></p><p>chart.addListener(‘zoomed’, handleZoom);</p><p>示例：</p><p>chart.addListener(‘dataUpdated’, zoomChart);</p><p> 16 rotate图像是否xy轴互换，默认为false，如果想False，让图像顺时针旋转90?，则设置为true </p><p>true chart.rotate = false; </p><p>17 depth3D 设置为3d图像的厚度值 chart.depth3D = 5018 angle 角度，当设置图像为3d图时使用该属性， chart.angle = 40 </p><p>默认为0 </p><p>19 startDuration chart.startDuration = 2 20plotAreaBorderColor 绘图区域边框颜色 </p><p>chart.plotAreaBorderColor </p><p>= “#000000”; </p><p>21 plotAreaBorderAlpha 绘图区域边框透明度chart.plotAreaBorderAlpha </p><p>= 5; </p><p>22 backgroundImage 设置背景图片的地址 </p><p>chart.backgroundImage = “amcharts/images/bg.jpg”;</p><p>23 addChartScrollbar(chartScrollbar) 添加滚动条，只能添加一个           chart.addChartScrollbar(chartScrollbar); </p><p>24 addLegend(legend) 添加图例，可以添加多个chart.addLegend(legend); </p><p>25 addValueAxis(valueAxis1) 添加Y轴。可以添加多个  chart.addValueAxis(valueAxis1);</p><p>26 addChartCursor(chartCursor)添加鼠标形状 </p><p>chart.addChartCursor(chartCursor); </p><p>8、 ChartCursor(光标) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 chartCursor 对象设置光标的形状和样式 var chartCursor =new </p><p>AmCharts.ChartCursor(); </p><p>2 zoomable 是否可以缩放，设为true的时候，按住鼠标左键划线可以方法图像True/false </p><p>chartCursor.zoomable = false; </p><p>3 cursorAlpha 光标透明度 </p><p>chartCursor.cursorAlpha = 0; </p><p>4 cursorPosition 光标位置</p><p> chartCursor.cursorPosition =”mouse”; </p><p>5 pan 默认为false，设置为true时，光标变为四个向外的箭头形状，按住左键滑动鼠标可以将图像向左移动向右移动 </p><p> chartCursor.pan = true; </p><p>6 categoryBalloonDateFormat设置光标节点显示的日期格式 </p><p>chartCursor.categoryBalloonDateFormat =”JJ:NN, DD MMMM”; </p><p>9、 动态图表示例 </p><p>1、需要在html页面增加一个div，同时设置div的id和样式，amcharts将图表显示在指定的id的div中 </p><div id="chartdiv" style="width: 50%; height: 300px"></div> <p>2、引用amcharts js 库和css样式 </p><script src="amcharts/amcharts.js" type="text/javascript"></script> <link rel="stylesheet" href="style.css" type="text/css"> <p>3、设定一个定时器，循环调用函数 </p><p>window.setInterval(show,2000);//每隔2秒调用一次show()方法，show方法完成绘图功能 </p><p>function show(){ </p><p>var chart = new AmCharts.AmSerialChart(); </p><p>var valueAxis1 = new AmCharts.ValueAxis(); </p><p>var graph1 = new AmCharts.AmGraph(); </p><p>var categoryAxis = chart.categoryAxis; </p><p>var guide = new AmCharts.Guide(); </p><p>var legend = new AmCharts.AmLegend(); </p><p>var chartCursor = new AmCharts.ChartCursor(); </p><p>//设定最大显示数值个数 </p><p>generateChartData(); </p><p>chart.pathToImages =”amcharts/images/“; </p><p>chart.zoomOutButton = { </p><p>backgroundColor: ‘#000000’, </p><p>backgroundAlpha: 0.15 </p><p>}; </p><p>chart.dataProvider = chartData; </p><p>chart.categoryField = “date”; </p><p>categoryAxis.parseDates = false; // as our datais date-based, we set parseDates to true </p><p>categoryAxis.dashLength = 1; </p><p>categoryAxis.gridAlpha = 0.15; </p><p>categoryAxis.axisColor = “#DADADA”; </p><p>// categoryAxis.position = “top”; </p><p>categoryAxis.gridPosition = “start”; </p><p>categoryAxis.startOnAxis = true; </p><p>categoryAxis.gridColor = “#FFFFFF”; </p><p>// CURSOR </p><p>chartCursor.zoomable = false; // as the chartdisplayes not too many values, we disabled zooming </p><p>chartCursor.cursorAlpha = 0; </p><p>chartCursor.cursorPosition = “mouse”; </p><p>chartCursor.pan = true; // set it to fals if youwant the cursor to work in “select” mode </p><p>chart.addChartCursor(chartCursor); </p><p>valueAxis1.axisColor = “#FF6600”; </p><p>valueAxis1.axisThickness = 1; </p><p>valueAxis1.gridAlpha = 0; </p><p>valueAxis1.tickLength =0; </p><p>valueAxis1.minimum = -100; </p><p>valueAxis1.maximum = 100; </p><p>valueAxis1.title=”哈哈”; </p><p>valueAxis1.logarithmic = false; // this linemakes axis logarithmic </p><p>valueAxis1.integersOnly = true; </p><p>valueAxis1.gridCount = 10; </p><p>valueAxis1.unit = “%”; </p><p>valueAxis1.labelsEnabled = true; </p><p>valueAxis1.inside = true; </p><p>valueAxis1.position = “left”; </p><p>chart.addValueAxis(valueAxis1); </p><p>// LEGEND </p><p>legend.align = “center”; </p><p>legend.marginLeft = 0; </p><p>legend.title=”测试”; </p><p>legend.horizontalGap = 10; </p><p>legend.equalWidths = false; </p><p>legend.valueWidth = 120; </p><p>chart.addLegend(legend); </p><p>guide.fillAlpha = 0.1; </p><p>guide.lineAlpha = 0; </p><p>guide.value = 50; </p><p>guide.toValue = 0; </p><p>guide.lineColor = “#CC0000”; </p><p>guide.dashLength = 4; </p><p>guide.label = “平均值”; </p><p>guide.inside = true; </p><p>guide.lineAlpha = 1; </p><p>var guide1 = new AmCharts.Guide(); </p><p>guide1.lineColor = “#CC0000”; </p><p>guide1.lineAlpha = 1; </p><p>guide1.dashLength = 2; </p><p>guide1.inside = true; </p><p>guide1.labelRotation = 90; </p><p>categoryAxis.addGuide(guide1); </p><p>valueAxis1.addGuide(guide); </p><p>graph1.valueAxis = valueAxis1; // we have toindicate which value axis should be used </p><p>graph1.title = “红色”; </p><p>graph1.valueField = “visits”; </p><p>graph1.bullet = “round”; </p><p>graph1.dashLength = 0; </p><p>graph1.hideBulletsCount = 10; </p><p>graph1.balloonText = “<a href="[[visits]]">[date]</a>“; </p><p>graph1.lineColor = “#d1655d”; </p><p>graph1.connect = false; </p><p>graph1.negativeLineColor = “#efcc26”; </p><p>graph1.bulletBorderColor = “#FFFFFF”; </p><p>graph1.bulletBorderThickness = 2; </p><p>graph1.type = “smoothedLine”; // thisline makes the graph smoothed line. </p><p>graph1.fillAlphas = 0.3; // setting fillAlphasto &gt; 0 value makes it area graph </p><p>chart.addGraph(graph1); </p><p>chart.addTitle(“测试动态报表图”, 5); </p><p>chart.plotAreaBorderColor = “#000000”;</p><p>chart.plotAreaBorderAlpha = 5; </p><p>chart.autoMargins = true; </p><p>chart.fontSize = 14; </p><p>chart.write(‘chartdiv’); </p><p>chart=null; </p><p>valueAxis1 = null; </p><p>graph1 = null; </p><p>categoryAxis = null; </p><p>guide = null; </p><p>legend = null; </p><p>} </p><p>function generateChartData() { </p><p>$.ajax({ </p><p>type : “get”, </p><p>url :”${pageContext.request.contextPath}/getData”, </p><p>dataType : “text”, </p><p>data : { </p><p>}, </p><p>success : function(result) { </p><p>parseData(result,20); </p><p>}, </p><p>error : function(XMLHttpRequest, textStatus,errorThrown) { </p><p>alert(“请求异常，请检查服务器是否正常运行～” + XMLHttpRequest.status + “ “ </p><p>+ XMLHttpRequest.readyState + “ “ +textStatus); </p><p>} </p><p>}); </p><p>} </p><p>function parseData(data,num){ </p><p>var tempDate = []; </p><p>tempDate = data.split(“ “); </p><p>chartData.push({ </p><p>date:tempDate[0], </p><p>visits:tempDate[1] </p><p>}); </p><p>var newChartData=[]; </p><p>var len=chartData.length; </p><p>if(len&gt;num){ </p><p>for(var m=0;m&lt;num;m++){ </p><p>newChartData[m]=chartData[len-num+m]; </p><p>} </p><p>chartData = newChartData; </p><p>newChartData=null; </p><p>} </p><p>len=null; </p><p>visits=null; </p><p>} </p><p>4、写一个servlet程序，给amcharts提供动态数据 public class DataProviderServlet extends HttpServlet{ </p><p>private static final long serialVersionUID = 1L;</p><p>public static Integer i=0; </p><p>public DataProviderServlet() { </p><p>super(); </p><p>} </p><p>protected void doGet(HttpServletRequest request,HttpServletResponse response) throws ServletException, </p><p>IOException { </p><p>StringBuilder sb = new StringBuilder(); </p><p>sb.append(i++).append(“ “).append(newRandom().nextInt(100)*(i%2==0?(-1):(1))); </p><p>System.out.println(sb.toString()); </p><p>response.getWriter().write(sb.toString()); </p><p>} </p><p>protected void doPost(HttpServletRequestrequest, HttpServletResponse response) throws ServletException, IOException { </p><p>doGet(request, response); </p><p>} </p><p>} </p><p>5、效果截图 </p><p><img src="file:///C:/Users/hgy/AppData/Local/Temp/msohtmlclip1/01/clip_image001.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>以前工作内容（搬运网易云笔记）</title>
    <link href="http://hugenye.github.io/2019/09/24/old-work/"/>
    <id>http://hugenye.github.io/2019/09/24/old-work/</id>
    <published>2019-09-24T00:46:26.000Z</published>
    <updated>2019-09-24T01:06:22.535Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="发送短信工具集（阿里云）"><a href="#发送短信工具集（阿里云）" class="headerlink" title="发送短信工具集（阿里云）"></a>发送短信工具集（阿里云）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.util;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.DefaultAcsClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.IAcsClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.exceptions.ClientException;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.exceptions.ServerException;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.http.MethodType;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.profile.DefaultProfile;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.profile.IClientProfile;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendSMS</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sendSm</span><span class="params">(String phone)</span> <span class="keyword">throws</span> ClientException</span>&#123;</span><br><span class="line"><span class="comment">//设置超时时间-可自行调整</span></span><br><span class="line">System.setProperty(<span class="string">"sun.net.client.defaultConnectTimeout"</span>, <span class="string">"10000"</span>);</span><br><span class="line">System.setProperty(<span class="string">"sun.net.client.defaultReadTimeout"</span>, <span class="string">"10000"</span>);</span><br><span class="line"><span class="comment">//初始化ascClient需要的几个参数</span></span><br><span class="line"><span class="keyword">final</span> String product = <span class="string">"Dysmsapi"</span>;<span class="comment">//短信API产品名称（短信产品名固定，无需修改）</span></span><br><span class="line"><span class="keyword">final</span> String domain = <span class="string">"dysmsapi.aliyuncs.com"</span>;<span class="comment">//短信API产品域名（接口地址固定，无需修改）</span></span><br><span class="line"><span class="comment">//替换成你的AK</span></span><br><span class="line"><span class="keyword">final</span> String accessKeyId = <span class="string">"LTAISz2Gh0v0hApy"</span>;<span class="comment">//你的accessKeyId,参考本文档步骤2</span></span><br><span class="line"><span class="keyword">final</span> String accessKeySecret = <span class="string">"PD9ReGIxxDMski8WAY9HSv9yBOebdk"</span>;<span class="comment">//你的accessKeySecret，参考本文档步骤2</span></span><br><span class="line"><span class="comment">//初始化ascClient,暂时不支持多region（请勿修改）</span></span><br><span class="line">IClientProfile profile = DefaultProfile.getProfile(<span class="string">"cn-hangzhou"</span>, accessKeyId,</span><br><span class="line">accessKeySecret);</span><br><span class="line">DefaultProfile.addEndpoint(<span class="string">"cn-hangzhou"</span>, <span class="string">"cn-hangzhou"</span>, product, domain);</span><br><span class="line">IAcsClient acsClient = <span class="keyword">new</span> DefaultAcsClient(profile);</span><br><span class="line"><span class="comment">//组装请求对象</span></span><br><span class="line">SendSmsRequest request = <span class="keyword">new</span> SendSmsRequest();</span><br><span class="line"><span class="comment">//使用post提交</span></span><br><span class="line">request.setMethod(MethodType.POST);</span><br><span class="line"><span class="comment">//必填:待发送手机号。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式；发送国际/港澳台消息时，接收号码格式为00+国际区号+号码，如“0085200000000”</span></span><br><span class="line">request.setPhoneNumbers(phone);</span><br><span class="line"><span class="comment">//必填:短信签名-可在短信控制台中找到</span></span><br><span class="line">request.setSignName(<span class="string">"追能云"</span>);</span><br><span class="line"><span class="comment">//必填:短信模板-可在短信控制台中找到</span></span><br><span class="line">request.setTemplateCode(<span class="string">"SMS_127215050"</span>);</span><br><span class="line"><span class="keyword">int</span> code=randomInt();</span><br><span class="line"><span class="comment">//可选:模板中的变量替换JSON串,如模板内容为"亲爱的$&#123;name&#125;,您的验证码为$&#123;code&#125;"时,此处的值为</span></span><br><span class="line"><span class="comment">//友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含\r\n的情况在JSON中需要表示成\\r\\n,否则会导致JSON在服务端解析失败</span></span><br><span class="line">request.setTemplateParam(<span class="string">"&#123;\"code\":\""</span>+code+<span class="string">"\"&#125;"</span>);</span><br><span class="line">System.out.print(code);</span><br><span class="line"><span class="comment">//可选-上行短信扩展码(扩展码字段控制在7位或以下，无特殊需求用户请忽略此字段)</span></span><br><span class="line"><span class="comment">//request.setSmsUpExtendCode("90997");</span></span><br><span class="line"><span class="comment">//可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者</span></span><br><span class="line"><span class="comment">//request.setOutId("yourOutId");</span></span><br><span class="line"><span class="comment">//请求失败这里会抛ClientException异常</span></span><br><span class="line">SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request);</span><br><span class="line"><span class="keyword">if</span>(sendSmsResponse.getCode() != <span class="keyword">null</span> &amp;&amp; sendSmsResponse.getCode().equals(<span class="string">"OK"</span>)) &#123;</span><br><span class="line"><span class="comment">//请求成功</span></span><br><span class="line">System.out.print(<span class="string">"请求成功"</span>);</span><br><span class="line"><span class="keyword">return</span> code;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//失败</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6位数随机数</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">randomInt</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> verifyCode = (<span class="keyword">new</span> Random().nextInt(<span class="number">899999</span>) + <span class="number">100000</span>);</span><br><span class="line">         <span class="keyword">return</span> verifyCode;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClientException </span>&#123;</span><br><span class="line">sendSm(<span class="string">"手机号"</span>);</span><br><span class="line"><span class="comment">//如果想要一个接口servlet就调用该工具集</span></span><br><span class="line"><span class="comment">//public void doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment">//throws ServletException, IOException &#123;</span></span><br><span class="line"><span class="comment">///*String phone=request.getParameter("phone");</span></span><br><span class="line"><span class="comment">//String number=request.getParameter("number");*/</span></span><br><span class="line"><span class="comment">////发送短信</span></span><br><span class="line"><span class="comment">//         try &#123;</span></span><br><span class="line"><span class="comment">//int code =SendSMS.sendSm("手机号");</span></span><br><span class="line"><span class="comment">//System.out.print("生成的随机6位数："+code);</span></span><br><span class="line"><span class="comment">///*System.out.print("填写的随机6位数="+number);</span></span><br><span class="line"><span class="comment">//    if(number.equals(code))&#123;</span></span><br><span class="line"><span class="comment">//    System.out.print("验证成功！");</span></span><br><span class="line"><span class="comment">//    &#125;else&#123;</span></span><br><span class="line"><span class="comment">//    System.out.print("验证失败！");</span></span><br><span class="line"><span class="comment">//    &#125;*/</span></span><br><span class="line"><span class="comment">//&#125; catch (ClientException e) &#123;</span></span><br><span class="line"><span class="comment">//// TODO Auto-generated catch block</span></span><br><span class="line"><span class="comment">//e.printStackTrace();</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//   </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="工作" scheme="http://hugenye.github.io/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>面试题</title>
    <link href="http://hugenye.github.io/2019/09/22/interview/"/>
    <id>http://hugenye.github.io/2019/09/22/interview/</id>
    <published>2019-09-22T13:34:45.000Z</published>
    <updated>2019-10-22T13:58:14.145Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="杭州智库"><a href="#杭州智库" class="headerlink" title="杭州智库"></a><strong>杭州智库</strong></h2><p>1      set集合的底层结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">红黑树</span><br></pre></td></tr></table></figure><p>2       hashmap的底层结构 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">底层结构是hash表数据结构，可以存入null键和null值，该集合线程不同步，效率较高，代替hashTable。实际上是一个“链表的数组”的数据结构。</span><br></pre></td></tr></table></figure><p>3      案例 图片上传的优化方法</p><p>4      Redis有几种数据类型，分别是什么？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5种，分别是String、list、set、hash、sort set；</span><br><span class="line">string 字符串（可以为整形、浮点型和字符串，统称为元素）</span><br><span class="line">list 列表（实现队列,元素不唯一，先入先出原则）</span><br><span class="line">set 集合（各不相同的元素）</span><br><span class="line">hash hash散列值（hash的key必须是唯一的）</span><br><span class="line">sort set 有序集合</span><br></pre></td></tr></table></figure><p>5     Mysql是什么锁机制  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">行锁</span><br></pre></td></tr></table></figure><p>6    联合索引<br>$$<br>实例问题：有ABC联合的索引，那么哪种情况会触发联合索引。<br>1，AB      2.BC    3.AC   4.CBA<br>$$<br>本文主要总结查询语句触发联合索引（索引定义中至少包含两个索引列）的几种条件。</p><p>示例如下。首先创建表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> E (e1 <span class="built_in">INT</span>, e2 <span class="built_in">VARCHAR</span>(<span class="number">9</span>), e3 <span class="built_in">INT</span>, PRIMARY <span class="keyword">KEY</span>(e1, e3));</span><br></pre></td></tr></table></figure><p>这样就建立了一个联合索引：e1,e3</p><p>触发联合索引是有条件的：</p><p><strong>1</strong>、使用联合索引的全部索引键，可触发索引的使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：SELECT E.* FROM E WHERE E.e1=1 AND E.e3=2</span><br></pre></td></tr></table></figure><p><strong>2</strong>、使用联合索引的前缀部分索引键，如<strong><strong>“key_part_1</strong></strong>常量<strong><strong>”</strong></strong>，可触发索引的使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：SELECT E.* FROM E WHERE E.e1=1</span><br></pre></td></tr></table></figure><p>【注意】 </p><p><strong>3</strong>、使用部分索引键，但不是联合索引的前缀部分，如<strong><strong>“key_part_2</strong></strong>常量<strong><strong>”</strong></strong>，不可触发索引的使用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> E.* <span class="keyword">FROM</span> E <span class="keyword">WHERE</span> E.e3=<span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>4</strong>、使用联合索引的全部索引键，但索引键不是<strong><strong>AND</strong></strong>操作，不可触发索引的使用。</p><h2 id="罗万信息笔试题"><a href="#罗万信息笔试题" class="headerlink" title="罗万信息笔试题"></a>罗万信息笔试题</h2><ol><li><p>==和equals的区别</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">　1）对于==，比较的是值是否相等</span><br><span class="line"></span><br><span class="line">            如果作用于基本数据类型的变量，则直接比较其存储的 “值”是否相等；</span><br><span class="line"></span><br><span class="line">　　　　如果作用于引用类型的变量，则比较的是所指向的对象的地址</span><br><span class="line"></span><br><span class="line">　　2）对于equals方法，注意：equals方法不能作用于基本数据类型的变量，equals继承Object类，比较的是是否是同一个对象</span><br><span class="line"></span><br><span class="line">　　　　如果没有对equals方法进行重写，则比较的是引用类型的变量所指向的对象的地址；</span><br><span class="line"></span><br><span class="line">　　　　诸如String、Date等类对equals方法进行了重写的话，比较的是所指向的对象的内容。</span><br><span class="line">原文链接：https://blog.csdn.net/qq_27471405/article/details/81010094</span><br></pre></td></tr></table></figure></li><li><p>abstract class和interface 的区别</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">从形态上看</span><br><span class="line">抽象类可以给出一些成员的实现，接口却不包含成员的实现；</span><br><span class="line">抽象类的抽象成员可被子类部分实现，接口的成员需要实现类完全实现；</span><br><span class="line">一个类只能继承一个抽象类，但可实现多个接口等等。</span><br><span class="line"></span><br><span class="line">如何区分</span><br><span class="line">1.类是对对象的抽象，抽象类是对类的抽象；</span><br><span class="line">  接口是对行为的抽象。</span><br><span class="line">2.若行为跨越不同类的对象，可使用接口；</span><br><span class="line">  对于一些相似的类对象，用继承抽象类。</span><br><span class="line">3.抽象类是从子类中发现了公共的东西，泛化出父类，然后子类继承父类；</span><br><span class="line">  接口是根本不知子类的存在，方法如何实现还不确认，预先定义。</span><br><span class="line">原文链接：https://blog.csdn.net/MrBaymax/article/details/84328918</span><br></pre></td></tr></table></figure></li><li><blockquote><p>怎么唤醒一个阻塞的线程</p></blockquote><p>如果线程是因为调用了wait()、sleep()或者join()方法而导致的阻塞，可以中断线程，并且通过抛出InterruptedException来唤醒它；如果线程遇到了IO阻塞，无能为力，因为IO是操作系统实现的，Java代码并没有办法直接接触到操作系统。</p><p>​</p></li><li><p>String,StringBuffer和StringBuilder的区别；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1 .三者在执行速度方面的比较：StringBuilder &gt;  StringBuffer  &gt;  String</span><br><span class="line">2 .String &lt;（StringBuffer，StringBuilder）的原因</span><br><span class="line">String：字符串常量</span><br><span class="line">StringBuffer：字符串常量</span><br><span class="line">StringBuilder：字符串常量</span><br><span class="line">StringBuilder：线程非安全的</span><br><span class="line">StringBuffer：线程安全的</span><br><span class="line">当我们在字符串缓冲去被多个线程使用是，JVM不能保证StringBuilder的操作是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。</span><br><span class="line">当然大多数情况下就是我们是在单线程下进行的操作，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。</span><br><span class="line">对于三者使用的总结：  1.如果要操作少量的数据用 = String</span><br><span class="line">                   2.单线程操作字符串缓冲区 下操作大量数据 = StringBuilder</span><br><span class="line">                   3.多线程操作字符串缓冲区 下操作大量数据 = StringBuffer</span><br></pre></td></tr></table></figure></li><li><p>实现多线程有几种方法？分别是什么？实现线程同步有几种方法，分别是什么？</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">实现多线程有三种方法：</span><br><span class="line">1.继承thread类，重写run方法；</span><br><span class="line">2.实现Runnable接口；</span><br><span class="line">3.实现Callable接口。</span><br><span class="line">实现线程同步有五种方法：</span><br><span class="line">1.同步方法（synchronized关键字修饰的方法）；</span><br><span class="line">2.同步代码块（synchronized关键字修饰的语句块）；</span><br><span class="line">3.使用特殊域变量（volatile）实现线程同步；</span><br><span class="line">4.使用重入锁实现线程同步（ReenreantLock）；</span><br><span class="line">5.使用局部变量实现线程同步（ThreadLocal ）。</span><br><span class="line">原文链接：</span><br><span class="line">https://www.cnblogs.com/jiansen/p/7351872.html</span><br></pre></td></tr></table></figure><h2 id="用友笔试题"><a href="#用友笔试题" class="headerlink" title="用友笔试题"></a>用友笔试题</h2><ol><li><p>Java语言中，处理IO的方式都有<strong><strong>_ , _</strong></strong>和____三种。(NIO,BIO,AIO)</p></li><li><p>求交换两个变量的值，不使用第三个变量。即a=3,b=5,交换之后a=5,b=3; ？</p><p>看到这个题在没有考虑必须用JAVA的情况下，我用了C语言的移位的骚操作（转化为二进制3=011，5=101），面试官都笑了。</p><p>百度了一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有两种解法, 一种用算术算法, 一种用^(异或) </span></span><br><span class="line">a = a + b; </span><br><span class="line">b = a - b; </span><br><span class="line">a = a - b; </span><br><span class="line">or </span><br><span class="line">a = a^b;<span class="comment">// 只能对int,char.. </span></span><br><span class="line">b = a^b; </span><br><span class="line">a = a^b; </span><br><span class="line">or </span><br><span class="line">a ^= b ^= a;</span><br></pre></td></tr></table></figure></li><li><p>求两个字符串的最长公共字符串</p><p>​</p></li><li><p>数据库笔试题</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br></pre></td><td class="code"><pre><span class="line">Student(Sid,Sname,Sage,Ssex)学生表</span><br><span class="line">Sid：学号</span><br><span class="line">Sname：学生姓名</span><br><span class="line">Sage：学生年龄</span><br><span class="line">Ssex：学生性别</span><br><span class="line">Course(Cid,Cname,T<span class="comment">#)课程表</span></span><br><span class="line">Cid：课程编号</span><br><span class="line">Cname：课程名称</span><br><span class="line">Tid：教师编号</span><br><span class="line">SC(Sid,Cid,score)成绩表</span><br><span class="line">Sid：学号</span><br><span class="line">Cid：课程编号</span><br><span class="line">score：成绩</span><br><span class="line">Teacher(Tid,Tname)教师表</span><br><span class="line">Tid：教师编号：</span><br><span class="line">Tname：教师名字</span><br><span class="line">问题：</span><br><span class="line"></span><br><span class="line">1、查询“001”课程比“002”课程成绩高的所有学生的学号</span><br><span class="line"><span class="keyword">select</span> a.sid <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,score <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'001'</span>)a,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,score <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'002'</span>)b </span><br><span class="line"><span class="keyword">where</span> a.sid = b.sid <span class="keyword">and</span> a.score&gt;b.score;</span><br><span class="line">2、查询平均成绩大于60分的同学的学号和平均成绩</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) <span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> </span><br><span class="line"><span class="keyword">having</span> <span class="keyword">avg</span>(score)&gt;<span class="number">60</span>;</span><br><span class="line">3、查询所有同学的学号、姓名、选课数、总成绩</span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname,count_cid <span class="keyword">as</span> 选课数, </span><br><span class="line">sum_score  <span class="keyword">as</span> 总成绩</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">count</span>(cid) <span class="keyword">as</span> count_cid,<span class="keyword">sum</span>(score) <span class="keyword">as</span> sum_score </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> )sc</span><br><span class="line"><span class="keyword">on</span> s.sid = sc.sid;</span><br><span class="line">4、查询姓‘李’的老师的个数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(tname)</span><br><span class="line"><span class="keyword">from</span> teacher </span><br><span class="line"><span class="keyword">where</span> tname <span class="keyword">like</span> <span class="string">'李%'</span>;</span><br><span class="line">5、查询没有学过“叶平”老师可的同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">where</span> s.sid <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">DISTINCT</span> <span class="keyword">sid</span> </span><br><span class="line">    <span class="keyword">from</span> sc <span class="keyword">as</span> sc </span><br><span class="line">    <span class="keyword">where</span> sc.cid <span class="keyword">in</span> (</span><br><span class="line">        <span class="keyword">select</span> cid </span><br><span class="line">        <span class="keyword">from</span> course <span class="keyword">as</span> c </span><br><span class="line">        <span class="keyword">left</span> <span class="keyword">join</span> teacher <span class="keyword">as</span> t <span class="keyword">on</span> c.tid = t.tid </span><br><span class="line">        <span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>)</span><br><span class="line">);</span><br><span class="line">6、查询学过“叶平”老师所教的所有课的同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">where</span> s.sid <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> sc.sid </span><br><span class="line">  <span class="keyword">from</span> sc <span class="keyword">as</span> sc </span><br><span class="line">  <span class="keyword">where</span> sc.cid <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> cid </span><br><span class="line">    <span class="keyword">from</span> course <span class="keyword">as</span> c </span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> teacher <span class="keyword">as</span> t <span class="keyword">on</span> c.tid = t.tid </span><br><span class="line">    <span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>)</span><br><span class="line">        <span class="keyword">group</span> <span class="keyword">by</span> sc.sid </span><br><span class="line">    <span class="keyword">HAVING</span> <span class="keyword">count</span>(cid)=</span><br><span class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(cid) </span><br><span class="line">     <span class="keyword">from</span> course <span class="keyword">as</span> c <span class="keyword">left</span> <span class="keyword">join</span> teacher <span class="keyword">as</span> t <span class="keyword">on</span> c.tid = t.tid </span><br><span class="line">     <span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>)</span><br><span class="line">);</span><br><span class="line">7、查询学过“011”并且也学过编号“002”课程的同学的学号、姓名：</span><br><span class="line"><span class="keyword">SELECT</span> s.sid,s.sname </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">as</span> sc <span class="keyword">on</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">where</span> sc.cid = <span class="string">'001'</span></span><br><span class="line"><span class="keyword">and</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">  <span class="keyword">select</span> * <span class="keyword">from</span> sc <span class="keyword">as</span> sc_2 </span><br><span class="line">  <span class="keyword">where</span> sc.sid = sc_2.sid </span><br><span class="line">  <span class="keyword">and</span> sc_2.cid=<span class="string">'002'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">as</span> sc </span><br><span class="line"><span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> sc.cid = <span class="string">'001'</span></span><br><span class="line"><span class="keyword">and</span> s.sid <span class="keyword">in</span> (</span><br><span class="line">  <span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">as</span> sc_2 </span><br><span class="line">  <span class="keyword">where</span> sc_2.cid=<span class="string">'002'</span> </span><br><span class="line">  <span class="keyword">and</span> sc_2.sid = sc.sid);</span><br><span class="line">8、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> student.sid,student.sname,score,</span><br><span class="line">     (<span class="keyword">select</span> score <span class="keyword">from</span> sc <span class="keyword">as</span> sc_2 </span><br><span class="line">      <span class="keyword">where</span> sc_2.sid = student.sid </span><br><span class="line">      <span class="keyword">and</span> sc_2.cid = <span class="string">'002'</span>) <span class="keyword">as</span> score2 </span><br><span class="line">      <span class="keyword">from</span> student,sc </span><br><span class="line">      <span class="keyword">where</span> student.sid=sc.sid <span class="keyword">and</span> cid = <span class="string">'001'</span>) s_2</span><br><span class="line"><span class="keyword">where</span> score2&lt;score;</span><br><span class="line">9、查询所有课程成绩小于60的同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> s.sid </span><br><span class="line"><span class="keyword">from</span> student s,sc </span><br><span class="line"><span class="keyword">where</span> s.sid=sc.sid <span class="keyword">and</span> score&gt;<span class="number">60</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">EXISTS</span> (</span><br><span class="line"><span class="keyword">select</span> s.sid <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> sc.sid = s.sid <span class="keyword">and</span> sc.score&gt;<span class="number">60</span>);</span><br><span class="line">10、查询没有学全所有课的同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> student s ,sc sc </span><br><span class="line"><span class="keyword">where</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sc.cid)&lt;(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(cid) </span><br><span class="line"><span class="keyword">from</span> course);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> sc sc <span class="keyword">on</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sc.cid)&lt;</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(cid) <span class="keyword">from</span> course);</span><br><span class="line">11、查询至少有一门课与学号为“1001”同学所学相同的同学的学号和姓名：</span><br><span class="line"><span class="keyword">select</span> student.sid,sname</span><br><span class="line"><span class="keyword">from</span> student,sc </span><br><span class="line"><span class="keyword">where</span> student.sid = sc.sid</span><br><span class="line"><span class="keyword">and</span> cid <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> cid <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1001'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> sc sc <span class="keyword">left</span> <span class="keyword">join</span> student <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> sc.cid <span class="keyword">in</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1001'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sc_1.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> sc sc_1 <span class="keyword">left</span> <span class="keyword">join</span> student <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> sc_1.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line"><span class="keyword">exists</span> (<span class="keyword">select</span> sc_2.cid <span class="keyword">from</span> sc <span class="keyword">as</span> sc_2 </span><br><span class="line"><span class="keyword">where</span> sc_1.cid = sc_2.cid </span><br><span class="line"><span class="keyword">and</span> sc_2.sid = <span class="string">'1001'</span>);</span><br><span class="line">12、查询至少学过学号为“001”同学所有一门课的其他同学学号和姓名；</span><br><span class="line">13、把“SC”表中“叶平”老师教的课的成绩都更改为此课程的平均成绩：</span><br><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score = </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">avg</span>(sc_2.score) <span class="keyword">from</span> sc sc_2  </span><br><span class="line"><span class="keyword">where</span> sc_2.cid = sc.cid)</span><br><span class="line"><span class="keyword">where</span> cid <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> c.cid <span class="keyword">from</span> course c </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> teacher t <span class="keyword">on</span> t.tid = c.tid </span><br><span class="line"><span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>);</span><br><span class="line">14、查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名：</span><br><span class="line"><span class="keyword">select</span> sc_1.sid </span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1002'</span>)a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc sc_1 <span class="keyword">on</span> a.cid = sc_1.cid</span><br><span class="line"><span class="keyword">where</span> sc_1.sid&lt;&gt;<span class="string">'1002'</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc_1.sid </span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sc_1.cid) = </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(cid) <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1002'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> a.sid,s.sname <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">GROUP_CONCAT</span>(cid <span class="keyword">order</span> <span class="keyword">by</span> cid separator <span class="string">','</span>) <span class="keyword">as</span> cid_str </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1002'</span>)b,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">GROUP_CONCAT</span>(cid <span class="keyword">order</span> <span class="keyword">by</span> cid separator <span class="string">','</span>) <span class="keyword">as</span> cid_str </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>)a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s </span><br><span class="line"><span class="keyword">on</span> a.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> a.cid_str = b.cid_str <span class="keyword">and</span> a.sid&lt;&gt;<span class="string">'1002'</span>;</span><br><span class="line">15、删除学习“叶平”老师课的SC表记录：</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">WHERE</span></span><br><span class="line">cid <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> c.cid <span class="keyword">from</span> course c </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> teacher t <span class="keyword">on</span> c.tid=t.tid </span><br><span class="line"><span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>);</span><br><span class="line">16、向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、002号课的平均成绩：</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sc <span class="keyword">select</span> <span class="keyword">sid</span>,<span class="string">'002'</span>,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">avg</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'0022'</span>)</span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'002'</span>);</span><br><span class="line">17、按平均成绩从高到低显示所有学生的“数据库”、“企业管理”、“英语”三门的课程成绩，按如下形式显示：学生ID，数据库，企业管理，英语，有效课程数，有效平均分：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">as</span> 学生<span class="keyword">id</span>,</span><br><span class="line">(<span class="keyword">SELECT</span> score <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> sc.sid = t.sid <span class="keyword">and</span> cid=<span class="string">'004'</span>) <span class="keyword">as</span> 数据库,</span><br><span class="line">(<span class="keyword">select</span> score <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> sc.sid = t.sid <span class="keyword">and</span> cid=<span class="string">'001'</span>) <span class="keyword">as</span> 企业管理,</span><br><span class="line">(<span class="keyword">select</span> score <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> sc.sid = t.sid <span class="keyword">and</span> cid=<span class="string">'015'</span>) <span class="keyword">as</span> 英语,</span><br><span class="line"><span class="keyword">count</span>(cid) <span class="keyword">as</span> 有效课程数, <span class="keyword">avg</span>(t.score) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> t </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(t.score);</span><br><span class="line">18、查询各科成绩最高和最低的分：以如下的形式显示：课程ID，最高分，最低分</span><br><span class="line"><span class="keyword">select</span> l.cid <span class="keyword">as</span> 课程<span class="keyword">id</span>,l.score <span class="keyword">as</span> 最高分,</span><br><span class="line">r.score <span class="keyword">as</span> 最低分</span><br><span class="line"><span class="keyword">from</span> sc l,sc r</span><br><span class="line"><span class="keyword">where</span> l.cid = r.cid</span><br><span class="line"><span class="keyword">and</span> l.score = </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">max</span>(t.score) <span class="keyword">from</span> sc t </span><br><span class="line"><span class="keyword">where</span> l.cid = t.cid <span class="keyword">group</span> <span class="keyword">by</span> t.cid)</span><br><span class="line"><span class="keyword">and</span> r.score = (<span class="keyword">select</span> <span class="keyword">min</span>(t.score) <span class="keyword">from</span> sc t </span><br><span class="line"><span class="keyword">where</span> r.cid = t.cid <span class="keyword">group</span> <span class="keyword">by</span> t.cid)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> l.cid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cid <span class="keyword">as</span> 课程<span class="keyword">id</span>,<span class="keyword">max</span>(score) <span class="keyword">as</span> 最高分,</span><br><span class="line"><span class="keyword">min</span>(score) <span class="keyword">as</span> 最低分</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid;</span><br><span class="line">19、按各科平均成绩从低到高和及格率的百分数从高到低顺序：</span><br><span class="line"><span class="keyword">SELECT</span> t.cid <span class="keyword">as</span> 课程号,</span><br><span class="line">c.cname <span class="keyword">as</span> 课程名,</span><br><span class="line"><span class="keyword">COALESCE</span>(<span class="keyword">avg</span>(score),<span class="number">0</span>) <span class="keyword">as</span> 平均成绩,</span><br><span class="line"><span class="number">100</span>*<span class="keyword">sum</span>(<span class="keyword">case</span> </span><br><span class="line"><span class="keyword">when</span> <span class="keyword">COALESCE</span>(score,<span class="number">0</span>)&gt;=<span class="number">60</span> </span><br><span class="line"><span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">count</span>(*) <span class="keyword">as</span> 及格百分数</span><br><span class="line"><span class="keyword">from</span> sc t</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course c </span><br><span class="line"><span class="keyword">on</span> t.cid = c.cid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> t.cid</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">100</span>*<span class="keyword">sum</span>(<span class="keyword">case</span> </span><br><span class="line"><span class="keyword">when</span> <span class="keyword">COALESCE</span>(score,<span class="number">0</span>)&gt;=<span class="number">60</span> </span><br><span class="line"><span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">count</span>(*);</span><br><span class="line">20、查询如下课程平均成绩和及格率的百分数(用”1行”显示): 企业管理（001），马克思（002），OO&amp;UML （003），数据库（004）：</span><br><span class="line">21、查询不同老师所教不同课程平均分从高到低显示：</span><br><span class="line"><span class="keyword">select</span> t.tid <span class="keyword">as</span> 教师<span class="keyword">id</span>,</span><br><span class="line">t.tname <span class="keyword">as</span> 教师姓名,</span><br><span class="line">sc.cid <span class="keyword">as</span> 课程<span class="keyword">id</span>,</span><br><span class="line"><span class="keyword">avg</span>(score) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> sc</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> course c <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> teacher t <span class="keyword">on</span> c.tid = t.tid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.cid </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(sc.score) <span class="keyword">desc</span>;</span><br><span class="line">22、查询如下课程成绩第3名到第6名的学生成绩单：企业管理(001)，马克思(002)，UML(003)，数据库(004)：</span><br><span class="line">23、统计下列各科成绩，各分数段人数：课程ID，课程名称，[100-85],[85-70],[70-60],[ 小于60] ：</span><br><span class="line"><span class="keyword">select</span> sc.cid <span class="keyword">as</span> 课程<span class="keyword">id</span>,cname <span class="keyword">as</span> 课程名称,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score <span class="keyword">between</span> <span class="number">85</span> <span class="keyword">and</span> <span class="number">100</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> <span class="string">'[100-85]'</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score <span class="keyword">between</span> <span class="number">70</span> <span class="keyword">and</span> <span class="number">85</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> <span class="string">'[85-70]'</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">70</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> <span class="string">'[70-60]'</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&lt;<span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> <span class="string">'[60-0]'</span></span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> sc </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course <span class="keyword">as</span> c</span><br><span class="line"><span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.cid;</span><br><span class="line">24、查询学生平均成绩及其名次：</span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span>+(<span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> 平均成绩) </span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) <span class="keyword">as</span> 平均成绩 </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>)t1 </span><br><span class="line"><span class="keyword">where</span> 平均成绩&gt;t2.平均成绩) <span class="keyword">as</span> 名次,</span><br><span class="line"><span class="keyword">sid</span> <span class="keyword">as</span> 学生学号,平均成绩 </span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) 平均成绩 <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 平均成绩 <span class="keyword">desc</span>;</span><br><span class="line">25、查询各科成绩前三名的记录（不考虑成绩并列情况）：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,cid,score</span><br><span class="line"><span class="keyword">from</span> sc sc_1</span><br><span class="line"><span class="keyword">where</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="number">3</span>) <span class="keyword">from</span> sc sc_2 </span><br><span class="line"><span class="keyword">where</span> sc_1.cid = sc_2.cid </span><br><span class="line"><span class="keyword">and</span> sc_2.score&gt;=sc_1.score)&lt;=<span class="number">2</span> </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sc_1.cid</span><br><span class="line">);</span><br><span class="line">26、查询每门课程被选修的学生数：</span><br><span class="line"><span class="keyword">select</span> cid, <span class="keyword">count</span>(<span class="keyword">sid</span>)</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid;</span><br><span class="line">27、查询出只选修一门课程的全部学生的学号和姓名：</span><br><span class="line"><span class="keyword">select</span> sc.sid,s.sname,</span><br><span class="line"><span class="keyword">count</span>(sc.cid) <span class="keyword">as</span> 课程数</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> sc</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.sid</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sc.cid)=<span class="number">1</span>;</span><br><span class="line">28、查询男生、女生人数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(ssex) <span class="keyword">as</span> 男生人数</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ssex</span><br><span class="line"><span class="keyword">having</span> ssex = <span class="string">'男'</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="number">2</span>) <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> ssex = <span class="string">'女'</span>;</span><br><span class="line">29、查询姓“张”的学生名单：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname</span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">'张%'</span>;</span><br><span class="line">30、查询同名同姓的学生名单，并统计同名人数：</span><br><span class="line"><span class="keyword">select</span> sname,<span class="keyword">count</span>(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(<span class="number">8</span>)&gt;<span class="number">1</span>;</span><br><span class="line">31、1981年出生的学生名单（注：student表中sage列的类型是datetime）:</span><br><span class="line">32、查询平均成绩大于85的所有学生的学号、姓名和平均成绩：</span><br><span class="line"><span class="keyword">select</span> s.sname,sc.sid,<span class="keyword">avg</span>(sc.score) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> sc</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.sid </span><br><span class="line"><span class="keyword">having</span> <span class="keyword">avg</span>(sc.score)&gt;<span class="number">85</span>;</span><br><span class="line">33、查询每门课程的平均成绩，结果按平均成绩升序排序，平均成绩相同时，按课程号降序排列：</span><br><span class="line"><span class="keyword">select</span> cid,<span class="keyword">avg</span>(score)</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(score),cid <span class="keyword">desc</span>;</span><br><span class="line">34、查询课程名称为“数据库”，且分数低于60的学生名字和分数：</span><br><span class="line"><span class="keyword">select</span> c.cname,s.sid,s.sname,sc.score</span><br><span class="line"><span class="keyword">from</span> course c</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student s <span class="keyword">on</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">where</span> c.cname = <span class="string">'数据库'</span> <span class="keyword">and</span> sc.score&lt;<span class="number">60</span>;</span><br><span class="line">35、查询所有学生的选课情况：</span><br><span class="line"><span class="keyword">select</span> sc.sid,sc.cid,s.sname,c.cname</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> course c <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s <span class="keyword">on</span> sc.sid = s.sid;</span><br><span class="line">36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> s.sid,s.sname,sc.cid,sc.score</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s <span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course c <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">where</span> sc.score&gt;<span class="number">70</span>;</span><br><span class="line">37、查询不及格的课程，并按课程号从大到小的排列：</span><br><span class="line"><span class="keyword">select</span> cid</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> score&lt;<span class="number">60</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> cid;</span><br><span class="line">38、查询课程编号为“003”且课程成绩在80分以上的学生的学号和姓名：</span><br><span class="line"><span class="keyword">select</span> sc.sid,s.sname </span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s <span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> sc.cid = <span class="string">'003'</span> <span class="keyword">and</span> sc.score&gt;<span class="number">80</span>;</span><br><span class="line">39、求选了课程的学生人数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="number">2</span>) <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc)a;</span><br><span class="line">40、查询选修“叶平”老师所授课程的学生中，成绩最高的学生姓名及其成绩：</span><br><span class="line"><span class="keyword">select</span> s.sname,sc.score</span><br><span class="line"><span class="keyword">from</span> sc sc </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s <span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course c <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> teacher t <span class="keyword">on</span> c.tid = t.tid</span><br><span class="line"><span class="keyword">where</span> t.tname = <span class="string">'叶平'</span></span><br><span class="line"><span class="keyword">and</span> sc.score = (</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(score) </span><br><span class="line"><span class="keyword">from</span> sc sc_1 </span><br><span class="line"><span class="keyword">where</span> sc.cid = sc_1.cid);</span><br><span class="line">41、查询各个课程及相应的选修人数：</span><br><span class="line"><span class="keyword">select</span> cid,<span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cid;</span><br><span class="line">42、查询不同课程成绩相同的学生和学号、课程号、学生成绩：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">DISTINCT</span> a.sid,a.cid,a.score</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> a ,sc <span class="keyword">as</span> b </span><br><span class="line"><span class="keyword">where</span> a.score = b.score</span><br><span class="line"><span class="keyword">and</span> a.cid &lt;&gt; b.cid;</span><br><span class="line">43、查询每门课程成绩最好的前两名：</span><br><span class="line"><span class="keyword">SELECT</span> s1.* <span class="keyword">FROM</span> SC s1 <span class="keyword">WHERE</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> SC s2 <span class="keyword">WHERE</span></span><br><span class="line">s1.cid=s2.cid <span class="keyword">AND</span> s2.score&gt;=s1.score</span><br><span class="line">)&lt;=<span class="number">2</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> s1.cid,s1.score <span class="keyword">DESC</span>;</span><br><span class="line">44、统计每门课程的学生选修人数(超过10人的课程才统计)。要求输出课程号和选修人数，查询结果按人数降序排序，若人数相同，按课程号升序排序：</span><br><span class="line"><span class="keyword">select</span> cid <span class="keyword">as</span> 课程号,<span class="keyword">count</span>(<span class="number">8</span>) <span class="keyword">as</span> 选修人数</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">count</span>(<span class="keyword">sid</span>)&gt;<span class="number">10</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span>(<span class="number">8</span>) <span class="keyword">desc</span>,cid;</span><br><span class="line">45、检索至少选修两门课程的学生学号：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(<span class="number">8</span>)&gt;=<span class="number">2</span>;</span><br><span class="line">46、查询全部学生选修的课程和课程号和课程名：</span><br><span class="line"><span class="keyword">select</span> cid,cname</span><br><span class="line"><span class="keyword">from</span> course </span><br><span class="line"><span class="keyword">where</span> cid <span class="keyword">in</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cid);</span><br><span class="line">47、查询没学过”叶平”老师讲授的任一门课程的学生姓名：</span><br><span class="line"><span class="keyword">select</span> sname </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">sid</span> </span><br><span class="line">    <span class="keyword">from</span> sc,course,teacher </span><br><span class="line">    <span class="keyword">where</span> course.tid = teacher.tid <span class="keyword">and</span> sc.cid = course.cid </span><br><span class="line">    <span class="keyword">and</span> teacher.tname=<span class="string">'叶平'</span></span><br><span class="line">);</span><br><span class="line">48、查询两门以上不及格课程的同学的学号以及其平均成绩：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(<span class="keyword">COALESCE</span>(score,<span class="number">0</span>))</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">sid</span> </span><br><span class="line">    <span class="keyword">from</span> sc </span><br><span class="line">    <span class="keyword">where</span> score&lt;<span class="number">60</span> </span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> </span><br><span class="line">    <span class="keyword">having</span> <span class="keyword">count</span>(<span class="number">8</span>)&gt;<span class="number">2</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>;</span><br><span class="line">49、检索“004”课程分数小于60，按分数降序排列的同学学号：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,score <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'004'</span> <span class="keyword">and</span> score&lt;<span class="number">60</span> <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span>;</span><br><span class="line">50、删除“002”同学的“001”课程的成绩：</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span> = <span class="string">'002'</span><span class="keyword">and</span> cid = <span class="string">'001'</span>;</span><br></pre></td></tr></table></figure><h2 id="呆萝卜面试题"><a href="#呆萝卜面试题" class="headerlink" title="呆萝卜面试题"></a>呆萝卜面试题</h2><ol><li><p>list和map的区别？map的底层结构？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List：是存储单列数据的集合，存储的数据是有序并且是可以重复的</span><br><span class="line">Map：存储双列数据的集合，通过键值对存储数据，存储的数据是无序的，Key值不能重复，value值可以重复</span><br><span class="line">map的底层是由数组和链表组成。</span><br></pre></td></tr></table></figure></li><li><p>HashMap中通过key获取value源码剖析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在一个长度为n的数组中插入一个元素的算法复杂度是多少？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">o(n)</span><br></pre></td></tr></table></figure></li><li><p>int、double、float的大小？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">一般情况下：</span><br><span class="line"></span><br><span class="line">32位编译器：</span><br><span class="line"></span><br><span class="line">char      short      int      long      float      double      指针</span><br><span class="line"></span><br><span class="line">   1            2           4         4            4              8       </span><br><span class="line"></span><br><span class="line">64位编译器：</span><br><span class="line"></span><br><span class="line">char      short      int      long      float      double      指针</span><br><span class="line"></span><br><span class="line">   1            2           4         8            4              8</span><br></pre></td></tr></table></figure></li><li><p>堆和栈的区别？<a href="https://jingyan.baidu.com/article/6c67b1d6a09f9a2786bb1e4a.html" target="_blank" rel="noopener">什么是“堆”,”栈”,”堆栈”,”队列”,它们的区别？</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.堆栈空间分配</span><br><span class="line"></span><br><span class="line"> ①栈（操作系统）：由操作系统自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。</span><br><span class="line"></span><br><span class="line"> ②堆（操作系统）： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表。</span><br><span class="line"></span><br><span class="line">2.堆栈缓存方式</span><br><span class="line"></span><br><span class="line">①栈使用的是一级缓存， 他们通常都是被调用时处于存储空间中，调用完毕立即释放。</span><br><span class="line"></span><br><span class="line">②堆则是存放在二级缓存中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收）。所以调用这些对象的速度要相对来得低一些。</span><br><span class="line"></span><br><span class="line">3.堆栈数据结构区别</span><br><span class="line"></span><br><span class="line">①堆（数据结构）：堆可以被看成是一棵树，如：堆排序。</span><br><span class="line"></span><br><span class="line">②栈（数据结构）：一种先进后出的数据结构。</span><br></pre></td></tr></table></figure></li><li><p>mysql有那些存储引擎？哪一种支持事务？<a href="https://www.cnblogs.com/ray-mr-huang/p/9058053.html" target="_blank" rel="noopener">数据库事务</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在mysql中用的最多的存储引擎有：innodb，bdb，myisam ,memory 等。其中innodb和bdb支持事务而myisam等不支持事务。</span><br></pre></td></tr></table></figure></li><li><p>mysql的索引有哪些<a href="https://blog.csdn.net/liutong123987/article/details/79384395" target="_blank" rel="noopener">什么是索引？Mysql目前主要的几种索引类型</a>？优化索引的方法有哪些<a href="https://www.cnblogs.com/yyjie/p/7486975.html" target="_blank" rel="noopener">索引性能优化</a>？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">索引有：</span><br><span class="line">普通类型（CREATE INDEX)</span><br><span class="line">唯一索引，索引列的值必须唯一（CREATE UNIQUE INDEX)</span><br><span class="line">多列索引</span><br><span class="line">主键索引（PRIMARY KEY），一个表只能有一个</span><br><span class="line">全文索引（FULLTEXT INDEX），InnoDB 不支持</span><br><span class="line">索引的优化方法：</span><br><span class="line">非空字段 NOT NULL，Mysql 很难对空值作查询优化</span><br><span class="line">区分度高，离散度大，作为索引的字段值尽量不要有大量相同值</span><br><span class="line">索引的长度不要太长（比较耗费时间）</span><br></pre></td></tr></table></figure></li><li><p>二叉树的优势（查询速度快）</p></li><li><p>String IOC的理解<a href="https://blog.csdn.net/qq_35347459/article/details/70810725" target="_blank" rel="noopener">Spring中IOC与AOP的理解</a>？它是如何如何实现的（用了哪些设计模式）？</p><p><a href="https://www.cnblogs.com/superjt/p/4311577.html" target="_blank" rel="noopener">Spring的IOC原理[通俗解释一下]</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IOC也称控制反转，其实是和依赖注入的含义是一样的，就是把原先控制代码对象的生产由代码转换到IOC容器中去实现。作用是为了解耦，降低类之间的耦合度，其设计思想就是设计模式的工厂模式，不懂什么是工厂模式的点击此：。。。。。，我们并不需要知道其生产的具体过程，我们只要其产出的对象即可。其工作流程就是：在Spring容器启动的时候，Spring会把你在application.xml中配置好的bean都初始化，在你需要调用的时候，把已经初始化的bean分配给你要调用这些bean的类，而不用去创建一个对象的实例。</span><br><span class="line"></span><br><span class="line">1 工厂模式：BeanFactory、ApplicationContext创建中</span><br><span class="line">2 模板模式：BeanFactory、ApplicationContext实现中</span><br><span class="line">3 代理模式：在AOP实现中用到了JDK的动态代理</span><br><span class="line">4 策略模式：加载资源文件的方式；AOP实现中采用了两种不同的代理，如JDK代理和CGLIB代理</span><br><span class="line">5 单例模式：创建bean</span><br></pre></td></tr></table></figure></li><li><p>用过哪一些设计模式在项目中，如何在具体的项目中使用的？（一般单例经常被使用）</p></li></ol><h2 id="正方"><a href="#正方" class="headerlink" title="正方"></a>正方</h2><ol><li><p>一个叫 team 的表，里面只有一个字段name, 一共有4 条纪录，分别是a,b,c,d, 对应四个球对，现在四个球对进行比赛，用一条sql 语句显示所有可能的比赛组合.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  a.name,b.name <span class="keyword">from</span> team <span class="keyword">AS</span> a,team <span class="keyword">AS</span> b <span class="keyword">where</span> a.name&lt;b.name</span><br><span class="line"><span class="comment">--如果觉得顺序有些乱可以排一下序</span></span><br><span class="line"><span class="keyword">SELECT</span>  a.name,b.name <span class="keyword">from</span> team <span class="keyword">AS</span> a,team <span class="keyword">AS</span> b <span class="keyword">where</span> a.name&lt;b.name  <span class="keyword">ORDER</span> <span class="keyword">BY</span> a.name</span><br></pre></td></tr></table></figure></li><li><p>写一个ArrayList的动态代理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> TestProxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; listProxy=(List&lt;String&gt;) Proxy.newProxyInstance(list.getClass().getClassLoader(), list.getClass().getInterfaces(), <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> method.invoke(list,args);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">       listProxy.add(<span class="string">"你好"</span>) ;</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="面试" scheme="http://hugenye.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap</title>
    <link href="http://hugenye.github.io/2018/07/13/bootstrap/"/>
    <id>http://hugenye.github.io/2018/07/13/bootstrap/</id>
    <published>2018-07-13T07:00:48.000Z</published>
    <updated>2020-07-14T14:06:23.909Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1-Bootstrap是什么？"><a href="#1-Bootstrap是什么？" class="headerlink" title="1.Bootstrap是什么？"></a>1.Bootstrap是什么？</h4><p>​    一个用于快u开发web应用程序和网站的前端框架。Bootstrap是基于HTML、CSS、JAVASCRIPT 。</p><p>​    给我使用的感觉是对于掌握一般的前端知识就可以学会怎么去使用Bootstrap，它包含了功能强大的内置组件，易于定制，最重要的是它是开源的。</p><p>   工作中用到是Bootstrap3，学习在线文档<a href="https://v3.bootcss.com/" target="_blank" rel="noopener">https://v3.bootcss.com/</a></p><h4 id="2-如何使用"><a href="#2-如何使用" class="headerlink" title="2.如何使用"></a>2.如何使用</h4><p>可以选择在官网下载该文件包，或者使用在线工具库，但是要注意，在线的地址有可能会失效，有一次布局没了觉得很奇怪，查看页面代码发现我继承别人代码全部使用在线的工具库，瞬间心凉凉。为了保险起见还是自己下载个安心些。</p><p><em>注意:</em> Bootstrap插件全部依赖jQuery，必须在Bootstrap之前引入。</p><h4 id="3-如何使用它来布局"><a href="#3-如何使用它来布局" class="headerlink" title="3.如何使用它来布局"></a>3.如何使用它来布局</h4><p>作为一个前端不是特别好的开发，我用了Bootstrap可视化布局，个人感觉还不错。组件只要拖拽自己想要的样子就可以。<a href="https://www.runoob.com/try/bootstrap/layoutit/" target="_blank" rel="noopener">https://www.runoob.com/try/bootstrap/layoutit/</a></p><p>通过定义容器的大小，平分为12份（也有24份，23份的，取12份是一打，表示进阶完美的意思），再调整内外边距，最后结合媒体查询，制作出了强大的响应式网格系统。(可以通过重新编译LESS码源来修改12这个数值)。</p><p>1.数据行(.row)必须包含在容器(.container)中，以便赋予合适的对其方式和内边距(padding)。</p><p>2.在行(.row)中可以添加列(.column)，但列数之和不能超过平分的总列数，比如：12.</p><p>3.通过设置内边距(padding)从而创建列于列之间的间距。然后通过为第一列和最后一列设置负值的外距(margin)来抵消内距(padding)的影响。</p><p>4.不希望相邻的两个列紧靠近在一起，就用offset功能来实现。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap Template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 column"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">                    h3. 这是一套可视化布局系统.</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-多种插件的应用"><a href="#4-多种插件的应用" class="headerlink" title="4.多种插件的应用"></a>4.多种插件的应用</h4><h5 id="4-1-Bootstrap-treeView-树形菜单的实际操作总结"><a href="#4-1-Bootstrap-treeView-树形菜单的实际操作总结" class="headerlink" title="4.1 Bootstrap-treeView 树形菜单的实际操作总结"></a>4.1 Bootstrap-treeView 树形菜单的实际操作总结</h5><p>1、资源引用</p><p><code>&lt;``script</code> <code>src=&quot;bootstrap-treeview.js&quot;&gt;</code>script``&gt;`</p><p>2、在一个dom元素绑定该组件</p><p><code>&lt;``div</code> <code>id=&quot;treeview1&quot;&gt;</code>div<code>&gt;&lt;</code>br``&gt;`</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#treeview1'</span>).treeview(&#123;</span><br><span class="line">data: getTree(), <span class="comment">// 获取数据节点</span></span><br><span class="line">levels: <span class="number">5</span>,<span class="comment">//节点层级数</span></span><br><span class="line">color: <span class="string">"#000"</span>,<span class="comment">//每一级通用的 节点字体颜色</span></span><br><span class="line">backColor: <span class="string">"#fff"</span>,<span class="comment">//每一级通用的 节点字背景色</span></span><br><span class="line">onhoverColor: <span class="string">"orange"</span>,<span class="comment">//选中浮动颜色</span></span><br><span class="line">borderColor: <span class="string">"red"</span>,<span class="comment">//设置组件的边框颜色; 设置showBorder为false，如果你不想要一个可见的边框</span></span><br><span class="line">showBorder: <span class="literal">false</span>,</span><br><span class="line">showTags: <span class="literal">true</span>,<span class="comment">//是否在每个节点的右侧显示标签。 其值必须在每个节点的数据结构中提供</span></span><br><span class="line"></span><br><span class="line">highlightSelected: <span class="literal">true</span>,<span class="comment">//是否突出显示选定的节点</span></span><br><span class="line">selectedColor: <span class="string">"#fff"</span>,<span class="comment">//设置选定节点的前景色</span></span><br><span class="line">selectedBackColor: <span class="string">"darkorange"</span>,<span class="comment">//设置选定节点的背景色</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>代码截取</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">**初始化数据</span><br><span class="line">$(<span class="string">'#treeview1'</span>).treeview(<span class="string">'collapseAll'</span>, &#123;  </span><br><span class="line">  data : treedata, </span><br><span class="line">  silent : <span class="literal">false</span><span class="comment">//设置初始化节点关闭    </span></span><br><span class="line">  &#125;);</span><br><span class="line"> **清空搜索选项**</span><br><span class="line"> $(<span class="string">'#treeview1'</span>).treeview(<span class="string">'clearSearch'</span>);</span><br><span class="line"> **查询功能</span><br><span class="line"> <span class="keyword">var</span> search = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> result;</span><br><span class="line"><span class="comment">// 获取要搜索的信息</span></span><br><span class="line"><span class="keyword">var</span> pattern = $.trim($(<span class="string">'#input-search'</span>).val());  </span><br><span class="line"><span class="built_in">console</span>.log(pattern)</span><br><span class="line"><span class="comment">/*var len=0;</span></span><br><span class="line"><span class="comment">for (var i = 0; i &lt; pattern.length; i++) &#123;</span></span><br><span class="line"><span class="comment">if (pattern[i].match(/[^\x00-\xff]/ig) != null) //全角 </span></span><br><span class="line"><span class="comment">len += 2; //如果是全角，占用两个字节</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">len += 1; //半角占用一个字节</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/^[1-9]\d*$|^0$/</span>;</span><br><span class="line"><span class="keyword">if</span>(reg.test(pattern))&#123;</span><br><span class="line"><span class="built_in">window</span>.alert(<span class="string">"搜索内容不可以为纯数字"</span>);</span><br><span class="line">$(<span class="string">'#input-search'</span>).val(<span class="string">""</span>);</span><br><span class="line">clear();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">var</span> options = &#123;      </span><br><span class="line">ignoreCase: <span class="literal">true</span>,      <span class="comment">//忽略大小写</span></span><br><span class="line">exactMatch: <span class="literal">false</span>,    <span class="comment">//必须为精确的值</span></span><br><span class="line">revealResults: <span class="literal">true</span>   <span class="comment">//显示匹配的节点</span></span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> results = $(<span class="string">'#treeview1'</span>).treeview(<span class="string">'search'</span>, [ pattern, options ]);</span><br><span class="line"><span class="comment">//var output = '&lt;p&gt;' + results.length + ' 匹配的搜索结果&lt;/p&gt;';  </span></span><br><span class="line">$.each(results, <span class="function"><span class="keyword">function</span> (<span class="params">index, result</span>) </span>&#123; </span><br><span class="line"><span class="built_in">console</span>.log(result)</span><br><span class="line">result.text += <span class="string">'&lt;p&gt;- &lt;span style="color:red;"&gt;'</span> + result.text + <span class="string">'&lt;/span&gt;&lt;/p&gt;'</span>; </span><br><span class="line"><span class="comment">//console.log(result.text);</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//$('#treediv').html(result.text);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>对treeview组件的操作参考：</p><p>bootstrap treeview树形菜单 动态扩展 连数据库 - 愿生命从容 - 博客园<a href="https://www.cnblogs.com/chenhtblog/p/8342534.htmlbootstrap-treeview" target="_blank" rel="noopener">https://www.cnblogs.com/chenhtblog/p/8342534.htmlbootstrap-treeview</a> 扩展addNode方法 动态添加子节点的方法 - CSDN博客<a href="https://blog.csdn.net/qq_25628235/article/details/51719917bootstrap" target="_blank" rel="noopener">https://blog.csdn.net/qq_25628235/article/details/51719917bootstrap</a> treeview 增删改的正确姿势 - CSDN博客<a href="https://blog.csdn.net/hotqin888/article/details/54798737/" target="_blank" rel="noopener">https://blog.csdn.net/hotqin888/article/details/54798737/</a></p><h5 id="4-2-Bootstrap-FileInput文件上传的使用"><a href="#4-2-Bootstrap-FileInput文件上传的使用" class="headerlink" title="4.2 Bootstrap FileInput文件上传的使用"></a>4.2 Bootstrap FileInput文件上传的使用</h5><p>html页面使用该插件上传图片并显示在轮播图中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span> <span class="attr">style</span>=<span class="string">"height:80%; overflow-y:scroll;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"input-b5"</span> <span class="attr">name</span>=<span class="string">"input-b5"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JavaScript：删除图片必须要配置的两个属性initialPreview和initialPreviewConfig</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#input-b5"</span>).fileinput(&#123;</span><br><span class="line">          <span class="string">'theme'</span>: <span class="string">'fa'</span>,</span><br><span class="line">          showCaption:<span class="literal">true</span>,</span><br><span class="line">          showPreview :<span class="literal">true</span>, <span class="comment">//是否显示预览</span></span><br><span class="line">          overwriteInitial: <span class="literal">false</span>,<span class="comment">//不覆盖已存在的图片</span></span><br><span class="line">          validateInitialCount: <span class="literal">true</span>,</span><br><span class="line">          initialPreview:array,---&gt;预览时可以看到</span><br><span class="line">          language: <span class="string">'zh'</span>,</span><br><span class="line">          uploadExtraData:&#123;<span class="attr">pictitle</span>:<span class="built_in">JSON</span>.stringify(jsonstr)&#125;,</span><br><span class="line">          <span class="string">'uploadUrl'</span>: <span class="string">'/FileUpload'</span>,</span><br><span class="line">          uploadAsync: <span class="literal">false</span>,<span class="comment">//同步上传</span></span><br><span class="line">          allowedFileExtensions: [<span class="string">'png'</span>, <span class="string">'jpg'</span>,<span class="string">'gif'</span>],</span><br><span class="line">          hideThumbnailContent:<span class="literal">true</span>,</span><br><span class="line">          layoutTemplates :&#123;</span><br><span class="line">              <span class="comment">//actionDelete:'', //去除上传预览的缩略图中的删除图标</span></span><br><span class="line">              actionUpload:<span class="string">''</span>,<span class="comment">//去除上传预览缩略图中的上传图片；</span></span><br><span class="line">              <span class="comment">//actionZoom:''   //去除上传预览缩略图中的查看详情预览的缩略图标。</span></span><br><span class="line">          &#125;,</span><br><span class="line">          initialPreviewConfig:con,----&gt;预览时可以看到</span><br><span class="line">      &#125;)</span><br><span class="line">&#125;</span><br><span class="line">配置动态数据需要添加一个函数：</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getImg</span>(<span class="params">dat</span>)</span>&#123;<span class="comment">//获取图片信息</span></span><br><span class="line">  ........</span><br><span class="line"><span class="keyword">return</span> array,con;<span class="comment">//传递配置参数的值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置预览轮播图的界面设置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setimg</span>(<span class="params">dat</span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">删除时添加的两个函数：</span><br><span class="line">$(<span class="string">'#input-b5'</span>).on(<span class="string">'filebeforedelete'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">$.confirm(&#123;</span><br><span class="line">title: <span class="string">'警告!'</span>,</span><br><span class="line">content: <span class="string">'你是否想要删除这个图片?'</span>,</span><br><span class="line">type: <span class="string">'red'</span>,</span><br><span class="line">buttons: &#123;   </span><br><span class="line">确定: &#123;</span><br><span class="line">btnClass: <span class="string">'btn-primary text-white'</span>,</span><br><span class="line">keys: [<span class="string">'enter'</span>],</span><br><span class="line">action: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  resolve();</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">取消: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$.alert(<span class="string">'图片删除被中止! '</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">'#input-b5'</span>).on(<span class="string">'filedeleted'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event,index ,data,val</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.status==<span class="number">200</span>)&#123;<span class="comment">//判断删除成功后要把前端的图片更新一下</span></span><br><span class="line"><span class="keyword">var</span> picimg=val.picimg;<span class="comment">//获取已经修改过的图片数据信息</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="built_in">JSON</span>.parse(picimg).arrs.split(<span class="string">"#"</span>);</span><br><span class="line"><span class="keyword">var</span> b=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="built_in">JSON</span>.parse(picimg).obj)&#123;</span><br><span class="line">b+=<span class="string">""</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">b+=a[i]+<span class="string">"#"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b==<span class="string">""</span>)&#123;</span><br><span class="line"><span class="comment">//显示没图片的界面设置</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">b=b.substring(<span class="number">0</span>,b.length<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重新加载资源数据</span></span><br><span class="line">         setimg(b);</span><br><span class="line">getImg(b);</span><br><span class="line">init();</span><br><span class="line">$(<span class="string">'#myModal'</span>).modal(<span class="string">'hide'</span>);</span><br><span class="line">$(<span class="string">"#strong"</span>).html(<span class="string">"图片删除成功"</span>);</span><br><span class="line">$(<span class="string">'#strong'</span>).removeClass(<span class="string">"hidden"</span>);</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$(<span class="string">'#strong'</span>).addClass(<span class="string">"hidden"</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">"#strong"</span>).html(<span class="string">"图片删除异常"</span>);</span><br><span class="line">$(<span class="string">'#strong'</span>).removeClass(<span class="string">"hidden"</span>);</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$(<span class="string">'#strong'</span>).addClass(<span class="string">"hidden"</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>后端代码</p><p>文件上传代码略，基于公司需求增加了删除图片的功能，在前端js函数获取要删除的图片的信息，在后端添加一个删除图片的对应方法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Bootstrap" scheme="http://hugenye.github.io/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>企业部署阿里云服务器(Windows)</title>
    <link href="http://hugenye.github.io/2018/06/16/aliba/"/>
    <id>http://hugenye.github.io/2018/06/16/aliba/</id>
    <published>2018-06-16T03:07:47.000Z</published>
    <updated>2020-07-19T03:40:08.052Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、用客户账号密码登录阿里"><a href="#一、用客户账号密码登录阿里" class="headerlink" title="一、用客户账号密码登录阿里"></a>一、用客户账号密码登录阿里</h1><p>ps：最好由客户本人注册，代客户注册会使客户的新人优惠失效，因为其识别主机，已经注册过新用户的主机就不能用了。</p><h1 id="二、需要购买的服务器清单"><a href="#二、需要购买的服务器清单" class="headerlink" title="二、需要购买的服务器清单"></a>二、需要购买的服务器清单</h1><p>2核4G 1M</p><p>windows Server 2008 R2企业版 64</p><p>一年大概1500元</p><p>MySQL 5.6</p><p>1核1G</p><p>存储空间100G</p><p>一年大概2300元</p><h1 id="三、-购买域名，添加连接域名"><a href="#三、-购买域名，添加连接域名" class="headerlink" title="三、 购买域名，添加连接域名"></a>三、 购买域名，添加连接域名</h1><p>域名分为一级、二级、三级域名。比如<a href="http://www.baidu.com，baidu是一级域名，www是二级域名；" target="_blank" rel="noopener">www.baidu.com，baidu是一级域名，www是二级域名；</a></p><p>比如etd.<a href="http://www.baidu.com,etdo就是三级域名" target="_blank" rel="noopener">www.baidu.com,etdo就是三级域名</a></p><p>域名解析:</p><p>操作：域名与网站（购买域名，进入控制台）–&gt;云解析DNS–&gt;添加记录</p><p>记录类型选A ，主机记录要写上自己的二级域名或者三级域名。解析线路选择默认，记录值为要绑定的ip（是服务器的公网），TTL选10分钟就可以</p><img src="/2018/06/16/aliba/1.png" title="购买域名，添加记录"><h1 id="四、-配置安全组规则"><a href="#四、-配置安全组规则" class="headerlink" title="四、 配置安全组规则"></a>四、 配置安全组规则</h1><p>QServer服务器需要开通9710、9705端口</p><p>平台服务器需要开通80端口（一般买完服务器默认都会开通）</p><img src="/2018/06/16/aliba/配置安全组.png" title="配置安全组"><p>配置服务器(60.xxx.xx.xxx(公) 172.xx.xx.x(私有))端口</p><p>在本地远程连接如果出现凭据无法工作的问题需要设置关闭保护密码共享</p><img src="/2018/06/16/aliba/2.png" title="关闭密码保护共享"><p>远程连接（在阿里云远程连接密码123456）(重置服务器密码：xxxxxxxxx）</p><p>计算机连接地址为公网IP,</p><p>启动服务器</p><p>所有服务器都开防火墙</p><img src="/2018/06/16/aliba/3.png" title="关闭防火墙"><p>QServer服务器需要入站开通9710、9705端口，9705设置白名单</p><p>采集程序服务器需要入站开通9706端口，设置白名单</p><p>平台程序服务器需要入站开通80端口</p><p>报警程序服务器需要入站开通8980端口，设置白名单（一台服务器不用设置）</p><img src="/2018/06/16/aliba/4.png" title="入站规则"><h1 id="五、服务器环境搭建"><a href="#五、服务器环境搭建" class="headerlink" title="五、服务器环境搭建"></a>五、服务器环境搭建</h1><h2 id="数据库服务器端口"><a href="#数据库服务器端口" class="headerlink" title="数据库服务器端口"></a>数据库服务器端口</h2><p>入站开启65530端口，设置白名单</p><h2 id="安装JDK，配置环境变量"><a href="#安装JDK，配置环境变量" class="headerlink" title="安装JDK，配置环境变量"></a>安装JDK，配置环境变量</h2><p>QServer服务器、平台服务器需要安装jdk1.7，并配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;java -version</span><br></pre></td></tr></table></figure><h2 id="安装tomcat7"><a href="#安装tomcat7" class="headerlink" title="安装tomcat7"></a>安装tomcat7</h2><p>平台服务器需要安装tomcat7</p><p>1）解压tomcat，重命名为tomcat80和tomcat8980</p><p>80：</p><p>2）进入tomcat80\conf,打开server.xml文件,主要是修改端口</p><p>port=”8005” shutdown=”SHUTDOWN”</p><p>port=”80” protocol=”HTTP/1.1”</p><p>port=”8009” protocol=”AJP/1.3”</p><p>3）进入tomcat80\bin,打开service.bat,将tomcat7通过全部替换的方式改为tomcat8980</p><p>4）重命名tomcat7.exe为tomcat80.exe 和tomcat7w.exe为tomcat80w.exe</p><p>5）通过命令方式进入tomcat80\bin,执行服务安装 service.bat install,出现the service ‘tomcat8980’ has been installed表示服务安装成功</p><img src="/2018/06/16/aliba/5.png" title="tomcat服务器安装成功"><p>8980：</p><p>tomcat8980\conf,打开server.xml文件,主要是修改端口</p><p>port=”8006” shutdown=”SHUTDOWN”</p><p>port=”8980” protocol=”HTTP/1.1”</p><p>port=”8010” protocol=”AJP/1.3”</p><h1 id="六、-部署程序"><a href="#六、-部署程序" class="headerlink" title="六、 部署程序"></a>六、 部署程序</h1><p>1）设置白名单：</p><img src="/2018/06/16/aliba/6.png" title="配置白名单"><p>2）设置数据库账号：xxxx，数据库密码：<strong>****</strong></p><img src="/2018/06/16/aliba/8.png" title="配置数据库账号"><p>3）创建一个数据库xxx</p><img src="/2018/06/16/aliba/9.png" title="创建数据库"><p>4）数据库内外网地址：</p><p>内网地址:rm-xxxxxxxxxxxn.mysql.rds.aliyuncs.com 内网端口:3306</p><p>外网地址:rm-xxxxxxxxxxxnao.mysql.rds.aliyuncs.com 外网端口:3306</p><p>5）QServer：有4个文件，其中有2个配置文件，修改configure.properties里的ip为本地ip，修改log4j.properties里的路径</p><p>6）采集程序：有3个配置文件，修改3个里的库名，修改其中一个里的ip为QServer服务器ip，本地ip、监听ip为本地ip，连接端口为9705，数据库地址</p><img src="/2018/06/16/aliba/10.png" title="采集程序"><p>7）平台程序：修改\项目名\WEB-INF\classes下的数据库配置文件，log4j配置文件，myproperties里的socketip1、socketip2为采集程序服务器ip，nextprocessurl为报警模块接收数据servlet，basepathnew为访问域名</p><p>8）报警程序：修改数据库连接（url，username，passeword），在applicationContext.xml中修改</p><h1 id="七、-连调测试"><a href="#七、-连调测试" class="headerlink" title="七、 连调测试"></a>七、 连调测试</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="阿里云服务器部署" scheme="http://hugenye.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>JavaSE基础知识梳理</title>
    <link href="http://hugenye.github.io/2017/07/15/base/"/>
    <id>http://hugenye.github.io/2017/07/15/base/</id>
    <published>2017-07-15T03:14:30.000Z</published>
    <updated>2020-07-18T02:03:47.640Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="基本数据类型转换："><a href="#基本数据类型转换：" class="headerlink" title="基本数据类型转换："></a>基本数据类型转换：</h1><h2 id="基本数据类型总结"><a href="#基本数据类型总结" class="headerlink" title="基本数据类型总结"></a>基本数据类型总结</h2><table><thead><tr><th>NO.</th><th>数据类型</th><th>大小/位</th><th>默认值    (全局变量才有)</th><th>可表示的数据范围</th></tr></thead><tbody><tr><td>1</td><td>long(长整数)</td><td>64</td><td>0l</td><td>-9223373036854775808 ~9223372036854775807</td></tr><tr><td>2</td><td>int(整数)</td><td>32</td><td>0</td><td>-2147483648~2147483647</td></tr><tr><td>3</td><td>short(短整数)</td><td>16</td><td>(short)0</td><td>-32768~32767</td></tr><tr><td>4</td><td>byte(字节型)</td><td>8</td><td>(byte)0</td><td>-128~127</td></tr><tr><td>5</td><td>char(字符)</td><td>16</td><td>\u0000(空)</td><td>0-65535</td></tr><tr><td>6</td><td>float(单精度)</td><td>32</td><td>0.0f</td><td>-3.4E38~3.4E38</td></tr><tr><td>7</td><td>double(双精度)</td><td>64</td><td>0.0d</td><td>-1.7E308~1.7E308</td></tr><tr><td>8</td><td>boolean</td><td></td><td>false</td><td>true/false</td></tr></tbody></table><p>boolean类型不能转换成任何其它基本数据类型</p><h2 id="自动类型转换：数据类型取值范围小的转换为取值范围大的"><a href="#自动类型转换：数据类型取值范围小的转换为取值范围大的" class="headerlink" title="自动类型转换：数据类型取值范围小的转换为取值范围大的"></a>自动类型转换：数据类型取值范围小的转换为取值范围大的</h2><ul><li>byte,short,int-&gt;long-&gt;float-&gt;double</li><li>char-&gt;int-&gt;long-&gt;float-&gt;double</li><li>short,char不会互相转换</li><li>byte,short,char三者在计算时会转换为int类型</li></ul><h2 id="强制类型转换：数据类型取值范围大的转为取值范围小的，需要加强制转换符"><a href="#强制类型转换：数据类型取值范围大的转为取值范围小的，需要加强制转换符" class="headerlink" title="强制类型转换：数据类型取值范围大的转为取值范围小的，需要加强制转换符"></a>强制类型转换：数据类型取值范围大的转为取值范围小的，需要加强制转换符</h2><p>例子：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>\</span><br><span class="line"><span class="keyword">short</span> s=<span class="number">30000</span>;</span><br><span class="line">s=s+<span class="number">1</span>; <span class="comment">//会出现错误，s+1变为int类型，从int转为short会造成数据损失</span></span><br><span class="line">**改为s=(<span class="keyword">short</span>)(s+<span class="number">1</span>)</span><br><span class="line"><span class="number">2</span>\</span><br><span class="line">  <span class="keyword">byte</span> b=<span class="number">128</span>； <span class="comment">//是错误的。byte是8位，可表达的数据范围-128-127</span></span><br></pre></td></tr></table></figure><h1 id="break和continue使用的区别"><a href="#break和continue使用的区别" class="headerlink" title="break和continue使用的区别"></a>break和continue使用的区别</h1><p>break  跳出指定的循环，当多层循环时 默认跳出离自己最近的循环 ，也可以根据标签指定跳出的循环<br>continue  跳过指定循环的某次循环 ，当多层循环时 默认跳过离自己最近的循环 ，也可以根据标签指定跳过的循环</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// break   默认跳出离自己最近的循环</span></span><br><span class="line"><span class="comment">// 给外层循环起个名字</span></span><br><span class="line">out : <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;<span class="number">3</span> ; i++ )</span><br><span class="line">&#123;</span><br><span class="line">  inner : <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;<span class="number">3</span> ;j++ )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(j == <span class="number">2</span>)&#123;</span><br><span class="line">      <span class="keyword">break</span> out;<span class="comment">// 可以指定  跳出的循环 </span></span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(i+<span class="string">" "</span>+j);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// continue  跳过本次循环  执行下一次循环</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;<span class="number">10</span> ;i++ )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">continue</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  System.out.println(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// continue 默认是跳过 离自己最近的循环的一次执行     </span></span><br><span class="line"><span class="comment">// 也可以指定 添加标签     跳过指定的循环的一次执行</span></span><br><span class="line">out : <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;<span class="number">4</span> ;i++ )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;<span class="number">4</span> ;j++ )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span>(j==<span class="number">2</span>)&#123;</span><br><span class="line">      <span class="keyword">continue</span> out ;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(<span class="string">"i="</span>+i + <span class="string">"  j="</span>+j);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="关于for循环的应用"><a href="#关于for循环的应用" class="headerlink" title="关于for循环的应用"></a>关于for循环的应用</h1><h2 id="计算10的阶乘问题"><a href="#计算10的阶乘问题" class="headerlink" title="计算10的阶乘问题"></a>计算10的阶乘问题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> sum1=sum(<span class="number">10</span>);</span><br><span class="line">System.out.println(<span class="string">"1+2!+3!+...+10!="</span>+sum1);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">sum</span><span class="params">(<span class="keyword">long</span> num)</span></span>&#123;</span><br><span class="line">  <span class="keyword">long</span> jc=<span class="number">1</span>;</span><br><span class="line">  <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">long</span> i=<span class="number">1</span>;i&lt;=<span class="number">20</span>;i++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">long</span> j=<span class="number">1</span>;j&lt;=<span class="number">20</span>;j++)&#123;</span><br><span class="line">      jc*=j;</span><br><span class="line">    &#125;</span><br><span class="line">    sum+=jc;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数字求和游戏"><a href="#数字求和游戏" class="headerlink" title="数字求和游戏"></a>数字求和游戏</h2><p>1、例如想要显示3+33+333+3333+33333：基数的数值和相加的次数可以在控制台输入，每次玩完后,提示1:继续输新的基数,次数,重新开始游戏; 2:结束程序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Scanner sc=<span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> result=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">  System.out.println(<span class="string">"请输入基数："</span>);</span><br><span class="line">  <span class="keyword">int</span> base=sc.nextInt();<span class="comment">//基数3</span></span><br><span class="line">  System.out.println(<span class="string">"请输入次数："</span>);</span><br><span class="line">  <span class="keyword">int</span> count=sc.nextInt();<span class="comment">//相加次数5</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;count;i++)&#123;</span><br><span class="line"></span><br><span class="line">    num=(<span class="keyword">int</span>)(Math.pow(<span class="number">10</span>,i))*base+result;<span class="comment">//pow(10,i)等于10的i次方</span></span><br><span class="line">    <span class="keyword">if</span>(i&lt;count-<span class="number">1</span>)</span><br><span class="line">      System.out.print(num+<span class="string">"+"</span>);</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">      System.out.print(num+<span class="string">"\n"</span>);<span class="comment">//结尾不加“+”</span></span><br><span class="line">    result=num;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//提示是否跳出循环</span></span><br><span class="line">  System.out.println(<span class="string">"按任意键:继续输新的基数,次数,重新开始游戏; 输入0:结束程序"</span>);</span><br><span class="line">  <span class="keyword">int</span> end=sc.nextInt();<span class="comment">//基数</span></span><br><span class="line">  <span class="keyword">if</span>(end==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="for循环99乘法表"><a href="#for循环99乘法表" class="headerlink" title="for循环99乘法表"></a>for循环99乘法表</h2><p>首先如何把99乘法表的三角形状摆出来，然后i*j</p><p>这个需要双层for循环，外层循环控制行，内层循环控制列</p><p>想要的形状是这样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*  找规律</span></span><br><span class="line"><span class="comment">*                1</span></span><br><span class="line"><span class="comment">**2</span></span><br><span class="line"><span class="comment">***              3</span></span><br><span class="line"><span class="comment">****             4</span></span><br><span class="line"><span class="comment">  ......</span></span><br><span class="line"><span class="comment">********* 9 </span></span><br><span class="line"><span class="comment">设行i=1，列j=1，那么i最大为9</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;=<span class="number">9</span> ;i++ )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">// 1 2 3 4 5 ..9 </span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;=i ;j++ )</span><br><span class="line">  &#123;</span><br><span class="line">    System.out.print(i+<span class="string">"*"</span>+j+<span class="string">"="</span>+i*j+<span class="string">"\t"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  System.out.println();<span class="comment">//换行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">      </span></span><br><span class="line"><span class="comment">*****15</span></span><br><span class="line"><span class="comment">****24</span></span><br><span class="line"><span class="comment">***33</span></span><br><span class="line"><span class="comment">**42</span></span><br><span class="line"><span class="comment">*5           1</span></span><br><span class="line"><span class="comment">i = 1 </span></span><br><span class="line"><span class="comment">j = 5    j&gt;0   j--     5 </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> i = 2             </span></span><br><span class="line"><span class="comment"> j = 5   j&gt;1   j--     4      </span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> i = 3 </span></span><br><span class="line"><span class="comment"> j = 5  j&gt; 2           3   </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">第一种</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span>  i = <span class="number">1</span>; i&lt;=<span class="number">9</span> ; i++ )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;=<span class="number">10</span>-i ;j++ )</span><br><span class="line">  &#123;</span><br><span class="line">    System.out.print(i+<span class="string">"*"</span>+j+<span class="string">"="</span>+i*j+<span class="string">"\t"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  System.out.println();</span><br><span class="line">&#125;</span><br><span class="line">第二种</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt;<span class="number">9</span>; i++ )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">9</span>; j&gt;i ; j--)</span><br><span class="line">  &#123;</span><br><span class="line">    System.out.print(i+<span class="string">"*"</span>+j+<span class="string">"="</span>+i*j+<span class="string">"\t"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  System.out.println();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还用一种特殊的等腰三角形的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*行空格        星星</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   *13  12*n-1</span></span><br><span class="line"><span class="comment">  ***22  3</span></span><br><span class="line"><span class="comment"> *****31  5</span></span><br><span class="line"><span class="comment">*******40              7</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">分别打印空格和星星*/</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span> ;i&lt;=<span class="number">4</span> ; i++ )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 空格</span></span><br><span class="line"><span class="comment">// i = 2 </span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;=<span class="number">4</span>-i ;j++)</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 星星</span></span><br><span class="line"><span class="comment">// i = 2</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>;j&lt;=<span class="number">2</span>*i-<span class="number">1</span> ;j++ )</span><br><span class="line">&#123;</span><br><span class="line">System.out.print(<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 换行一定要写在外层循环里</span></span><br></pre></td></tr></table></figure><h2 id="水仙花"><a href="#水仙花" class="headerlink" title="水仙花"></a>水仙花</h2><p>输出的水仙花数，是指一个三位数，其各位上数字立方和等于它本身</p><p>例如：152=1^3+5^3+2^3</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum=hua(<span class="number">153</span>);</span><br><span class="line">System.out.println(<span class="string">"水仙花数:"</span>+sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hua</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(num==(<span class="keyword">int</span>)(Math.pow((num/<span class="number">100</span>),<span class="number">3</span>)+Math.pow((num/<span class="number">10</span>%<span class="number">10</span>),<span class="number">3</span>)+Math.pow((num%<span class="number">10</span>),<span class="number">3</span>)))&#123;</span><br><span class="line"><span class="keyword">return</span> num;<span class="comment">//pow(x,y) x^Y</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="关于递归的使用"><a href="#关于递归的使用" class="headerlink" title="关于递归的使用"></a>关于递归的使用</h1><h2 id="简单型：1-2-3-。。。-100"><a href="#简单型：1-2-3-。。。-100" class="headerlink" title="简单型：1+2+3+。。。+100="></a>简单型：1+2+3+。。。+100=</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> sum=sum(<span class="number">100</span>);</span><br><span class="line">  System.out.println(<span class="string">"1+2+3+......+100="</span>+sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(num==<span class="number">1</span>)</span><br><span class="line">  &#123;<span class="keyword">return</span> <span class="number">1</span>;&#125;<span class="comment">//如果递归数为1，结束递归的加和</span></span><br><span class="line">  <span class="keyword">return</span> num+sum(num-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="困难型：遍历当前路径下的所有系统文件-包含子文件和目录"><a href="#困难型：遍历当前路径下的所有系统文件-包含子文件和目录" class="headerlink" title="困难型：遍历当前路径下的所有系统文件(包含子文件和目录)"></a>困难型：遍历当前路径下的所有系统文件(包含子文件和目录)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getAllFile</span><span class="params">(File disFile)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  File file = <span class="keyword">new</span> File(disFile);</span><br><span class="line">  <span class="comment">// 判断file指向的路径是否存在</span></span><br><span class="line">  <span class="keyword">if</span>(file.exists())&#123;</span><br><span class="line">    <span class="comment">// 排除传进来的参数指向的是一个具体的文件</span></span><br><span class="line">      <span class="keyword">if</span>(file.isDirectory())&#123;</span><br><span class="line">        <span class="comment">// 获取该浏览目录下的子文件或者子目录</span></span><br><span class="line">        File[] files = file.listFiles();</span><br><span class="line">        <span class="comment">// 做一个非空判断 避免出现空指针异常</span></span><br><span class="line">        <span class="keyword">if</span>(files != <span class="keyword">null</span>)&#123;</span><br><span class="line">          <span class="comment">// 遍历数组 如果是文件 打印出来  如果不是 继续遍历获取</span></span><br><span class="line">          <span class="keyword">for</span>(File nFile : files)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nFile.isFile())&#123;           </span><br><span class="line">              System.out.println(nFile.getName());</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              <span class="comment">// nFile --&gt; 目录</span></span><br><span class="line">              <span class="comment">// 调用自己继续进行筛选, getAbsolutePath() 绝对路径名</span></span><br><span class="line">              getAllFile(nFile.getAbsolutePath());</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"该路径指向的是文件，不能进行遍历操作"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"该路径不存在"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="JAVA" scheme="http://hugenye.github.io/categories/JAVA/"/>
    
    
      <category term="JavaSE" scheme="http://hugenye.github.io/tags/JavaSE/"/>
    
  </entry>
  
</feed>
