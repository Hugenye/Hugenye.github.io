<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hugenye个人博客</title>
  
  <subtitle>学习总结</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hugenye.github.io/"/>
  <updated>2020-08-19T08:41:07.557Z</updated>
  <id>http://hugenye.github.io/</id>
  
  <author>
    <name>Hugenye</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网页三剑客之JavaScript</title>
    <link href="http://hugenye.github.io/2020/08/01/javascript/"/>
    <id>http://hugenye.github.io/2020/08/01/javascript/</id>
    <published>2020-08-01T14:04:07.000Z</published>
    <updated>2020-08-19T08:41:07.557Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="js简介"><a href="#js简介" class="headerlink" title="js简介"></a>js简介</h2><h3 id="js是什么"><a href="#js是什么" class="headerlink" title="js是什么"></a>js是什么</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> js是可以嵌入到html中，是基于对象和事件驱动的脚本语言。</span><br><span class="line"></span><br><span class="line">  基于对象  js中会把所有的东西看成对象 </span><br><span class="line">  事件驱动  js驱动 都是通过各种驱动</span><br><span class="line">  脚本语言  java需要jvm虚拟机进行编译  js不需要编译 直接可以使用。</span><br><span class="line"></span><br><span class="line">特点：  1.有交互性</span><br><span class="line">       2.安全性  js 不能访问本地磁盘</span><br><span class="line">       3.跨平台  可以兼容不同的浏览器</span><br></pre></td></tr></table></figure><h3 id="js能做什么"><a href="#js能做什么" class="headerlink" title="js能做什么"></a>js能做什么</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.js能动态操作(curd)html和css的代码</span><br><span class="line">2.动态校验数据</span><br></pre></td></tr></table></figure><h3 id="js被引入的方式"><a href="#js被引入的方式" class="headerlink" title="js被引入的方式"></a>js被引入的方式</h3><h4 id="内嵌脚本"><a href="#内嵌脚本" class="headerlink" title="内嵌脚本"></a>内嵌脚本</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input  type=<span class="string">"button"</span> value=<span class="string">"button"</span>  </span><br><span class="line"> onclick=<span class="string">"javascript:alert('xxxxxx')"</span>/&gt;</span><br></pre></td></tr></table></figure><h4 id="内部脚本"><a href="#内部脚本" class="headerlink" title="内部脚本"></a>内部脚本</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">alert(<span class="string">'xxxxxx'</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h4 id="外部脚本"><a href="#外部脚本" class="headerlink" title="外部脚本"></a>外部脚本</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">首先创建一个js文件，将js代码写到文件中，在html标签中添加 &lt;script src=<span class="string">"引入js即可"</span>&gt;</span><br><span class="line">ps：【js加载优化！】</span><br><span class="line">可以放在任何位置，但是在不影响html功能前提下，越晚加载越好。</span><br></pre></td></tr></table></figure><h3 id="js基本语法"><a href="#js基本语法" class="headerlink" title="js基本语法"></a>js基本语法</h3><h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单行使用<span class="comment">//</span></span><br><span class="line">多行注解 使用<span class="comment">/*</span></span><br><span class="line"><span class="comment">            */</span></span><br></pre></td></tr></table></figure><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log()</span><br><span class="line"><span class="built_in">document</span>.write()</span><br><span class="line">alert();</span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>变量可以使用短名称（比如 x 和 y），也可以使用描述性更好的名称（比如 age, sum, totalvolume）。</p><p>变量必须以字母开头</p><p>变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）</p><p>变量名称对大小写敏感（y 和 Y 是不同的变量）</p><h5 id="弱引用类型"><a href="#弱引用类型" class="headerlink" title="弱引用类型"></a>弱引用类型</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">var</span>  x = <span class="number">5</span>；</span><br><span class="line">  <span class="keyword">var</span>  y = <span class="string">'hello'</span></span><br><span class="line">  <span class="keyword">var</span>  b = <span class="literal">true</span></span><br><span class="line">  声明多个变量</span><br><span class="line">  <span class="keyword">var</span> x =<span class="number">6</span> ,x = <span class="number">8</span>;  </span><br><span class="line"><span class="comment">//ps：重新声明JavaScript变量，该变量的值不会丢失</span></span><br><span class="line"><span class="keyword">var</span> age=<span class="number">24</span>;</span><br><span class="line"><span class="keyword">var</span> age;</span><br><span class="line"><span class="built_in">console</span>.log(age)<span class="comment">//24</span></span><br></pre></td></tr></table></figure><h5 id="原始数据类型"><a href="#原始数据类型" class="headerlink" title="原始数据类型"></a>原始数据类型</h5><p>  主要使用typeof 验证类型， typeof 数据、typeof(数据);</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>number 数字类型  Int float</span><br><span class="line"><span class="number">2.</span>string 字符串类型 <span class="string">""</span> <span class="string">''</span>没区别</span><br><span class="line"><span class="number">3.</span>boolean 布尔类型   <span class="literal">true</span> <span class="number">1</span>  <span class="literal">false</span> =<span class="number">0</span>;</span><br><span class="line"><span class="number">4.</span><span class="literal">null</span>   空类型  object</span><br><span class="line"><span class="number">5.</span><span class="literal">undefined</span>  未定义类型  进行数据初始化</span><br><span class="line"><span class="number">6.</span>NAN   <span class="built_in">parseInt</span>(boolean)</span><br><span class="line"><span class="comment">/*注意：</span></span><br><span class="line"><span class="comment">  1、类型转换：</span></span><br><span class="line"><span class="comment">  number\boolean 转成string ——&gt; 通过toString();   </span></span><br><span class="line"><span class="comment">  string\boolean 转成 整数 ——&gt; parseInt();      </span></span><br><span class="line"><span class="comment">                          ——&gt; parseFloat(); 转成字符串，只要遇到非字,要注意，不能转化在字符串中间的数据符串即停止转换</span></span><br><span class="line"><span class="comment"> 2、强制转换：</span></span><br><span class="line"><span class="comment">     Boolean(); 强转成boolean </span></span><br><span class="line"><span class="comment">number非零即ture</span></span><br><span class="line"><span class="comment">string非空即ture</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Number(); 强转成number</span></span><br><span class="line"><span class="comment">  boolean ture 1 false 0</span></span><br><span class="line"><span class="comment">  string 不能强转</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h5 id="引用数据类型-创建对象-自定义类型"><a href="#引用数据类型-创建对象-自定义类型" class="headerlink" title="引用数据类型(创建对象) 自定义类型"></a>引用数据类型(创建对象) 自定义类型</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 1.java Object obj = new Object();</span></span><br><span class="line"> java <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"> <span class="keyword">var</span> obj = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line"> obj.nam = <span class="string">"zhansan"</span></span><br><span class="line"> obj.age = <span class="number">18</span>;</span><br><span class="line"> obj.say = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> alert(<span class="keyword">this</span>.nam+<span class="string">"说他已经"</span>+<span class="keyword">this</span>.age+<span class="string">"啦！"</span>);</span><br><span class="line"> &#125;</span><br><span class="line">obj.say();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 方法中</span></span><br><span class="line"><span class="keyword">var</span> Person=  <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> name = <span class="string">"李四"</span>;</span><br><span class="line">  <span class="keyword">var</span> age  = <span class="number">11</span>;</span><br><span class="line">  <span class="keyword">var</span> say =<span class="keyword">new</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(name+age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;    </span><br><span class="line"><span class="keyword">var</span> p = <span class="keyword">new</span> Person();</span><br><span class="line">p.say();</span><br><span class="line"></span><br><span class="line"><span class="comment">//json形式</span></span><br><span class="line"><span class="keyword">var</span> pp = &#123;<span class="attr">name</span>:<span class="string">"lisi"</span>,<span class="attr">age</span>:<span class="number">18</span>,<span class="attr">say</span>:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;             </span><br><span class="line">             alert(<span class="keyword">this</span>.name);                  </span><br><span class="line">           &#125;</span><br><span class="line">         &#125;;        </span><br><span class="line">pp.say();</span><br></pre></td></tr></table></figure><h4 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"> <span class="number">1.</span>赋值运算符 =</span><br><span class="line"> <span class="keyword">var</span> i = <span class="number">5</span>;   </span><br><span class="line"></span><br><span class="line"> <span class="number">2.</span>算数运算符 +-*<span class="regexp">/%     </span></span><br><span class="line"><span class="regexp"> "11"*"123" 可以出值</span></span><br><span class="line"><span class="regexp"> "11"*"11xx" 报错</span></span><br><span class="line"><span class="regexp"> +遇到字符串的时候就变成了连接符 其他都是把字符串转成整</span></span><br><span class="line"><span class="regexp"> 数类型，进行处理 如果出现123xx xx不会自动转</span></span><br><span class="line"><span class="regexp"> 1234/</span><span class="number">100</span>*<span class="number">100</span></span><br><span class="line"> </span><br><span class="line"> <span class="number">3.</span>逻辑运算符</span><br><span class="line"> &amp;&amp;  ||</span><br><span class="line">   </span><br><span class="line"> <span class="number">4.</span>比较运算符</span><br><span class="line"> &lt;  &gt;  <span class="xml"><span class="tag">&lt;<span class="name">=</span> &gt;</span>=  != ==</span></span><br><span class="line"><span class="xml"> ===全等</span></span><br><span class="line"><span class="xml"> 1==“1” true</span></span><br><span class="line"><span class="xml"> 1==="1" false  ===全等判断类型</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">5.三元运算符  &gt;:?</span></span><br><span class="line"><span class="xml">  x&gt;y ? x-y:x+y</span></span><br><span class="line"><span class="xml">6.void运算符</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span>  <span class="attr">href</span>=<span class="string">"javascript:void(0)"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">7.类型运算符</span></span><br><span class="line"><span class="xml">typeof  判断数据类型</span></span><br><span class="line"><span class="xml">instanceof 判断数据类型</span></span><br></pre></td></tr></table></figure><h4 id="逻辑语句"><a href="#逻辑语句" class="headerlink" title="逻辑语句"></a>逻辑语句</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> <span class="keyword">if</span> - <span class="keyword">else</span> </span><br><span class="line"><span class="number">2.</span> <span class="keyword">for</span> <span class="keyword">for</span> <span class="keyword">in</span> </span><br><span class="line"><span class="keyword">for</span>/<span class="keyword">in</span> 语句循环遍历对象的属性：</span><br><span class="line">实例</span><br><span class="line"><span class="keyword">var</span> person=&#123;<span class="attr">fname</span>:<span class="string">"John"</span>,<span class="attr">lname</span>:<span class="string">"Doe"</span>,<span class="attr">age</span>:<span class="number">25</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (x <span class="keyword">in</span> person)</span><br><span class="line">&#123;</span><br><span class="line">txt=txt + person[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>/变量数组</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>,<span class="string">""</span>];</span><br><span class="line"><span class="number">3.</span> <span class="keyword">switch</span></span><br><span class="line"></span><br><span class="line"><span class="number">4.</span> <span class="keyword">while</span></span><br><span class="line"></span><br><span class="line"><span class="number">5.</span><span class="keyword">try</span>/<span class="keyword">catch</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">message</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">try</span>&#123;</span><br><span class="line">    adddlert(<span class="string">"Welcome guest!"</span>);</span><br><span class="line">  &#125;<span class="keyword">catch</span>(err)&#123;</span><br><span class="line">    txt=<span class="string">"本页有一个错误。\n\n"</span>;</span><br><span class="line">    txt+=<span class="string">"错误描述："</span> + err.message + <span class="string">"\n\n"</span>;</span><br><span class="line">    txt+=<span class="string">"点击确定继续。\n\n"</span>;</span><br><span class="line">    alert(txt);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;input type=<span class="string">"button"</span> value=<span class="string">"查看消息"</span> onclick=<span class="string">"message()"</span> /&gt;</span><br></pre></td></tr></table></figure><h3 id="js内建对象"><a href="#js内建对象" class="headerlink" title="js内建对象"></a>js内建对象</h3><h5 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>创建方式</span><br><span class="line"><span class="keyword">var</span> number = <span class="keyword">new</span> <span class="built_in">Number</span>(<span class="keyword">var</span>);</span><br><span class="line"><span class="keyword">var</span> number = <span class="built_in">Number</span>(<span class="keyword">var</span>);   </span><br><span class="line">方法：</span><br><span class="line">toString（） 转成字符串</span><br><span class="line">valueOf（） 转成number类型</span><br></pre></td></tr></table></figure><h5 id="Boolean"><a href="#Boolean" class="headerlink" title="Boolean"></a>Boolean</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> boolean = <span class="keyword">new</span> <span class="built_in">Boolean</span>(<span class="keyword">var</span>);</span><br><span class="line"><span class="built_in">Boolean</span>(<span class="keyword">var</span>);</span><br></pre></td></tr></table></figure><h5 id="String"><a href="#String" class="headerlink" title="String"></a>String</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 创建方式：</span><br><span class="line">   <span class="keyword">var</span> str = <span class="keyword">new</span> <span class="built_in">String</span>(s);</span><br><span class="line">   <span class="keyword">var</span> str = <span class="built_in">String</span>(s);</span><br><span class="line">属性和方法：</span><br><span class="line">        length:字符串的长度</span><br><span class="line">        charAt():返回索引字符</span><br><span class="line">        charCodeAt:返回索引字符unicode</span><br><span class="line">        indexOf():返回字符的索引</span><br><span class="line">        lastIndexOf();逆向返回字符的索引</span><br><span class="line">        split();将字符串按照特殊字符切割成数组</span><br><span class="line">        substr():从起始索引号提取字符串中指定数目的字符</span><br><span class="line">        substring():提取字符串中两个指定的索引号之间的字符</span><br><span class="line">        toUpperCase();转大写</span><br></pre></td></tr></table></figure><h5 id="Array"><a href="#Array" class="headerlink" title="Array"></a>Array</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">创建方式：</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Array</span>(); 创建一个空数组</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Array</span>(size); 创建一个指定大小的数组 但是超出还可以加</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Array</span>(element0, element0, ..., elementn); 创建一个数组 直接添加元素</span><br><span class="line"><span class="keyword">var</span> array = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">var</span> array = [];创建一个空数组</span><br><span class="line"></span><br><span class="line">方法：</span><br><span class="line">    lenght</span><br><span class="line">    join() 相当于 splite逆向</span><br><span class="line">    pop() 删除并返回最后一个元素</span><br><span class="line">    push() 向末尾放一个元素并返回长度</span><br><span class="line">    revserse()翻转数组</span><br><span class="line">    sort();</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------------------Array-----------------------------</span></span><br><span class="line"><span class="comment">//var arr = [3,"z",1,"java",'js',true,4];</span></span><br><span class="line"><span class="comment">//alert(arr.length);//7</span></span><br><span class="line"><span class="comment">//alert(arr.join("-"));//3-7-1-java-js-true-4</span></span><br><span class="line"><span class="comment">//alert(arr.pop());//4</span></span><br><span class="line"><span class="comment">//alert(arr);//3,7,1,"java",'js',true</span></span><br><span class="line"><span class="comment">//alert(arr.push("R"));</span></span><br><span class="line"><span class="comment">//alert(arr);</span></span><br><span class="line"><span class="comment">//alert(arr.reverse());</span></span><br><span class="line"><span class="comment">//alert(arr.sort());//按照字符串字典顺序进行排序</span></span><br></pre></td></tr></table></figure><h5 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">创建方式：</span><br><span class="line"><span class="keyword">var</span> myDate=<span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line"><span class="keyword">var</span> myDate=<span class="keyword">new</span> <span class="built_in">Date</span>(毫秒值)  毫秒值代表<span class="number">1970</span>到现在的时间</span><br><span class="line"><span class="keyword">var</span> Future = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2017</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">00</span>, <span class="number">00</span>);<span class="comment">//年月日时分秒，月要减去1</span></span><br><span class="line">属性和方法:</span><br><span class="line">      getFullYear() 获取年</span><br><span class="line">      getMonth()获取月  <span class="number">0</span><span class="number">-11</span></span><br><span class="line">      getDate() 获取日  <span class="number">1</span><span class="number">-31</span></span><br><span class="line">      getDay(); 星期  <span class="number">0</span><span class="number">-6</span></span><br><span class="line">      getTime() 返回 <span class="number">1970</span> 年 <span class="number">1</span> 月 <span class="number">1</span> 日至今的毫秒数。 </span><br><span class="line">      toTimeString() 把 <span class="built_in">Date</span> 对象的时间部分转换为字符串。 </span><br><span class="line">      toString（） 获取时间</span><br><span class="line">      toLocaleString() 获取本地时间</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line"><span class="comment">//alert(date.toString());</span></span><br><span class="line"><span class="comment">//alert(date.toLocaleString());</span></span><br><span class="line"><span class="comment">/* alert("year:"+date.getFullYear());//2015</span></span><br><span class="line"><span class="comment">alert("month:"+date.getMonth());//8</span></span><br><span class="line"><span class="comment">alert("date:"+date.getDate());//23</span></span><br><span class="line"><span class="comment">alert("day:"+date.getDay());//3 */</span></span><br><span class="line"><span class="comment">/* var time1 = date.getTime();</span></span><br><span class="line"><span class="comment">var time2 = 3*24*60*60*1000;</span></span><br><span class="line"><span class="comment">alert(new Date(time1+time2).toLocaleString()); */</span></span><br></pre></td></tr></table></figure><h5 id="Math"><a href="#Math" class="headerlink" title="Math"></a>Math</h5><p>Math 对象并不像 Date 和 String 那样是对象的类，<br>因此没有构造函数 Math()，像 Math.sin() 这样的函数只是函数，<br>不是某个对象的方法。您无需创建它，<br>通过把 Math 作为对象使用就可以调用其所有属性和方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">属性：</span><br><span class="line">    <span class="built_in">Math</span>.Pi</span><br><span class="line">    E 返回算术常量 e，即自然对数的底数（约等于<span class="number">2.718</span>）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    LN2 返回 <span class="number">2</span> 的自然对数（约等于<span class="number">0.693</span>）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    LN10 返回 <span class="number">10</span> 的自然对数（约等于<span class="number">2.302</span>）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    LOG2E 返回以 <span class="number">2</span> 为底的 e 的对数（约等于 <span class="number">1.414</span>）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    LOG10E 返回以 <span class="number">10</span> 为底的 e 的对数（约等于<span class="number">0.434</span>）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    PI 返回圆周率（约等于<span class="number">3.14159</span>）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    SQRT1_2 返回返回 <span class="number">2</span> 的平方根的倒数（约等于 <span class="number">0.707</span>）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    SQRT2 返回 <span class="number">2</span> 的平方根（约等于 <span class="number">1.414</span>）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line"></span><br><span class="line">    abs(x) 返回数的绝对值。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    acos(x) 返回数的反余弦值。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    asin(x) 返回数的反正弦值。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    atan(x) 以介于 -PI/<span class="number">2</span> 与 PI/<span class="number">2</span> 弧度之间的数值来返回 x 的反正切值。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    atan2(y,x) 返回从 x 轴到点 (x,y) 的角度（介于 -PI/<span class="number">2</span> 与 PI/<span class="number">2</span> 弧度之间）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    ceil(x) 对数进行上舍入。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    cos(x) 返回数的余弦。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    exp(x) 返回 e 的指数。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    floor(x) 对数进行下舍入。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    log(x) 返回数的自然对数（底为e）。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    max(x,y) 返回 x 和 y 中的最高值。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    min(x,y) 返回 x 和 y 中的最低值。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    pow(x,y) 返回 x 的 y 次幂。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    random() 返回 <span class="number">0</span> ~ <span class="number">1</span> 之间的随机数。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    round(x) 把数四舍五入为最接近的整数。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    sin(x) 返回数的正弦。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    sqrt(x) 返回数的平方根。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    tan(x) 返回角的正切。 <span class="number">1</span> <span class="number">3</span> </span><br><span class="line">    toSource() 返回该对象的源代码。 <span class="number">1</span> - <span class="number">3</span></span><br><span class="line">    valueOf() 返回 <span class="built_in">Math</span> 对象的原始值。 <span class="number">1</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h5 id="RegExp"><a href="#RegExp" class="headerlink" title="RegExp"></a>RegExp</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> 创建方式 </span><br><span class="line">     <span class="keyword">new</span> <span class="built_in">RegExp</span>(pattern）;</span><br><span class="line">     <span class="keyword">var</span> reg = <span class="regexp">/^正则规则$/</span>;</span><br><span class="line"></span><br><span class="line">    规则的写法：校验和约束字符串</span><br><span class="line">    [<span class="number">0</span><span class="number">-9</span>]  \d 代表数字</span><br><span class="line">    [A-Z] 大写字母</span><br><span class="line">    [a-z] 小写字母</span><br><span class="line">    [A-z] 是字母即可</span><br><span class="line">    \w    查找单词字符</span><br><span class="line">    \W    查找非单词字符</span><br><span class="line">    \s    空白字符</span><br><span class="line">    \S    非空白字符</span><br><span class="line">    n+  至少出现一次</span><br><span class="line">    n*  出现<span class="number">0</span>次或者多少</span><br><span class="line">    n?  出现<span class="number">0</span>次获取<span class="number">1</span>次</span><br><span class="line">    &#123;<span class="number">5</span>&#125;出现五次</span><br><span class="line">    &#123;<span class="number">2</span><span class="number">-8</span>&#125; 出现<span class="number">2</span><span class="number">-8</span>次</span><br><span class="line"></span><br><span class="line">属性方法:</span><br><span class="line">        校验邮箱</span><br><span class="line">        <span class="keyword">var</span> reg = <span class="regexp">/^[A-z]+[A-z0-9_-]$/</span>;</span><br></pre></td></tr></table></figure><h3 id="js的函数"><a href="#js的函数" class="headerlink" title="js的函数"></a>js的函数</h3><h4 id="js函数的定义方式"><a href="#js函数的定义方式" class="headerlink" title="js函数的定义方式"></a>js函数的定义方式</h4><h5 id="普通的方式"><a href="#普通的方式" class="headerlink" title="普通的方式"></a>普通的方式</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">语法： <span class="function"><span class="keyword">function</span> 函数名(<span class="params">参数列表</span>)</span>&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> method = <span class="function"><span class="keyword">function</span>(<span class="params">参数列表</span>)</span>&#123;&#125;  </span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;alert(<span class="built_in">arguments</span>[<span class="number">0</span>]);</span><br><span class="line">&#125;(<span class="string">"aa"</span>));</span><br></pre></td></tr></table></figure><h5 id="对象函数"><a href="#对象函数" class="headerlink" title="对象函数"></a>对象函数</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">语法 <span class="keyword">new</span> <span class="built_in">Function</span>(params...，函数体);</span><br><span class="line">注意参数名称必须使用字符串形式，最后一个默认是函数体</span><br><span class="line"><span class="keyword">var</span> fn = <span class="keyword">new</span> <span class="built_in">Function</span>(<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"alert(a+b);"</span>);  </span><br><span class="line">alert(fn(<span class="number">3</span>,<span class="number">4</span>));</span><br></pre></td></tr></table></figure><h4 id="函数的参数和返回值"><a href="#函数的参数和返回值" class="headerlink" title="函数的参数和返回值"></a>函数的参数和返回值</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>形参没有返回值</span><br><span class="line"><span class="number">2.</span>形参和实参的个数不一定一样</span><br><span class="line"><span class="number">3.</span><span class="built_in">arguments</span>  内置对象</span><br><span class="line"><span class="number">4.</span>在定义函数的时候不必定义返回值直接通过<span class="keyword">return</span>即可进行返回</span><br></pre></td></tr></table></figure><p>给函数设置默认参数值</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://hugenye.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hexo archer主题配置</title>
    <link href="http://hugenye.github.io/2020/07/21/hexo-deploy/"/>
    <id>http://hugenye.github.io/2020/07/21/hexo-deploy/</id>
    <published>2020-07-21T07:21:25.000Z</published>
    <updated>2020-07-21T10:26:24.091Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>我使用的主题<a href="https://github.com/fi3ework/hexo-theme-archer" target="_blank" rel="noopener">hexo-theme-archer</a></p><h1 id="添加github评论功能"><a href="#添加github评论功能" class="headerlink" title="添加github评论功能"></a>添加github评论功能</h1><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>在Github上新建一个仓库</p><p>创建OAuth Application</p><p>Gitalk需要一个Github Application，点击申请<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">https://github.com/settings/applications/new</a></p><p>完成后会生成相应clientId和clientSecret</p><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">gitalk_client_id: &apos;clientId&apos;</span><br><span class="line">gitalk_client_secret: &apos;clientSecret&apos;</span><br><span class="line">gitalk_admin: hugenye </span><br><span class="line">gitalk_owner: hugenye</span><br><span class="line">#你要存放的项目名</span><br><span class="line">gitalk_repo: gitalk</span><br><span class="line">#每页多少个评论</span><br><span class="line">gitalk_perPage: 15</span><br><span class="line">#last #排序方式是从旧到新（first）还是从新到旧（last）</span><br><span class="line">gitalk_pagerDirection: last</span><br><span class="line">#如果当前页面没有相应的 isssue ，且登录的用户属于 admin，则会自动创建 issue。如果设置为 true，则显示一个初始化页面，创建 issue 需要点击 init 按钮。</span><br><span class="line">gitalk_createIssueManually: false </span><br><span class="line">#是否启用快捷键(cmd|ctrl + enter) 提交评论.</span><br><span class="line">gitalk_distractionFreeMode: true</span><br></pre></td></tr></table></figure><p>就配置完成了。</p><h1 id="添加utterance评论系统"><a href="#添加utterance评论系统" class="headerlink" title="添加utterance评论系统"></a>添加utterance评论系统</h1><p>配置步骤</p><h3 id="创建Github仓库"><a href="#创建Github仓库" class="headerlink" title="创建Github仓库"></a>创建Github仓库</h3><p>上面提到，utterance使用Github保存评论，那我们就需要创建一个<code>repository</code>专门保存评论。</p><p><code>repository</code>名称可以根据自己喜好取，这个后面会用到。</p><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><p>用户在博客页面上输入评论，utterance拿到这个评论后，自动的提交到上面刚创建仓库的Issues里。</p><p>所以我们需要授权utterance应用能访问仓库的Issues。</p><p>点击链接： <a href="https://github.com/apps/utterances" target="_blank" rel="noopener">https://github.com/apps/utterances</a> </p><h3 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h3><p>一，在主题的配置文件<code>_config.yml</code>文件中，加入如下配置：</p><p><em>位置可以放到其它评论配置的后面</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#仓库名  用户名/仓库名</span><br><span class="line">utteranc_repo:  hugenye/gitalk</span><br><span class="line">utteranc_label: utteranc</span><br><span class="line">#主题</span><br><span class="line">utteranc_theme: github-light</span><br><span class="line">#映射配置</span><br><span class="line">utteranc_issue_term: pathname</span><br></pre></td></tr></table></figure><p>hexo g &amp;hexo d 配置完成</p><h1 id="博客中插入音乐"><a href="#博客中插入音乐" class="headerlink" title="博客中插入音乐"></a>博客中插入音乐</h1><p>使用Aplayer播放器，需要用到插件</p><p>切换到hexo目录，运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure><p>安装完成后，在需要添加的音乐的地方加上</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer &quot;歌曲名称&quot; &quot;作者&quot; &quot;音乐_url&quot; &quot;封面图片_url&quot; &quot;autoplay&quot; %&#125;</span><br></pre></td></tr></table></figure><p>注意这个在MarkDown文件中插入要看一下这段文字是不是在Paragraph中设置的是Code Fences，要改成普通字段</p><p>举例网易云的音乐外部链接获取，一般获取到的是这个样子<a href="https://music.163.com/#/song?id=21311956" target="_blank" rel="noopener">https://music.163.com/#/song?id=21311956</a>，要把它改成<a href="http://music.163.com/song/media/outer/url?加上之前链接获取的id值+.mp3就是这样" target="_blank" rel="noopener">http://music.163.com/song/media/outer/url?加上之前链接获取的id值+.mp3就是这样</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://music.163.com/song/media/outer/url?id=21311956.mp3</span><br></pre></td></tr></table></figure><p>获取图片直接按F12获取图片链接就可以了</p><p>之后</p><p>hexo d –g就可以了</p><p>如果要加入歌单可以这样写</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;&#123;&quot;narrow&quot;: false,&quot;autoplay&quot;: true,&quot;showlrc&quot;: 3,&quot;mode&quot;: &quot;random&quot;,&quot;music&quot;: [&#123;&quot;title&quot;: &quot;轮回&quot;,&quot;author&quot;: &quot;杭盖&quot;,&quot;url&quot;: &quot;http://music.163.com/song/media/outer/url?id=31654650.mp3&quot;,&quot;pic&quot;: &quot;http://p1.music.126.net/7LWp6SH2v2rcad5X8rubbg==/1385384662120695.jpg?param=130y130&quot;,&quot;lrc&quot;: &quot;lyric.txt&quot;&#125;,&#123;&quot;title&quot;: &quot;She Is My Sin&quot;,&quot;author&quot;: &quot;nightwish&quot;,&quot;url&quot;: &quot;http://music.163.com/song/media/outer/url?id=4209157.mp3&quot;,&quot;pic&quot;: &quot;http://p1.music.126.net/TK4eehKaatnOgvkUFW8AkQ==/1743825441666319.jpg&quot;,&quot;lrc&quot;:&quot;She Is My Sin.txt&quot;&#125;]&#125;&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure><p>歌词链接的获取需要检查代码，查看歌词对应位置的对应id值是什么然后拼接成字符串：<a href="http://music.163.com/api/song/lyric?id=4209157&amp;lv=1&amp;kv=1&amp;tv=-1，之后打开网页另存为成.txt的文件，存放到hexo的资源目录中。" target="_blank" rel="noopener">http://music.163.com/api/song/lyric?id=4209157&amp;lv=1&amp;kv=1&amp;tv=-1，之后打开网页另存为成.txt的文件，存放到hexo的资源目录中。</a></p><p>示例如我博客里的自我介绍（about）的使用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://hugenye.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo主题配置" scheme="http://hugenye.github.io/tags/Hexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Hexo速度提升</title>
    <link href="http://hugenye.github.io/2020/07/21/double/"/>
    <id>http://hugenye.github.io/2020/07/21/double/</id>
    <published>2020-07-21T00:40:05.000Z</published>
    <updated>2020-07-21T08:44:28.476Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Hexo-双线部署到-Coding-（2020版）和-GitHub-提升访问速度"><a href="#Hexo-双线部署到-Coding-（2020版）和-GitHub-提升访问速度" class="headerlink" title="Hexo 双线部署到 Coding （2020版）和 GitHub 提升访问速度"></a>Hexo 双线部署到 Coding （2020版）和 GitHub 提升访问速度</h1><p>Hex+GitHub搭建的博客，网站访问速度特别的慢，所以选择把博客推送到Coding来提升访问速度。</p><p>由于Coding Pages改版，很多功能找起来和网上看到的功能块的位置不一样，所以觉得还是写一个最新的部署案例。</p><p>部署步骤：</p><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p><a href="https://coding.net/" target="_blank" rel="noopener">Coding Pages网址</a>点击进入后，选择【免费注册】</p><p>进入注册页面，会看到要先创建团队(我的团队，才可以创建用户。</p><img src="/2020/07/21/double/Coding的注册.PNG" title="Coding的注册页面"><p>进入Coding的后台</p><img src="/2020/07/21/double/Coding后台.PNG" title="Coding的用户后台页面"><p>选择【项目】-》【创建项目】</p><img src="/2020/07/21/double/创建项目.PNG" title="创建项目"><p>之后会弹出要你选择项目模板，我选择的是项目托管</p><img src="/2020/07/21/double/选择项目模板.PNG" title="选择项目模板"><p>之后填写项目名称建议和自己的用户名保持一致，可以直接通过 user_name.coding.me （我设置的是hugenye.coding.me访问博客，项目标识是自动填写，之后【完成创建】</p><p>项目就创建好了。</p><h2 id="配置公钥"><a href="#配置公钥" class="headerlink" title="配置公钥"></a>配置公钥</h2><p>参考<a href="https://help.coding.net/docs/project/features/ssh.html?_ga=2.71797075.1386798579.1595219352-1055493866.1595219352" target="_blank" rel="noopener">Coding 配置公钥</a></p><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h2><p>进入我们的项目，选择SSH链接，复制链接</p><p>然后打开本地博客根目录的config.yml文件，找到deploy关键字，添加复制的coding地址：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"> <span class="comment"># repository: https://github.com/Hugenye/Hugenye.github.io.git</span></span><br><span class="line"> <span class="comment"># branch: master</span></span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line">       <span class="comment">#github的ssh链接</span></span><br><span class="line"><span class="attr">       github:</span> <span class="attr">https://github.com/Hugenye/Hugenye.github.io.git,master</span></span><br><span class="line">       <span class="comment">##coding的ssh链接</span></span><br><span class="line"><span class="attr">       coding:</span> <span class="string">git@e.coding.net:hugenye/hugenye.coding.me/hugenye.coding.me.git,master</span></span><br></pre></td></tr></table></figure><h2 id="将代码推送到Coding。"><a href="#将代码推送到Coding。" class="headerlink" title="将代码推送到Coding。"></a>将代码推送到Coding。</h2><p>在博客根目录右击Git Bash Here，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>代码就会被推送</p><img src="/2020/07/21/double/代码推送.PNG" title="代码被推送到Coding"><h2 id="开启Coding-Pages（深坑）"><a href="#开启Coding-Pages（深坑）" class="headerlink" title="开启Coding Pages（深坑）"></a>开启Coding Pages（深坑）</h2><p>开启静态网站之前要先完成实名认证</p><p>查看之前别人发的微博，根本找不到位置，找了好久才找到</p><p>进入项目，选择左下角的【项目设置】</p><img src="/2020/07/21/double/项目设置.PNG" title="项目设置1"><p>【功能开关】-》打开【持续部署】的开关（不打开静态网站功能不启用）-》返回上一级菜单选择【持续部署】-》【静态网站】</p><img src="/2020/07/21/double/功能开关.PNG" title="项目设置2"><img src="/2020/07/21/double/静态网站.PNG" title="项目设置3"><p>选择【新建】，填写网站名称</p><img src="/2020/07/21/double/新建静态网站.PNG" title="项目设置4"><p>保存后会生成一个随机的网址</p><p>可以选择【立即部署】，域名（xxxx.coding-pages.me）就是免费给我们生成的随机域名（绑定域名需要用到）</p><p>也可以选择自己购买域名绑定域名</p><h2 id="绑定域名并开启Https"><a href="#绑定域名并开启Https" class="headerlink" title="绑定域名并开启Https"></a>绑定域名并开启Https</h2><p>在静态网站一栏的右上角点击【设置】，下滑到底部，绑定我们的域名</p><h3 id="注册域名"><a href="#注册域名" class="headerlink" title="注册域名"></a>注册域名</h3><p>域名有免费的，也有收费的，也不是很贵。</p><p>在腾讯云买了个.xyz的域名，最近有活动，新用户一年1元钱。</p><h3 id="DNSPod域名解析"><a href="#DNSPod域名解析" class="headerlink" title="DNSPod域名解析"></a>DNSPod域名解析</h3><p>域名解析有两种方式：</p><p>1.在域名 DNS 设置中添加一条 CNAME 记录指向 xxxx.coding-pages.me，解析路线选择默认。<br>2.在域名 DNS 设置中添加一条A记录，记录指向 xxxx.coding-pages.me的ip，解析路线选择默认。（ip地址获取：WIN+R输入cmd进入终端，输入：ping xxxx.coding-pages.me 即可。）</p><p>操作方式：（选择第一种方式）</p><p>进入DNSPod的控制台，选择【DNS解析】—》【我的域名】</p><p>添加要解析的域名</p><img src="/2020/07/21/double/添加要域名解析.PNG" title="域名解析"><p>进入要解析的域名【添加记录】，添加一条 CNAME 记录指向Coding产生的xxxx.coding-pages.com的地址，之后选择这条记录有个SSL的开关，选中生成SSL证书，之后都点击开启就可以了。</p><img src="/2020/07/21/double/添加记录.PNG" title="添加记录"><h3 id="开启HTTPS，勾选如图所示："><a href="#开启HTTPS，勾选如图所示：" class="headerlink" title="开启HTTPS，勾选如图所示："></a>开启HTTPS，勾选如图所示：</h3><img src="/2020/07/21/double/HTTPS.PNG" title="HTTPS设置1"><img src="/2020/07/21/double/网址.PNG" title="HTTPS设置2"><p>域名绑定成功</p><img src="/2020/07/21/double/成功.PNG" title="域名绑定成功">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://hugenye.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://hugenye.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>JDK8新特性</title>
    <link href="http://hugenye.github.io/2020/07/18/jdk8/"/>
    <id>http://hugenye.github.io/2020/07/18/jdk8/</id>
    <published>2020-07-18T01:16:25.000Z</published>
    <updated>2020-07-18T02:03:42.667Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Lamda表达式"><a href="#Lamda表达式" class="headerlink" title="Lamda表达式"></a>Lamda表达式</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="JAVA" scheme="http://hugenye.github.io/categories/JAVA/"/>
    
    
      <category term="JDK8新特性" scheme="http://hugenye.github.io/tags/JDK8%E6%96%B0%E7%89%B9%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title>网页三剑客之CSS</title>
    <link href="http://hugenye.github.io/2020/06/28/css/"/>
    <id>http://hugenye.github.io/2020/06/28/css/</id>
    <published>2020-06-28T09:49:23.000Z</published>
    <updated>2020-08-19T08:40:15.584Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="css简介"><a href="#css简介" class="headerlink" title="css简介"></a>css简介</h2><h3 id="什么是CSS"><a href="#什么是CSS" class="headerlink" title="什么是CSS"></a>什么是CSS</h3><p>层叠样式标签，css对html进行样式修饰。</p><p>样式表：css属性样式的集合，不同的css样式对同一个html标签进行修饰，按照优先级先后引用</p><h3 id="css的作用"><a href="#css的作用" class="headerlink" title="css的作用"></a>css的作用</h3><p>修饰html使其html的样式更加好看</p><p>提高属性的复用性</p><p>html内容与样式相分割开，便于后期维护</p><h3 id="css的引入方式和书写规范"><a href="#css的引入方式和书写规范" class="headerlink" title="css的引入方式和书写规范"></a>css的引入方式和书写规范</h3><h4 id="内嵌样式"><a href="#内嵌样式" class="headerlink" title="内嵌样式"></a>内嵌样式</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> 将属性直接写到标签内</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:50px;color:blue;font-size:50px"</span>&gt;</span> 你们好<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">语法： </span><br><span class="line">1.使用style属性，将样式嵌入到html标签中</span><br><span class="line">2.属性写法： 属性：属性值</span><br><span class="line">3.多个属性之间使用;分开</span><br></pre></td></tr></table></figure><h4 id="内部样式"><a href="#内部样式" class="headerlink" title="内部样式"></a>内部样式</h4><p>在head标签中，使用style标签对css属性的引入</p><h4 id="外部样式"><a href="#外部样式" class="headerlink" title="外部样式"></a>外部样式</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">将<span class="selector-tag">css</span>提取成一个特有的文件，放置在指定的文件夹中，谁使用，谁引用即可。</span><br><span class="line">&lt;link  rel="stylesheet"  type="text/css"  href="路径" /&gt;</span><br><span class="line"></span><br><span class="line">语法：  </span><br><span class="line">1.创建<span class="selector-tag">css</span>文件，将<span class="selector-tag">css</span>属性写到文件中，</span><br><span class="line">2.在<span class="selector-tag">head</span>中使用<span class="selector-tag">link</span>标签进行引入</span><br><span class="line">3.属性的写法: 属性：属性值</span><br><span class="line">4.多个属性之间使用分号;隔开</span><br></pre></td></tr></table></figure><h2 id="css选择器"><a href="#css选择器" class="headerlink" title="css选择器"></a>css选择器</h2><h3 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h3><h4 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">标签名&#123;</span><br><span class="line">属性：属性值;</span><br><span class="line">属性：属性值</span><br><span class="line">&#125;</span><br><span class="line">&lt;标签名&gt; &lt;/标签名&gt;</span><br></pre></td></tr></table></figure><h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#id</span>&#123;</span><br><span class="line">属性:属性值；</span><br><span class="line">属性:属性值</span><br><span class="line">&#125;</span><br><span class="line">&lt;div id="id值"&gt;this is a div&lt;/div&gt;</span><br></pre></td></tr></table></figure><h4 id="类型选择器"><a href="#类型选择器" class="headerlink" title="类型选择器"></a>类型选择器</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.类名&#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps:对使用三种基本选择器对同一个标签进行修改，id&gt;class&gt;标签</p><h3 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">基本选择器[属性=&apos;属性值&apos;]&#123;</span><br><span class="line">   </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="伪元素选择器"><a href="#伪元素选择器" class="headerlink" title="伪元素选择器"></a>伪元素选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">选择器:伪元素 &#123;</span><br><span class="line">  属性:属性值;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">CSS</span> 类也可以与伪元素配合使用：</span><br><span class="line">选择器 .类名:伪元素 &#123;</span><br><span class="line">  属性:属性值;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>描述</th><th>CSS</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_first-letter.asp" target="_blank" rel="noopener">:first-letter</a></td><td>向文本的第一个字母添加特殊样式。</td><td>1</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_first-line.asp" target="_blank" rel="noopener">:first-line</a></td><td>向文本的首行添加特殊样式。</td><td>1</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_before.asp" target="_blank" rel="noopener">:before</a></td><td>在元素之前添加内容。</td><td>2</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_after.asp" target="_blank" rel="noopener">:after</a></td><td>在元素之后添加内容。</td><td>2</td></tr></tbody></table><h3 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">选择器 : 伪类 &#123;</span><br><span class="line">属性: 属性值</span><br><span class="line">&#125;</span><br><span class="line">//CSS 类也可与伪类搭配使用。</span><br><span class="line">选择器 <span class="selector-class">.class</span> : 伪类 &#123;</span><br><span class="line">属性: 属性值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span>四种状态  </span><br><span class="line">1.未选中状态   a:link&#123; css属性&#125;</span><br><span class="line">2.悬浮状态     a:hover&#123;css属性&#125;</span><br><span class="line">3.出发触发状态 a:active&#123;css属性&#125;</span><br><span class="line">4.完成状态     a:visited&#123;css属性&#125;</span><br><span class="line"></span><br><span class="line">四个伪类的声明顺序应该是：':link'、':visited'、':hover'、':active'</span><br><span class="line"></span><br><span class="line">提示：在 <span class="selector-tag">CSS</span> 定义中，<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> 必须被置于 <span class="selector-tag">a</span><span class="selector-pseudo">:link</span> 和 <span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> 之后，才是有效的。</span><br><span class="line">提示：在 <span class="selector-tag">CSS</span> 定义中，<span class="selector-tag">a</span><span class="selector-pseudo">:active</span> 必须被置于 <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> 之后，才是有效的。</span><br><span class="line">提示：伪类名称对大小写不敏感。</span><br></pre></td></tr></table></figure><p>first-child 第一个元素        </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first-child</span>&#123;</span><br><span class="line">属性：属性值;</span><br><span class="line">&#125;</span><br><span class="line">注释：必须声明 &lt;!<span class="selector-tag">DOCTYPE</span>&gt;，这样 <span class="selector-pseudo">:first-child</span> 才能在 <span class="selector-tag">IE</span> 中生效。</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>描述</th><th>CSS</th></tr></thead><tbody><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_active.asp" target="_blank" rel="noopener">:active</a></td><td>向被激活的元素添加样式。</td><td>1</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_focus.asp" target="_blank" rel="noopener">:focus</a></td><td>向拥有键盘输入焦点的元素添加样式。</td><td>2</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_hover.asp" target="_blank" rel="noopener">:hover</a></td><td>当鼠标悬浮在元素上方时，向元素添加样式。</td><td>1</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_link.asp" target="_blank" rel="noopener">:link</a></td><td>向未被访问的链接添加样式。</td><td>1</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_visited.asp" target="_blank" rel="noopener">:visited</a></td><td>向已被访问的链接添加样式。</td><td>1</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_first-child.asp" target="_blank" rel="noopener">:first-child</a></td><td>向元素的第一个子元素添加样式。</td><td>2</td></tr><tr><td><a href="https://www.w3school.com.cn/cssref/pr_pseudo_lang.asp" target="_blank" rel="noopener">:lang</a></td><td>向带有指定 lang 属性的元素添加样式。</td><td>2</td></tr></tbody></table><h3 id="派生选择器"><a href="#派生选择器" class="headerlink" title="派生选择器"></a>派生选择器</h3><p>一层一层向下获取标签，遵循元素属性和id选择方式的规则，不同层级之间需要添加 空格</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span> <span class="selector-tag">strong</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#len</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">  text-align：right;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.fancy</span> <span class="selector-tag">td</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:<span class="number">#566</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="后代选择器"><a href="#后代选择器" class="headerlink" title="后代选择器"></a>后代选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">只对 <span class="selector-tag">h1</span> 元素中的 <span class="selector-tag">em</span> 元素应用样式</span><br><span class="line"><span class="selector-tag">h1</span> <span class="selector-tag">em</span> &#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure><h4 id="子元素选择器"><a href="#子元素选择器" class="headerlink" title="子元素选择器"></a>子元素选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">只作为 <span class="selector-tag">h1</span> 元素子元素的 <span class="selector-tag">strong</span> 元素</span><br><span class="line"><span class="selector-tag">h1</span> &gt; <span class="selector-tag">strong</span> &#123;<span class="attribute">color</span>:red;&#125;</span><br></pre></td></tr></table></figure><h4 id="相邻兄弟选择器"><a href="#相邻兄弟选择器" class="headerlink" title="相邻兄弟选择器"></a>相邻兄弟选择器</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选择紧接在 <span class="selector-tag">h1</span> 元素后出现的段落，<span class="selector-tag">h1</span> 和 <span class="selector-tag">p</span> 元素拥有共同的父元素</span><br><span class="line"><span class="selector-tag">h1</span> + <span class="selector-tag">p</span> &#123;<span class="attribute">margin-top</span>:<span class="number">50px</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="css属性"><a href="#css属性" class="headerlink" title="css属性"></a>css属性</h2><h3 id="文字属性"><a href="#文字属性" class="headerlink" title="文字属性"></a>文字属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-size</span>: 80<span class="selector-tag">px</span>;</span><br><span class="line">font-family: '黑体';</span><br><span class="line"><span class="selector-tag">font-style</span>: <span class="selector-tag">italic</span>;</span><br><span class="line"><span class="selector-tag">font-weight</span><span class="selector-pseudo">:blod</span></span><br></pre></td></tr></table></figure><h3 id="文本属性"><a href="#文本属性" class="headerlink" title="文本属性"></a>文本属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">color</span><span class="selector-pseudo">:red</span>;</span><br><span class="line"><span class="selector-tag">text-decoration</span>:下划线 </span><br><span class="line">属性值：<span class="selector-tag">none</span>  <span class="selector-tag">underline</span></span><br><span class="line"><span class="selector-tag">text-align</span> 对其方式 </span><br><span class="line">属性值：<span class="selector-tag">left</span> <span class="selector-tag">right</span> <span class="selector-tag">center</span></span><br><span class="line"><span class="selector-tag">line-height</span></span><br></pre></td></tr></table></figure><h3 id="背景属性"><a href="#背景属性" class="headerlink" title="背景属性"></a>背景属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-color</span>:</span><br><span class="line"><span class="selector-tag">background-image</span>:背景图片</span><br><span class="line"><span class="selector-tag">background-repeat</span>:平铺方式</span><br><span class="line"><span class="selector-tag">background-position</span>: 左 上</span><br><span class="line">background:red url("./img.gif") no-repeat right top;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">position</span>指定位置</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">  <span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">"buy.gif"</span>);</span><br><span class="line">  <span class="attribute">background-repeat</span>:no-repeat;</span><br><span class="line">  <span class="attribute">background-position</span>: left top;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="列表属性"><a href="#列表属性" class="headerlink" title="列表属性"></a>列表属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">list-style-type</span> 列表前面的小标志</span><br><span class="line"><span class="selector-tag">list-style-image</span> 列表前面的小图片</span><br><span class="line"><span class="selector-tag">url</span>(图片地址);</span><br></pre></td></tr></table></figure><h3 id="尺寸属性"><a href="#尺寸属性" class="headerlink" title="尺寸属性"></a>尺寸属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">width</span>  100<span class="selector-tag">px</span>  100%</span><br><span class="line"><span class="selector-tag">height</span></span><br></pre></td></tr></table></figure><h3 id="显示属性"><a href="#显示属性" class="headerlink" title="显示属性"></a>显示属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>  <span class="selector-tag">block</span>块级显示 </span><br><span class="line"><span class="selector-tag">none</span>  隐藏</span><br><span class="line"><span class="selector-tag">inline</span> 行级显示</span><br><span class="line"><span class="selector-class">.css</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>:block//<span class="string">"把行内标签变为块级标签显示</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">//  示例：form表单提交显示 span内容；</span></span><br><span class="line"><span class="string">function btnclick()&#123;</span></span><br><span class="line"><span class="string">  var sp =  document.getElementById("</span>span<span class="string">");</span></span><br><span class="line"><span class="string">  sp.style.display="</span>inline<span class="string">"</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="定位属性"><a href="#定位属性" class="headerlink" title="定位属性"></a>定位属性</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">position</span>：定位位置  </span><br><span class="line">    <span class="selector-tag">static</span></span><br><span class="line">    <span class="selector-tag">relative</span></span><br><span class="line">    <span class="selector-tag">fixed</span></span><br><span class="line">    <span class="selector-tag">absolute</span></span><br></pre></td></tr></table></figure><h4 id="Static定位"><a href="#Static定位" class="headerlink" title="Static定位"></a>Static定位</h4><p>HTML元素的默认值，即没有定位，元素出现在正常的流中。</p><p>静态定位的元素不会受到 top, bottom, </p><h4 id="Fixed定位"><a href="#Fixed定位" class="headerlink" title="Fixed定位"></a>Fixed定位</h4><p>元素的位置相对于浏览器窗口是固定位置。</p><p>即使窗口是滚动的它也不会移动：</p><h4 id="Relative定位"><a href="#Relative定位" class="headerlink" title="Relative定位"></a>Relative定位</h4><p> 相对定位元素的定位是相对其正常位置    </p><h4 id="Absoulute定位"><a href="#Absoulute定位" class="headerlink" title="Absoulute定位"></a>Absoulute定位</h4><p>绝对位置，相对于html边界的距离，可以将元素设置到页面的任何位置；</p><h3 id="浮动属性"><a href="#浮动属性" class="headerlink" title="浮动属性"></a>浮动属性</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">float</span>： 浮动位置 相对于父容器的位置</span><br><span class="line"><span class="selector-tag">left</span></span><br><span class="line"><span class="selector-tag">right</span> </span><br><span class="line">//clear可以清楚浮动，浮动会对正常排序的标签造成影响，所以在使用浮动后，我们通常要进行清除浮动==》.clear&#123;clear:both&#125;</span><br></pre></td></tr></table></figure><p>浮动造成的问题：</p><p>1、边框和背景不能撑开</p><p>2、影响下一个标签的正常显示</p><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><h3 id="CSS-盒子模型-Box-Model-是什么？"><a href="#CSS-盒子模型-Box-Model-是什么？" class="headerlink" title="CSS 盒子模型(Box Model)是什么？"></a>CSS 盒子模型(Box Model)是什么？</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">所有HTML元素可以看作盒子，在CSS中，&quot;box model&quot;这一术语是用来设计和布局时使用。</span><br><span class="line">CSS盒模型本质上是一个盒子，封装周围的HTML元素，它包括：边距，边框，填充，和实际内容。</span><br><span class="line">盒模型允许我们在其它元素和周围元素边框之间的空间放置元素</span><br></pre></td></tr></table></figure><img src="/2020/06/28/css/hezi.PNG" title="这个是盒子模型图片"><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><h5 id="border边框"><a href="#border边框" class="headerlink" title="border边框"></a>border边框</h5><p> border-left/right/bottom/top 边框位置</p><p> border-style:线型</p><p> border-width:线粗 ，可以指定边框的宽度</p><p>【边框指定宽度的方法】：1、可以指定长度值，比如20px或者0.2em等等；</p><p>或者2、使用3个关键字之一（thick、medium默认值、thin）</p><p> border-color；线颜色</p><h5 id="padding内边距"><a href="#padding内边距" class="headerlink" title="padding内边距"></a>padding内边距</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">padding</span><span class="selector-pseudo">:1px</span> 2<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> 4<span class="selector-tag">px</span>;上右下左</span><br><span class="line">padding:1px 2px;上下/左右</span><br><span class="line"><span class="selector-tag">padding</span><span class="selector-pseudo">:1px</span> 2<span class="selector-tag">px</span> 3<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">padding-top</span>:单独设置</span><br></pre></td></tr></table></figure><h5 id="margin外边距"><a href="#margin外边距" class="headerlink" title="margin外边距"></a>margin外边距</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">margin</span><span class="selector-pseudo">:10px</span>;代表上下左右都是10<span class="selector-tag">px</span></span><br><span class="line"><span class="selector-tag">margin</span><span class="selector-pseudo">:1px</span> 2<span class="selector-tag">px</span> 3<span class="selector-tag">px</span> 4<span class="selector-tag">px</span>;上右下左</span><br><span class="line">margin:1px 2px;上下/左右</span><br><span class="line"><span class="selector-tag">margin</span><span class="selector-pseudo">:1px</span> 2<span class="selector-tag">px</span> 3<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">margin-top</span>:单独设置</span><br></pre></td></tr></table></figure><h4 id="css边框"><a href="#css边框" class="headerlink" title="css边框"></a>css边框</h4><h5 id="直角边框"><a href="#直角边框" class="headerlink" title="直角边框"></a>直角边框</h5><p>示例：css设置三角图形border-xxx位置的-color</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.tr1</span>&#123;</span></span><br><span class="line">            width: 0;</span><br><span class="line">            height: 0;</span><br><span class="line">            border: 100px solid transparent;</span><br><span class="line">            border-top-color: red;</span><br><span class="line">            border-bottom: none;</span><br><span class="line">            /* border-left-color: transparent;</span><br><span class="line">            border-right-color: transparent; */</span><br><span class="line">        &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">　<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tr1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2020/06/28/css/red_sanjiao.PNG" title="这个是三角图形图片"><p>border-xxx位置的-color可能设置的值</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td><em>color_name</em></td><td>规定颜色值为颜色名称的边框颜色（比如 red）。</td></tr><tr><td><em>hex_number</em></td><td>规定颜色值为十六进制值的边框颜色（比如 #ff0000）。</td></tr><tr><td><em>rgb_number</em></td><td>规定颜色值为 rgb 代码的边框颜色（比如 rgb(255,0,0)）。</td></tr><tr><td>transparent</td><td>默认值。边框颜色为透明。</td></tr><tr><td>inherit</td><td>规定应该从父元素继承边框颜色。</td></tr></tbody></table><h5 id="圆角边框"><a href="#圆角边框" class="headerlink" title="圆角边框"></a>圆角边框</h5><p>用 CSS3，你可以创建圆角边框，添加阴影框，并作为边界的形象而不使用设计程序，如 Photoshop</p><p>边框属性：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span>：</span><br><span class="line">                 <span class="selector-tag">box-shadow</span>  元素阴影</span><br><span class="line">                 <span class="selector-tag">text-shadow</span> 文字阴影</span><br></pre></td></tr></table></figure><p>基本语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>:[inset] x-offset y-offset blur-radius spread-radiuscolor</span><br><span class="line">&#125;</span><br><span class="line">&#123;<span class="attribute">box-shadow</span>:[投影方式] X轴偏移量 Y轴偏移量 阴影模糊半径 阴影扩展半径 阴影颜色&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">box-shadow属性的参数设置取值：</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">阴影类型：此参数可选。如不设值，默认投影方式是外阴影；如取其唯一值“inset”，其投影为内阴影；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">X-offset:阴影水平偏移量，其值可以是正负值。如果值为正值，则阴影在对象的右边，其值为负值时，阴影在对象的左边；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Y-offset:阴影垂直偏移量，其值也可以是正负值。如果为正值，阴影在对象的底部，其值为负值时，阴影在对象的顶部；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">阴影模糊半径：此参数可选，，但其值只能是为正值，如果其值为0时，表示阴影不具有模糊效果，其值越大阴影的边缘就越模糊；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">阴影扩展半径：此参数可选，其值可以是正负值，如果值为正，则整个阴影都延展扩大，反之值为负值时，则缩小；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">阴影颜色：此参数可选。如不设定颜色，浏览器会取默认色，但各浏览器默认取色不一致，特别是在webkit内核下的safari和chrome浏览器下表现为透明色，在Firefox/Opera下表现为黑色（已验证），建议不要省略此参数。</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>示例：阴影圆角</p><img src="/2020/06/28/css/阴影.PNG" title="这个是阴影圆角图片">    <h5 id="多背景应用："><a href="#多背景应用：" class="headerlink" title="多背景应用："></a>多背景应用：</h5><pre><code> background-image: url(../img/bookcover/101.jpg),url(../img/bookcover/103.jpg);background-position: right bottom, left top; background-repeat: no-repeat, no-repeat; </code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://hugenye.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>网页三剑客（HTML+CSS+JavaScript）之HTML</title>
    <link href="http://hugenye.github.io/2020/06/17/html/"/>
    <id>http://hugenye.github.io/2020/06/17/html/</id>
    <published>2020-06-17T01:24:28.000Z</published>
    <updated>2020-08-19T08:40:35.368Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="HTML是什么？"><a href="#HTML是什么？" class="headerlink" title="HTML是什么？"></a>HTML是什么？</h2><p> html是描述网页的一种语言。</p><p>HTML 指定的是<strong><u>超文本</u>***</strong>标记***语言 (Hyper Text Markup Language)<br>HTML 不是一种编程语言,而是一种标记语言(Markup Language)<br>标记语言是一套标记标签<br>HTML使用标记标签来描述网页</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">超文本： </span><br><span class="line">1.普通文本不能实现的超文本可以实现，能实现普通文本不能实现的功能</span><br><span class="line">2.包括超链接的文本</span><br><span class="line">标记： </span><br><span class="line">标记就是标签，不同的标签能实现不同的功能或者效果。</span><br></pre></td></tr></table></figure><h2 id="书写规范"><a href="#书写规范" class="headerlink" title="书写规范"></a>书写规范</h2><h3 id="html结构"><a href="#html结构" class="headerlink" title="html结构"></a>html结构</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- 包括页面资讯的信息: 整体的属性 title ，</span></span><br><span class="line"><span class="comment">  指导浏览器解析的标签，引入外部文件的标签--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">      文本标签</span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">"red"</span>  <span class="attr">size</span>=<span class="string">"20"</span>&gt;</span>字体<span class="tag">&lt;<span class="name">font</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- body 页面具体展示的内容--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="html标签"><a href="#html标签" class="headerlink" title="html标签"></a>html标签</h3><p>是以尖括号包裹的关键字成对出现的</p><p>有的开始标签,有结束标签,支持正确的嵌套</p><p>大部分标签有属性，格式： 属性一=”属性值1”</p><p>空标签，功能单一，不需要标签体，可以直接简写为&lt;标签 /&gt;</p><p>html标签不区分大小写，但是建议小写</p><h3 id="基本标签"><a href="#基本标签" class="headerlink" title="基本标签"></a>基本标签</h3><h4 id="文件标签（结构标签）"><a href="#文件标签（结构标签）" class="headerlink" title="文件标签（结构标签）"></a>文件标签（结构标签）</h4><html> 根标签<head><meta name="generator" content="Hexo 3.9.0"> 头标签<title> 页面的标题<body> 本文 (只有<body>具有参数设定)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">text=&quot;#000000&quot; </span><br><span class="line">用以设定文字颜色。 #000000 代表黑色，亦可以采用颜色的名称，即 text=&quot;black&quot; 。各种颜色的值及名称可参考【调色原理】一节。 </span><br><span class="line"></span><br><span class="line">link=&quot;#0000FF&quot; </span><br><span class="line">设定一般文字连结颜色。 </span><br><span class="line"></span><br><span class="line">alink=&quot;#FF0000&quot; </span><br><span class="line">设定刚按下时文字链接颜色。 </span><br><span class="line"></span><br><span class="line">vlink=&quot;#0000FF&quot; </span><br><span class="line">设定链接后的颜色。（被按过）。 </span><br><span class="line"></span><br><span class="line">background=&quot;bg1.gif&quot; </span><br><span class="line">设定背景墙纸。GIF 或 JPEG 皆可，可以是绝对途径或相对途径。 </span><br><span class="line"></span><br><span class="line">bgcolor=&quot;#FFFFFF&quot; </span><br><span class="line">设定背景颜色。当己设定背景墙纸时会失去作用，除非墙纸有透明部分。 </span><br><span class="line"></span><br><span class="line">leftmargin=2 </span><br><span class="line">设定整份文件显示画面的左方边沿空间，单位为像素。 『只适用于IE』 </span><br><span class="line"></span><br><span class="line">topmargin=2 </span><br><span class="line">设定整份文件显示画面的上方边沿空间。 『只适用于IE』 </span><br><span class="line"></span><br><span class="line">bgproperties=&quot;fixed&quot; </span><br><span class="line">固定背景墙纸，当卷动文字时墙纸不会跟著卷动。 『只适用于IE』</span><br></pre></td></tr></table></figure><h4 id="排版标签"><a href="#排版标签" class="headerlink" title="排版标签"></a>排版标签</h4><p>1、注解标签  <!--注解 --></p><p>2、换行标签 <br></p><p>3、段落标签 </p><p>段落标签</p>(属性 align对齐方式 left、center、right) <p></p><p>4、水平线标签 <hr>(属性:width 长度</p><p>size 粗度、color颜色、align 对齐方式、尺寸的写法10px/10%</p><p>)</p><h4 id="行标签"><a href="#行标签" class="headerlink" title="行标签"></a>行标签</h4><p><a>标签：用来链接一个其它的网页</a></p><p><span>标签：主要用来对行内的文字进行一些样式以及其他的操作；</span></p><p><em>标签：一般用来对文字进行强调，使用斜体体现出来；</em></p><p><strong>标签：一般用来对文字进行强调，使用加粗字体体现出来；</strong></p><p><img>标签：图片引用标签，其中 src属性中写入图片的地址；</p><p><var>标签：JavaScript中命名变量的标签。</var></p><h4 id="块标签"><a href="#块标签" class="headerlink" title="块标签"></a>块标签</h4><p>p标签：段落标签，段落文字使用，默认格式：段尾进行换行；</p><p>div标签：划分块的主要使用标签；</p><h4 id="字体标签"><a href="#字体标签" class="headerlink" title="字体标签"></a>字体标签</h4><p>font ：size  字体大小范围 1-7 不需要写单位  大于7默认为7；</p><p>​            color  字体的颜色；           </p><p>​            face  字体的类型！    </p><p>h1~h6：6级标题标签、字体的大小依次变小。</p><p><i>斜体</i></p><p><u> 下划线</u></p><h4 id="清单标签列表"><a href="#清单标签列表" class="headerlink" title="清单标签列表"></a>清单标签列表</h4><p><strong>ol有序列表</strong>（</p><p>type： 1 a A i l li前面的表示类型il罗马字符</p><p>start：数字，指的开始的位置</p><p>）</p><p>ol标签：有序列表的主标签，后面一般跟有序的1,2,3,4,5…；</p><p>li标签：列表中的主体使用标签</p><p><strong>ul无序列表</strong></p><p>ul标签：无序列表的主标签，后面的标号为圆点（黑色）；</p><p>dl标签：自定义标签的主标签；</p><p>dt标签：自定义标签的表头；可以放置个人简介图片</p><p>dd标签：自定义标签的表头的解释（描述）信息</p><p>ps–》清单列表定义自定义图片，需要在css中自定义列表的图片</p><h4 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h4><img src="//hugenye.github.io/2020/06/17/html/图片来源" width=" 只要指定宽度，那么高度会自动按比例缩放" height="”高度“/"><h4 id="超链接标签"><a href="#超链接标签" class="headerlink" title="超链接标签"></a>超链接标签</h4><p>&lt;a href=”要跳转页面” target=”框窗名称”/&gt;</p><p>target=”_blank”或“new” – 将连结的画面内容，开在新的浏览视窗中。</p><p>target=”_parent”– 将连结的画面内容，当成文件的上一个画面</p><p>target=”_self”  – 将连结的画面内容，显示在目前的视窗中。</p><p>target=”_top” –Html简介将框架中连结的画面内容，显示在没有框架的视窗中。（即除去了框架)</p><h4 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h4><table>是一个容器标记，意思是说它用以声明这是表格而且其他表格标记只能在他的 范围内才适用，属容器标记的还有其他。 <tr>用以标示表格列（row） <td>用以标示储存格（cell）<h4 id="表单标签"><a href="#表单标签" class="headerlink" title="表单标签"></a>表单标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"表单数据获取的接口"</span>  <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--单行文字盒--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Text"</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">value</span>=<span class="string">"20"</span> <span class="attr">align</span>=<span class="string">"MIDDLE"</span> <span class="attr">size</span>=<span class="string">"2"</span> <span class="attr">maxlength</span>=<span class="string">"255"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--单一选择--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span> <span class="attr">align</span>=<span class="string">"MIDDLE"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--确认盒 √--&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Checkbox"</span> <span class="attr">name</span>=<span class="string">"idol"</span> <span class="attr">value</span>=<span class="string">"Leon"</span> <span class="attr">align</span>=<span class="string">"RIGHT"</span> <span class="attr">checked</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--提交/清除按钮--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Submit"</span> <span class="attr">name</span>=<span class="string">"other_funtion"</span> <span class="attr">value</span>=<span class="string">"确定"</span> <span class="attr">align</span>=<span class="string">"MIDDLE"</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Reset"</span> <span class="attr">value</span>=<span class="string">"清除"</span> <span class="attr">align</span>=<span class="string">"MIDDLE"</span>&gt;</span> </span><br><span class="line">   <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Image"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">align</span>=<span class="string">"BOTTOM"</span> <span class="attr">src</span>=<span class="string">"ex_icon.gif"</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--文件上传--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"File"</span> <span class="attr">name</span>=<span class="string">"upload"</span> <span class="attr">align</span>=<span class="string">"BOTTOM"</span> <span class="attr">size</span>=<span class="string">"20"</span> <span class="attr">maxlength</span>=<span class="string">"100"</span> <span class="attr">accept</span>=<span class="string">"text/html"</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--隐藏--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Hidden"</span> <span class="attr">name</span>=<span class="string">"ID"</span> <span class="attr">value</span>=<span class="string">"6618"</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--Button按钮--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"Button"</span> <span class="attr">name</span>=<span class="string">"useless"</span> <span class="attr">value</span>=<span class="string">"Back"</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--卷动选单--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"where"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"hk"</span>&gt;</span>Hong Kong<span class="tag">&lt;/<span class="name">option</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"tw"</span> <span class="attr">selected</span>&gt;</span>Taiwan<span class="tag">&lt;/<span class="name">option</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"cn"</span>&gt;</span>China<span class="tag">&lt;/<span class="name">option</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"us"</span>&gt;</span>United States<span class="tag">&lt;/<span class="name">option</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"ca"</span>&gt;</span>Canada<span class="tag">&lt;/<span class="name">option</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span><br><span class="line">  <span class="comment">&lt;!--表单文字区块--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"comments"</span> <span class="attr">cols</span>=<span class="string">"40"</span> <span class="attr">rows</span>=<span class="string">"4"</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="多媒体标签"><a href="#多媒体标签" class="headerlink" title="多媒体标签"></a>多媒体标签</h4><h4 id="框架标签"><a href="#框架标签" class="headerlink" title="框架标签"></a>框架标签</h4><p>frameset ：属性：cols按比例分 水平线</p><p>​                                 rows 按行分 垂直</p><h4 id="其他标签"><a href="#其他标签" class="headerlink" title="其他标签"></a>其他标签</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span>   <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span>  字符格式</span><br><span class="line"></span><br><span class="line">网站查询的关键字</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span><br><span class="line">网站的介绍</span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"this is my page"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">link  引入</span><br><span class="line">rel 样式表</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"./styles.css"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特殊字符 ：            ® 注册符号</p><p>&amp;nbsp 空格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&amp;nbsp 空格</span><br><span class="line">&amp;gt   大于</span><br><span class="line">&amp;lt   小于</span><br><span class="line">&amp;copy 版权符号</span><br><span class="line">&amp;reg; 注册符号</span><br></pre></td></tr></table></figure></td></tr></table></body></body></title><link rel="alternate" href="/atom.xml" title="Hugenye个人博客" type="application/atom+xml"></head></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="前端" scheme="http://hugenye.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vue</title>
    <link href="http://hugenye.github.io/2020/05/19/vue/"/>
    <id>http://hugenye.github.io/2020/05/19/vue/</id>
    <published>2020-05-19T08:22:39.000Z</published>
    <updated>2020-08-19T08:34:17.510Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="1-谷歌浏览器扩展"><a href="#1-谷歌浏览器扩展" class="headerlink" title="1.  谷歌浏览器扩展"></a><a href="undefined">1.  谷歌浏览器扩展</a></h2><p>vue-devtools-dev扩展(让浏览器拥有vue调试功能)</p><h2 id="2-在VUE中AJAX请求的库-axios"><a href="#2-在VUE中AJAX请求的库-axios" class="headerlink" title="2.  在VUE中AJAX请求的库(axios)"></a><a href="undefined">2.  在VUE</a>中AJAX请求的库(axios)</h2><p>Axios.js</p><p>Created:function(){   //用于初始化数据的钩子</p><p>Axios.get(‘URL’).then(success=&gt;{</p><p>成功执行</p><p>},error=&gt;{</p><p>失败执行</p><p>})</p><p>}</p><p><a href="https://github.com/axios/axios" target="_blank" rel="noopener">https://github.com/axios/axios</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">axios.get(<span class="string">'/user'</span>, &#123;</span><br><span class="line"></span><br><span class="line">    params: &#123;</span><br><span class="line"></span><br><span class="line">      ID: <span class="number">12345</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line"></span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line"></span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h2 id="3-VUE常用指令"><a href="#3-VUE常用指令" class="headerlink" title="3.     VUE常用指令"></a><a href="undefined">3.     VUE</a>常用指令</h2><p>V-model（如果checkboxselecet是单选为true,false；多选为[],并且提供一个value属性;）实现数据双向绑定，常用于表单;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=<span class="string">"example"</span>&gt;</span><br><span class="line">    姓名：</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> v-model=<span class="string">"data.name"</span> placeholder=<span class="string">"请输入姓名"</span>/&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    性别：</span></span><br><span class="line">    &lt;input type="radio" id="man" value="One" v-model="data.sex" /&gt;</span><br><span class="line">    &lt;label for="man"&gt;男&lt;/label&gt;</span><br><span class="line">    &lt;input type="radio" id="male" value="Two" v-model="data.sex" /&gt;</span><br><span class="line">    &lt;label for="male"&gt;女&lt;/label&gt; //使用单选按钮时，注意value不要以为一个值</span><br><span class="line">    必须是唯一的，否则value相同的会被同时选中</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    兴趣：</span><br><span class="line">    &lt;input type="checkbox" id="book" value="book" v-model="data.interest" /&gt;</span><br><span class="line">    &lt;label for="book"&gt;阅读&lt;/label&gt;</span><br><span class="line">    &lt;input type="checkbox" id="swim" value="swim" v-model="data.interest" /&gt;</span><br><span class="line">    &lt;label for="swim"&gt;游泳&lt;/label&gt;</span><br><span class="line">    &lt;input type="checkbox" id="game" value="game" v-model="data.interest" /&gt;</span><br><span class="line">    &lt;label for="game"&gt;游戏&lt;/label&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    身份：</span><br><span class="line">    &lt;select v-model="data.identity"&gt;</span><br><span class="line">        &lt;option value="teacher" selected&gt;教师&lt;/option&gt;</span><br><span class="line">        &lt;option value="doctor" &gt;医生&lt;/option&gt;</span><br><span class="line">        &lt;option value="lawyer" &gt;律师&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;&lt;br&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">new Vue(&#123;</span><br><span class="line">    el:'#example',</span><br><span class="line">    data:&#123;</span><br><span class="line">        data:&#123;</span><br><span class="line">            name:"",</span><br><span class="line">            sex:"",</span><br><span class="line">            interest:[],</span><br><span class="line">            identity:''</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>V-model的修饰符</p><p>(1).lazy</p><p>默认情况下，v-model同步输入框的值和数据。可以通过这个修饰符，转变为在change事件再同步。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-model.lazy=<span class="string">"msg"</span>&gt;</span><br><span class="line">&lt;div id=<span class="string">"examples"</span>&gt;</span><br><span class="line">    &lt;input v-model=<span class="string">"msg"</span> lazy/&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    &#123;&#123;msg&#125;&#125;//这种方式是及时读取数据并修改值 下面是正确的方法</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&lt;div id=<span class="string">"example"</span>&gt;</span><br><span class="line">    &lt;input v-model.lazy=<span class="string">"msg"</span> /&gt;<span class="xml"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span></span><br><span class="line"><span class="xml">    &#123;&#123;msg&#125;&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="keyword">var</span> exampleLazy=<span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">"#example"</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">        msg:<span class="string">"内容是在change时间之后才改变的"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)<span class="comment">//输入数据后按Enter键才管用</span></span><br></pre></td></tr></table></figure><p>(2)   .number</p><p>自动将用户的输入值转化为数值类型（如果原值的转换结果为NaN，则返回原值）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;inputv-model.number=&quot;msg&quot;&gt;</span><br></pre></td></tr></table></figure><p> (3)   .trim</p><p>自动过滤用户输入的首尾空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;inputv-model.trim=&quot;msg&quot;&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>sqlserver</title>
    <link href="http://hugenye.github.io/2020/05/16/sqlserver/"/>
    <id>http://hugenye.github.io/2020/05/16/sqlserver/</id>
    <published>2020-05-16T09:34:12.000Z</published>
    <updated>2020-08-19T08:35:30.931Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据库指令练习"><a href="#数据库指令练习" class="headerlink" title="数据库指令练习"></a>数据库指令练习</h1><p><strong>实验**</strong>1  <strong><strong>数据库的创建与修改**</strong></strong></p><ol><li>在查询分析器中创建数据库，名称为Tushuguan1，数据文件的初始大小10Mb，增量2Mb，限制大小50Mb。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> tushuguan1</span><br><span class="line"><span class="keyword">on</span> primary</span><br><span class="line">(<span class="keyword">name</span>=<span class="string">'tushuguan1'</span>,</span><br><span class="line">filename=<span class="string">'c:\shujuku\tushuguan1.mdf'</span>,</span><br><span class="line"><span class="keyword">size</span>=<span class="number">10</span>Mb,</span><br><span class="line"><span class="keyword">maxsize</span>=<span class="number">50</span>Mb,</span><br><span class="line">filegrowth=<span class="number">2</span>Mb);</span><br></pre></td></tr></table></figure><ol><li>在查询分析器中，为Tushuguan1增加一个事务日志文件，名称为TushuguanL，文件的初始大小15Mb，增量1 Mb，限制大小30Mb。</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">log on</span><br><span class="line">(name=N'tushuguanl',</span><br><span class="line">filename='c:\shujuku\tushuguanl.ldf',</span><br><span class="line">size=15Mb,</span><br><span class="line">maxsize=30Mb,</span><br><span class="line">filegrowth=1Mb);</span><br></pre></td></tr></table></figure><p><strong>实验三**</strong>  <strong><strong>数据表的创建与修改（</strong></strong>2<strong><strong>）**</strong></strong></p><p><strong>二．实验内容****</strong></p><ol><li>在Tushuguan1中，在查询分析器中创建下面三个表，定义表中要求的约束。</li></ol><p>学生信息表：student</p><table><thead><tr><th><strong>字段名称****</strong></th><th><strong>数据类型****</strong></th><th><strong>说明****</strong></th></tr></thead><tbody><tr><td>stuID</td><td>Into 标识列(10000,10)</td><td>学生编号，主键</td></tr><tr><td>stuName</td><td>Varchar(10)</td><td>学生名称， 不为空</td></tr><tr><td>major</td><td>Varchar(50)</td><td>专业 默认值（‘计算机’），不为空</td></tr><tr><td>Sex</td><td>Char(2)</td><td>性别，检查约束，不为空</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">stuID <span class="built_in">int</span> primary <span class="keyword">key</span>,</span><br><span class="line">stuName <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">major <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">default</span> <span class="string">'计算机'</span>,</span><br><span class="line">sex <span class="built_in">char</span>(<span class="number">2</span>) <span class="keyword">check</span>(sex=<span class="string">'男'</span> <span class="keyword">or</span> sex=<span class="string">'女'</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>图书表：book</p><table><thead><tr><th><strong>字段名称****</strong></th><th><strong>数据类型****</strong></th><th><strong>说明****</strong></th></tr></thead><tbody><tr><td>BID</td><td>Int 标识列（10,1）</td><td>图书编号，主键</td></tr><tr><td>title</td><td>char(50)</td><td>书名 惟一性约束，不为空</td></tr><tr><td>author</td><td>char(20)</td><td>作者 ，不为空</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> book</span><br><span class="line">(BID <span class="built_in">int</span> primary <span class="keyword">key</span>,（BID <span class="built_in">int</span> <span class="keyword">identity</span>(<span class="number">10</span>,<span class="number">1</span>)书号胃标识列）</span><br><span class="line">title <span class="built_in">char</span>(<span class="number">50</span>) <span class="keyword">unique</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">author <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>计算所得列：总价AS 单价*数量</p><p>“出版日期”为当前日期：出版日期Datetime DEFAULT(gettime())</p><p>出版社只能是。。。CHECK(出版社 IN（’浙大’,’电子’,’中央“）)</p><p>借书信息表：borrow</p><table><thead><tr><th><strong>字段名称****</strong></th><th><strong>数据类型****</strong></th><th><strong>说明****</strong></th></tr></thead><tbody><tr><td>borrowID</td><td>char(10)</td><td>借书编号，主键</td></tr><tr><td>stuID</td><td>int</td><td>学生编号，外键</td></tr><tr><td>BID</td><td>Int</td><td>图书编号，外键</td></tr><tr><td>T_time</td><td>datetime</td><td>借书日期，不为空</td></tr><tr><td>B_time</td><td>datetime</td><td>还书日期</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> borrow(</span><br><span class="line">borrowID <span class="built_in">char</span>(<span class="number">10</span>) primary <span class="keyword">key</span>,</span><br><span class="line">stuID <span class="built_in">int</span>,</span><br><span class="line">BID <span class="built_in">int</span>,</span><br><span class="line">T_time datetimenot <span class="literal">null</span>,</span><br><span class="line">B_time datetime,</span><br><span class="line"><span class="keyword">foreign</span> <span class="keyword">key</span> (stuID) <span class="keyword">references</span> student(stuID),</span><br><span class="line"><span class="keyword">foreign</span> <span class="keyword">key</span> (BID) <span class="keyword">references</span> book(BID)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>要求：</p><p>（1）在创建表时，约束定义在表的属性中。</p><p>（2）创建表时，列只定义数据类型，是否为空等。再修改表添加约束。</p><ol><li>设置复合主键</li></ol><p>新建学生信息表：student1</p><table><thead><tr><th><strong>字段名称****</strong></th><th><strong>数据类型****</strong></th><th><strong>说明****</strong></th></tr></thead><tbody><tr><td>stuID</td><td>Into 标识列(10000,10)</td><td>学生编号</td></tr><tr><td>stuName</td><td>Varchar(10)</td><td>学生名称</td></tr><tr><td>major</td><td>Varchar(50)</td><td>专业</td></tr><tr><td>score1</td><td>int</td><td>成绩</td></tr></tbody></table><p>利用T－SQL设置复合主键（学生编号+学生姓名）</p><p>CONSTRAINT 主键名 PRIMARY KEY(学生编号,学生姓名)</p><ol><li>创建约束</li></ol><p>创建score1列的成绩约束，要求在0－100之间。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student1(</span><br><span class="line">stuID <span class="built_in">int</span>,</span><br><span class="line">stuName <span class="keyword">var</span> <span class="built_in">char</span>(<span class="number">10</span>),</span><br><span class="line">major <span class="keyword">var</span> <span class="built_in">char</span>(<span class="number">50</span>), </span><br><span class="line">score1 <span class="built_in">int</span> <span class="keyword">check</span>(score1&gt;=<span class="number">0</span> <span class="keyword">and</span> score1&lt;=<span class="number">100</span>),</span><br><span class="line">primary <span class="keyword">key</span>(stuID,stuName),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li>在三个表中添加一些数据，查看外键约束中如果选中：级联更新和级联删除后，更新主键数据和删除主键数据的情况。</li></ol><p>因为有外键约束  不能对表进行更新和删除</p><ol><li>观察去掉级联删除选项后，删除主键数据（外键存在引用的数据）的情况。</li></ol><p>去掉后 可以进行更新和删除</p><p>6． 用 T-SQL插入新纪录，观察各种约束的情况</p><ol><li>数据表复制</li></ol><p>（1）在当前库中，将“学生信息表”中的stuName和major列的数据复制到一个新表中。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> temp (stuName,major) <span class="keyword">select</span> stuName,major <span class="keyword">from</span> student</span><br></pre></td></tr></table></figure><p> （2）在当前库中，将“学生信息表”中的stuName和major列的数据复制到一个新表中。在新表中stuName列的别名为“学生姓名”，major列的别名为“专业”。</p><p>select stuName as学生姓名,major as专业into student3</p><p>from student </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>（3）将“学生信息表”中的stuName和major列的数据复制到数据库“abc”的一个新表中。</p><p>insert intoabc.dbo.student4</p><p>select stuName,majorfrom tushuguan1.dbo.student</p><ol><li>用 T-SQL删除纪录，观察各种约束的情况</li></ol><p>（1）单表删除记录，如删除student表中 专业为计算机的。删除“借书信息表”中，借书日期2009-1-1以前的。</p><p>delete fromstudent where major=’计算机’</p><p>delete fromborrow where T_time&lt;2009-1-1</p><p>（2） 多表删除，删除“张三”的借书记录。</p><p>delete </p><p>from borrow,student</p><p>where borrow.stuId=student.stuId</p><p>（3）多表删除，删除“张三”并书名为“abcd”的借书记录。</p><p>delete </p><p>from borrow,book</p><p>where borrow.stuId=(select stuID from student wherestuName=’张三’) andbook.title=’abcd’</p><p><strong>实验四**</strong>  <strong><strong>数据查询（</strong></strong>1<strong><strong>）**</strong></strong></p><p><strong>一．实验目的****</strong></p><p>学习使用SQL Server的查询语句，熟练掌握简单查询、排序、汇总函数、分组、HAVING和汇总等基本的查询操作。</p><p>1．基本语法</p><p>SELECT子句是SELECT语句的核心部分，虽然 SELECT 语句的完整语法较复杂，但是其主要的子句可归纳如下：</p><p><strong>SELECT select_list</strong></p><p><strong>[INTO new_table_name]</strong></p><p><strong>FROM table_list</strong></p><p><strong>[WHERE search_conditions]</strong></p><p><strong>[GROUP BY group_by_list]</strong></p><p><strong>[HAVING search_conditions]</strong></p><p><strong>[ORDER BY order_list [ASC | DESC] ]</strong></p><p>其中：</p><p><strong>select_list**</strong>：**表示需要检索的字段的列表。它是一个逗号分隔的表达式列表，列表中可以包含数据源表或视图中的字段名称。也可能是其它表达式，在选择列表中使用 * 表达式指定返回源表中的所有列。在此子句中，可以使用DISTINCT和TOP等关键字来限制结果集的范围。</p><p><strong>INTO new_table_name**</strong>：**指定使用检索出的结果集来创建新表。新表的名称为new_table_name。</p><p><strong>FROM table_list**</strong>：** 指定检索数据的数据源表的列表。</p><p><strong>WHERE search_conditions**</strong>：**  WHERE子句是一个筛选，它定义了源表中的行要满足 SELECT 语句的要求所必须达到的条件。只有符合条件的行才向结果集提供数据。不符合条件的行中的数据不会被使用。</p><p><strong>GROUP BY group_by_list**</strong>：**** ** GROUP BY 子句根据 group_by_list 列中的值将结果集分成组。</p><p><strong>HAVING search_conditions**</strong>：**  HAVING子句是应用于结果集的附加筛选。逻辑上讲，HAVING 子句从中间结果集对行进行筛选，这些中间结果集是用 SELECT 语句中的 FROM、WHERE 或 GROUP BY 子句创建的。HAVING 子句通常与 GROUP BY 子句一起使用。</p><p><strong>ORDER BY order_list [ ASC | DESC ]**</strong>：**  ORDERBY 子句定义结果集中的行排列的顺序。order_list 指定组成排序列表的结果集的列。ASC 和 DESC 关键字用于指定行是按升序还是按降序排序。</p><p>除了以上子句，SELECT语句中经常出现的关键字还包括UNION运算符、COMPUTE子句、FOR子句和OPTION等子句。</p><p>（1）     改变列的标题</p><p>可以为显示的列重新起一个标题，比如：</p><p>SELECT TOP 10 产品价格＝定价FROM 产品表</p><p>或者利用 AS 关键词：</p><p>SELECT TOP 10 定价 AS产品价格 FROM 产品表</p><p>（2）     匹配查询条件</p><p>模式匹配符有两种：LIKE 和 NOT  LIKE。它们主要用来进行模糊查询，判断列值是否与指定的字符串格式匹配。常用的 SQL Server 通配符有“%”和“_”</p><p><strong>%**</strong>：**包含零个或更多字符的任意字符串。</p><p><strong>_**</strong>（下划线）：**任何单个字符。</p><p>（3）     汇总函数</p><p>汇总函数（例如 SUM、AVG、COUNT、COUNT(<em>)、MAX 和 MIN）在查询结果集中生成汇总值。汇总函数（除 COUNT(</em>) 以外）处理单个列中全部所选的值以生成一个结果值。汇总函数可以应用于表中的所有行、WHERE 子句指定的表的子集或表中一组或多组行。应用汇总函数后，每组行都将生成一个值。表1显示了汇总函数的语法及结果（expression 几乎总为列名）。</p><p>表1  汇总函数的语法</p><table><thead><tr><th>汇总函数</th><th>结果</th></tr></thead><tbody><tr><td>SUM([ALL |  DISTINCT] expression)</td><td>数字表达式中所有值的和</td></tr><tr><td>AVG([ALL |  DISTINCT] expression)</td><td>数字表达式中所有值的平均值</td></tr><tr><td>COUNT([ALL |  DISTINCT] expression)</td><td>表达式中值的个数</td></tr><tr><td>COUNT(*)</td><td>选定的行数</td></tr><tr><td>MAX(expression)</td><td>表达式中的最高值</td></tr><tr><td>MIN(expression)</td><td>表达式中的最低值</td></tr></tbody></table><p>（4）COMPUTE和COMPUTE  BY 子句</p><p>生成合计作为附加的汇总列出现在结果集的最后。当与 BY 一起使用时，COMPUTE 子句在结果集内生成控制中断和分类汇总。可在同一查询内指定 COMPUTE BY 和 COMPUTE。格式为：</p><p> COMPUTE 汇总函数（汇总函数表达式）      BY  分组字段</p><p>汇总函数表达式是对其执行计算的列名。汇总函数表达式必须是选择列表中的一个项目，在汇总函数表达式内不能使用在选择列表中指定的列的别名。</p><p>分组字段用来设置用于分类的字段名称、字段别名或表达式，而且这个字段别名必须出现在ORDER BY 子句中。</p><p>如果使用 COMPUTE BY，则必须也使用 ORDER BY 子句。表达式必须与在 QRDER BY 后列出的子句相同或是其子集，并且必须按相同的序列。</p><p>2．操作实例演示</p><p>以下是某公司的产品销售数据库（ProductSales）中的产品表（Product）和销售表（Sales），产品表为主表，销售表为子表，表结构和存储的数据如表2、表3所示：</p><p><strong>表**</strong>2 <strong><strong>产品表，主表**</strong></strong></p><table><thead><tr><th>产品编号（主键）</th><th>产品名称（唯一性约束）</th><th>定价</th></tr></thead><tbody><tr><td>1</td><td>HP1200打印机</td><td>2000</td></tr><tr><td>2</td><td>LX360兼容机</td><td>4800</td></tr><tr><td>3</td><td>IBM 350笔记本</td><td>11000</td></tr><tr><td>4</td><td>IBM 360笔记本</td><td>12000</td></tr></tbody></table><p>　</p><p><strong>表**</strong>3  <strong><strong>销售表，子表**</strong></strong></p><table><thead><tr><th>产品号（外键）</th><th>客户名称</th><th>购买数量</th><th>销售单价</th></tr></thead><tbody><tr><td>2</td><td>河北工大</td><td>10</td><td>4500</td></tr><tr><td>1</td><td>河北工大</td><td>25</td><td>1600</td></tr><tr><td>3</td><td>天津大学</td><td>10</td><td>11000</td></tr><tr><td>2</td><td>天津大学</td><td>30</td><td>4600</td></tr><tr><td>1</td><td>天津大学</td><td>20</td><td>1800</td></tr><tr><td>3</td><td>河北大学</td><td>40</td><td>10000</td></tr><tr><td>3</td><td>南开大学</td><td>20</td><td>10500</td></tr></tbody></table><p>编写SQL语句实现以下要求的查询：</p><p>（1）查询出单笔购买数量大于15的客户名称、购买数量、销售单价信息；</p><p><strong>select **</strong>客户名称<strong><strong>,</strong></strong>购买数量<strong><strong>,</strong></strong>销售单价<strong>** from **</strong>销售表<strong>** where **</strong>购买数量<strong>**&gt;15</strong></p><pre><code>（2）查询出产品号，客户名称，购买数量，按产品号排序。</code></pre><p><strong>select **</strong>产品号<strong><strong>,</strong></strong>客户名称<strong><strong>,</strong></strong>购买数量<strong>** from **</strong>销售表<strong>** order by **</strong>产品号<strong>**</strong></p><p>（3）查询出产品号，客户名称，购买数量，产品号升序，购买数量降序</p><p><strong>select **</strong>产品号<strong><strong>,</strong></strong>客户名称<strong><strong>,</strong></strong>购买数量<strong>** from **</strong>销售表<strong>** order by **</strong>产品号<strong><strong>,</strong></strong>购买数量<strong>** desc</strong></p><p>（4）查询出购买数量最多（单笔）前三位的记录。</p><p><strong>select top 3 *from **</strong>销售表<strong>** order by **</strong>购买数量<strong>** desc</strong></p><p>（5）查询出所有商品的全部销售金额。</p><p><strong>select sum(**</strong>购买数量<strong>*****</strong>销售单价<strong>*<em>) as *</em></strong>销售总额<strong>** from **</strong>销售表<strong>**</strong></p><p>（6）查询销售单价最高和最低的记录。</p><p><strong>select max(**</strong>销售单价<strong>*<em>) as *</em></strong>最高单价<strong><strong>,min(</strong></strong>销售单价<strong>*<em>)as *</em></strong>最低单价<strong>** from **</strong>销售表<strong>**</strong></p><p>（7）查询总共有多少笔销售记录。</p><p><strong>select count(*) as**</strong>记录数<strong>** from **</strong>销售表<strong>**</strong></p><p>（8）查询客户姓名、对应客户的平均每笔购买数量。</p><p><strong>select **</strong>客户名称<strong><strong>,avg(</strong></strong>购买数量<strong>*<em>) as *</em></strong>平均购买量<strong>** from **</strong>销售表<strong>** group by **</strong>客户名称**</p><p>（9）查询出每种产品最高价高于2000的产品号和最高单价。</p><p><strong>select **</strong>产品号<strong><strong>, max(</strong></strong>销售单价<strong>*<em>) from *</em></strong>销售表<strong>** group by **</strong>产品号<strong>** having max(**</strong>销售单价<strong>**)&gt;2000</strong></p><p>（10）查询出全部销售记录，并汇总总销售量和销售记录数。</p><p><strong>select * from **</strong>销售表<strong>** compute sum(**</strong>购买数量<strong><strong>),count(</strong></strong>购买数量<strong>**)</strong></p><p>(11) 查询 “产品表”中产品名称含有IBM的记录。</p><p><strong>select * from **</strong>产品表<strong>** WHERE **</strong>产品名称<strong>** like ‘%IBM%’</strong></p><p><strong>三．实验内容****</strong></p><p>创建表2、表3所示的产品表和销售表，编写SQL语句实现以下的要求：</p><ol><li>查询出销售单价最低（单笔）的前50％的记录。</li></ol><p>select top 50 percent * from sale</p><p>order by 销售单价</p><ol><li>查询出产品号，客户名称，购买数量，产品号升序，客户名称降序。</li></ol><p>select 产品号,客户名称,购买数量 from sale</p><p>order by 产品号,客户名称 desc</p><ol><li>查询所有商品的销售总数。</li></ol><p>select 产品号,sum(购买数量) as 销售总数 from sale</p><p>group by 产品号</p><ol><li>查询共有几家客户（不重复）。</li></ol><p>select count(distinct 客户名称) as 客户数from sale</p><ol><li>查询客户姓名、对应客户的销售总金额。</li></ol><p>select 客户名称,sum(购买数量*销售单价) as 销售总金额from sale group by客户名称</p><ol><li>查询每种产品的产品号和相应的每单位的平均销售单价。</li></ol><p>select 产品号,avg(销售单价)as 平均销售单价from sale group by 产品号</p><ol><li>查询每种产品中每个客户购买的最高销售单价。</li></ol><p>select distinct产品号,max(销售单价)as 最高销售单价from sale groupby 产品号</p><ol><li>查询出全部销售记录，并汇总每种产品的总销售量和销售记录数。</li></ol><p>select * fromsale  computesum(购买数量) ,count(购买数量)</p><ol><li>查询产品号,客户名称,购买数量,销售单价,(购买数量*销售单价) as 销售额，并汇总每种产品的销售数量和总销售额。</li></ol><p>select 产品号,客户名称,购买数量,销售单价,(购买数量*销售单价) as 销售额from sale</p><p>compute sum(购买数量),sum(购买数量*销售单价)</p><ol start="10"><li>查询 “销售表”的客户名称字段中以“大学”结尾的记录</li></ol><p>select * from sale where 客户名称like ‘%大学’</p><ol start="11"><li>查询购买数量最高和最低的记录。</li></ol><p>select * from sale compute max(购买数量),min(购买数量)</p><p><strong>实验**</strong>5  <strong><strong>数据查询（</strong></strong>2<strong><strong>）**</strong></strong></p><p><strong>一．实验目的****</strong></p><p>学习使用SQL Server的查询语句，掌握内连接、外连接和交叉连接，掌握子查询。</p><p>（一）基本语法</p><p>1．内联接</p><p>内联接是用比较运算符比较要联接列的值的联接。格式为：</p><p>**         <strong><strong>数据表</strong></strong>1  INNER JOIN  <strong><strong>数据表</strong></strong>2  ON  <strong><strong>联接表达式**</strong></strong></p><p>此内联接称为相等联接。它返回两个表中的所有列，但只返回在联接列中具有相等值的行。在内连接中，所有表是平等的，没有主次之分。</p><p>当创建内联接时，包含 NULL 的列不与任何值匹配，因此不包括在结果集内。空值不与其它的空值匹配。</p><p>2．外联接</p><p>与内连接相对，参与外连接的表有主次之分。以主表的每一行数据去匹配从表中的数据列，符合连接条件的数据将直接返回到结果集中，对那些不符合连接条件的列，将被填上NULL值后再返回到结果集中。</p><p>外连接可以分为左（向外）连接、右（向外）连接和完整外部连接三类。</p><p>（1）左联接</p><p>格式为：</p><p>   <strong>数据表**</strong>1   LEFT JOIN  <strong><strong>数据表</strong></strong>2  ON  <strong><strong>联接表达式**</strong></strong></p><p>左连接以连接（JOIN）子句左侧的表为主表，主表中所有记录都将出现在结果集中。如果主表中的记录在右表中没有匹配的数据，则结果集中右表的列值为NULL。在WHERE子句中，可以使用*=符号定义左连接。</p><p>（2）右联接</p><p>格式为：</p><p> **  <strong><strong>数据表</strong></strong>1   RIGHT JOIN  <strong><strong>数据表</strong></strong>2  ON  <strong><strong>联接表达式**</strong></strong></p><p>右连接以连接（JOIN）子句右侧的表为主表，主表中所有记录都将出现在结果集中。如果主表中的记录在左表中没有匹配的数据，则结果集中左表的列值为NULL。在WHERE子句中，可以使用=*符号定义右连接。</p><p>（3）完整外联接</p><p>格式为：</p><p>**   <strong><strong>数据表</strong></strong>1   FULL JOIN  <strong><strong>数据表</strong></strong>2  ON  <strong><strong>联接表达式**</strong></strong></p><p>完整外部连接包括连接表中的所有行，无论它们是否匹配。</p><p>3．交叉联接</p><p>格式为：</p><p> **  <strong><strong>数据表</strong></strong>1   CROSS JOIN  <strong><strong>数据表</strong></strong>2 <strong>**</strong></p><p>在交叉连接查询中，两个表中的每两行都可能互相组合成为结果集中的一行。交叉联接不使用WHERE子句。数学上，交叉联接就是笛卡儿集。第一个表的行数乘以第二个表的行数等于笛卡儿集的大小。</p><p>4．嵌套查询</p><p>嵌套查询是指在一个外层查询中包含有一个内查询。即在WHERE子句中包含一个形如SELECT－FROM－WHERE的查询块，此查询块称为子查询或嵌套查询。</p><p>子查询在WHERE语句中的一般用法：</p><p>**    SELECT … FROM <strong><strong>表</strong></strong>1 WHERE<strong><strong>字段</strong></strong>1 &gt;(<strong><strong>子查询</strong></strong>)**</p><p>括号中嵌入的查询称为子查询，外面的查询称为父查询或外部查询，外查询称为主查询。</p><p>一般情况下，套查询在执行时由里向外处理，每个子查询是在上一级外部查询处理之前完成，主查询要用到子查询的结果。即先用内查询挑选出部分数据，作为外查询的数据来源或搜索条件。将子查询和比较运算符联合使用，必须保证子查询返回的值不能多于一个。 </p><p>子查询还常和UPDATE、INSERT、DELETE一起使用，语法类似于SELECT语句。 </p><p>（1）带有IN或NOT IN谓词的子查询</p><p>在嵌套查询中，子查询的结果往往是一个集合，IN或NOT IN关键字用于确定给定的值是否包含在子查询返回的结果集合中。</p><p>l  IN后面的子查询可以返回多条记录</p><p>l  常用IN替换等于（＝）的比较子查询</p><p>（2）带有EXISTS或 NOT EXISTS谓词的子查询</p><p>EXISTS表示存在量词，带有EXISTS的子查询不返回任何实际数据，它只得到逻辑值“真”或“假”。 EXISTS子查询的语法：</p><p>**                  IF EXISTS <strong><strong>（子查询）**</strong></strong></p><p>**                      <strong><strong>语句**</strong></strong></p><p>如果子查询的结果非空，即记录条数1条以上，则EXISTS （子查询）将返回真（true），否则返回假（false）。 </p><p>EXISTS也可以作为WHERE 语句的子查询，其语法是：</p><p><strong>WHERE [NOT] EXISTS (**</strong>子查询<strong>**)</strong></p><p>当子查询的查询结果集合为非空时，外层的WHERE子句返回真值，否则返回假值。NOT EXISTS与此相反。</p><p>含有IN的查询通常可用EXISTS表示，但反过来不一定。</p><p>5．合并查询</p><p>合并查询UNION 运算符将两个或多个 SELECT 语句的结果组合成一个结果集，该结果集包含联合查询中的所有查询的全部行。使用UNION运算符组合两个查询的结果集的两个前提是：</p><p>l  所有查询结果中的列数和列的顺序必须相同；</p><p>l  对应列的数据类型必须兼容。</p><p>合并查询经常用来返回明细和统计信息。因为明细和统计信息需要分别统计，所以可以使用合并查询将它们统一到一个结果集中。</p><p>注意事项：</p><p>l  UNION 的结果集列名与 UNION 运算符中第一个 SELECT 语句的结果集中的列名相同。另一个 SELECT 语句的结果集列名将被忽略。</p><p>l  默认情况下，UNION 运算符从结果集中删除重复的行。如果使用 ALL 关键字，那么结果中将包含所有行并且将不删除重复的行。 </p><p>l  合并查询中只能使用一个ORDER BY子句，它对整个结果集起作用。如果分别为每个SELECT语句指定ORDER BY子句，将会出现错误。</p><p>（二）操作实例演示</p><p>以下是某公司的产品销售数据库中的产品表、销售表和库存表，产品表为主表，销售表和库存表为子表，表结构和存储的数据如表1、表2和表3 所示：</p><p><strong>表**</strong>1 <strong><strong>产品表，主表**</strong></strong></p><table><thead><tr><th>产品编号（主键）</th><th>产品名称（唯一性约束）</th><th>定价</th></tr></thead><tbody><tr><td>1</td><td>HP1200打印机</td><td>2000</td></tr><tr><td>2</td><td>LX360兼容机</td><td>4800</td></tr><tr><td>3</td><td>IBM 350笔记本</td><td>11000</td></tr><tr><td>4</td><td>IBM 360笔记本</td><td>12000</td></tr></tbody></table><p>　</p><p><strong>表**</strong>2  <strong><strong>销售表，子表**</strong></strong></p><table><thead><tr><th>产品号（外键）</th><th>客户名称</th><th>购买数量</th><th>销售单价</th></tr></thead><tbody><tr><td>2</td><td>河北工大</td><td>10</td><td>4500</td></tr><tr><td>1</td><td>河北工大</td><td>25</td><td>1600</td></tr><tr><td>3</td><td>天津大学</td><td>10</td><td>11000</td></tr><tr><td>2</td><td>天津大学</td><td>30</td><td>4600</td></tr><tr><td>1</td><td>天津大学</td><td>20</td><td>1800</td></tr><tr><td>3</td><td>河北大学</td><td>40</td><td>10000</td></tr><tr><td>3</td><td>南开大学</td><td>20</td><td>10500</td></tr></tbody></table><p><strong>表**</strong>3 <strong><strong>库存表（原始的库存表，包括上面销售表的数量）**</strong></strong></p><table><thead><tr><th>产品编号（主键）</th><th>库存数量</th></tr></thead><tbody><tr><td>1</td><td>200</td></tr><tr><td>2</td><td>320</td></tr><tr><td>3</td><td>160</td></tr><tr><td>4</td><td>500</td></tr></tbody></table><p>编写SQL语句实现以下要求的查询：</p><p>（1）查询出每笔销售记录的产品名称、客户名称、销售单价（分别用where 子句 和 join 实现）</p><p><strong>select a1.**</strong>产品名称<strong><strong>,a2.</strong></strong>客户名称<strong><strong>,a2.</strong></strong>销售单价<strong>** from **</strong>产品表<strong>** as a1,**</strong>销售表<strong>** as a2 WHERE a1.**</strong>产品编号<strong><strong>=a2.</strong></strong>产品号<strong>**</strong></p><p><strong>select a1.**</strong>产品名称<strong><strong>,a2.</strong></strong>客户名称<strong><strong>,a2.</strong></strong>销售单价<strong>** from **</strong>产品表<strong>** as a1 inner join **</strong>销售表<strong>** as a2 on a1.**</strong>产品编号<strong><strong>=a2.</strong></strong>产品号<strong>**</strong></p><p>（2）查询出每笔销售的产品名称、销售数量和剩余库存数量。(用where用inner join )</p><p><strong>select a1.**</strong>产品名称<strong><strong>,a2.</strong></strong>购买数量<strong><strong>,a3.</strong></strong>库存数量<strong><strong>-a2.</strong></strong>购买数量<strong>** as **</strong>剩余库存<strong>** from **</strong>产品表<strong>** as a1,**</strong>销售表<strong>** as a2,**</strong>库存表<strong>** as a3 WHERE a1.**</strong>产品编号<strong><strong>=a2.</strong></strong>产品号<strong>** and a2.**</strong>产品号<strong><strong>=a3.</strong></strong>产品编号<strong>**</strong></p><p><strong>select a1.**</strong>产品名称<strong><strong>,a2.</strong></strong>购买数量<strong><strong>,a3.</strong></strong>库存数量<strong><strong>-a2.</strong></strong>购买数量<strong>** as **</strong>剩余库存<strong>** from (**</strong>产品表<strong>** as a1 inner join **</strong>销售表<strong>** as a2 on a1.**</strong>产品编号<strong><strong>=a2.</strong></strong>产品号<strong>** )inner join **</strong>库存表<strong>** as a3  on a2.**</strong>产品号<strong><strong>=a3.</strong></strong>产品编号<strong>**</strong></p><p>（3）查看产品名称和客户名称的交叉查询的结果</p><p><strong>select a1.**</strong>产品名称<strong><strong>,a2.</strong></strong>客户名称<strong>** from **</strong>产品表<strong>** as a1 cross join **</strong>销售表<strong>** as a2</strong></p><p>（4）查询出销售单价最高和最低的销售记录。用“UNION”连接查询结果集。</p><p><strong>select * from **</strong>销售表<strong>** where **</strong>销售单价<strong>** in (select max(**</strong>销售单价<strong>*<em>) from *</em></strong>销售表<strong>** union select min(**</strong>销售单价<strong>*<em>) from *</em></strong>销售表<strong>**)</strong></p><p>方法四</p><p>select *</p><p>from sale</p><p>where 销售单价in((select top 1 销售单价</p><p>from sale orderby 销售单价desc)</p><p>union </p><p>(select top 1 销售单价</p><p>from sale orderby 销售单价))</p><p>方法一</p><p>select *</p><p>from sale</p><p>where 销售单价= (select top 1 销售单价</p><p>from sale orderby 销售单价desc)</p><p>union</p><p>select *</p><p>from sale</p><p>where 销售单价= (select top 1 销售单价</p><p>from sale orderby 销售单价)</p><p>方法二</p><p>select *</p><p>from sale</p><p>where 销售单价= (select max(销售单价)</p><p>from sale )</p><p>union</p><p>select *</p><p>from sale</p><p>where 销售单价= (select min(销售单价)</p><p>from sale )</p><p>方法三</p><p>select * from sale where 销售单价in (select max(销售单价) from sale </p><p>union select min(销售单价) fromsale)****</p><p>（5）查询出已经销售出的产品名称。</p><p><strong>select * from **</strong>产品表<strong>** where **</strong>产品编号<strong>** in (select **</strong>产品号<strong>** from **</strong>销售表<strong>**)</strong></p><p>（6）如果某种产品的总销售数量超过了50，则所有产品库存增加50，否则，增加10。</p><p><strong>if exists(selectsum(**</strong>购买数量<strong>*<em>) from *</em></strong>销售表<strong>** group by **</strong>产品号<strong>** having sum(**</strong>购买数量<strong>**)&gt;50)</strong></p><p>**        update <strong><strong>库存表</strong></strong> set <strong><strong>库存数量</strong></strong>=<strong><strong>库存数量</strong></strong>+50**</p><p><strong>else</strong></p><p>**        update <strong><strong>库存表</strong></strong> set <strong><strong>库存数量</strong></strong>=<strong><strong>库存数量</strong></strong>+10**</p><p><strong>三．实验内容****</strong></p><p>创建表1、表2和表3所示的产品表、销售表和库存表，编写SQL语句实现以下的要求：</p><ol start="12"><li>查询出单笔售数量大于15的客户名称、产品名称、销售数量信息；（分别用where字句 和join 实现）</li></ol><p>select 客户名称,产品名称,购买数量as 销售数量from product,sale</p><p>where product.产品编号=sale.产品号and 购买数量&gt;15</p><p>select 客户名称,产品名称,购买数量as 销售数量from product joinsale</p><p>on product.产品编号=sale.产品号 and 购买数量&gt;15</p><ol start="13"><li>查询每种产品的销售记录，列出产品名称和销售数量。（分别左连接和右连接）（分别用where 字句 和 join 实现）</li></ol><p>select 产品名称,购买数量as 销售数量from product leftjoin sale onproduct.产品编号=sale.产品号 </p><p>select 产品名称,购买数量as 销售数量from product rightjoin sale onproduct.产品编号=sale.产品号 </p><p>select 产品名称,购买数量as 销售数量from product,sale</p><p>where product.产品编号=sale.产品号</p><ol start="14"><li>在销售表添加一条记录， 8，相机，30，2100。查看完全外连接的结果。</li></ol><p>insert intosale</p><p>values (8,’相机’,30,2100)</p><ol start="15"><li>查询出销售单价最高的销售记录。</li></ol><p>select * from sale where 销售单价in (select max(销售单价) from sale)</p><p>select * from sale where 销售单价in (select top 1 销售单价from sale orderby 销售单价desc)</p><p> 此处最好不要用“=” 因为可能有多条记录</p><ol start="16"><li>查询出销售单价最高和最低的销售记录的产品名称、客户名称、销售单价。</li></ol><p>select 产品名称,客户名称,销售单价</p><p>from sale,product</p><p>where product.产品编号=sale.产品号and 销售单价= (select max(销售单价)</p><p>from sale )</p><p>union</p><p>select 产品名称,客户名称,销售单价</p><p>from sale,product</p><p>where product.产品编号=sale.产品号and 销售单价= (select min(销售单价)</p><p>from sale )</p><ol start="17"><li>查看产品表中产品编号和产品名称与销售表中客户名称和购买数量的交叉查询的结果。</li></ol><p>select 产品编号,产品名称,客户名称,购买数量</p><p>from product crossjoin sale</p><ol start="18"><li>查询出没有销售的产品名称。</li></ol><p>select 产品名称from product</p><p>where 产品编号not in (select distinct 产品号from sale)</p><ol start="19"><li>如果某种产品的总销售数量超过了50，则该种产品库存增加50，其余的产品库存增加10（子查询where字句中分别用exists和in 来实现）。</li></ol><p>if exists(select sum(购买数量) from sale group by 产品号having sum(购买数量)&gt;50)</p><pre><code>update kucun set 库存数量=库存数量+50</code></pre><p>else</p><pre><code>update kucun set 库存数量=库存数量+10</code></pre><p><strong>实验七**</strong> <strong><strong>视图、索引的建立与使用**</strong></strong></p><p><strong>一．实验目的****</strong></p><p>掌握使用创建视图的方法，了解如何应用视图有选中地查看所需数据，并熟悉通过视图操作数据表中数据的方法。</p><p>掌握创建索引的方法。</p><p><strong>二．实验内容****</strong></p><p>以下是某公司的产品销售数据库中的产品表、销售表和库存表，产品表为主表，销售表和库存表为子表，表结构和存储的数据如表1、表2和表3 所示。</p><p>创建销售数据库及表、表2和表3所示的产品表、销售表和库存表，编写T－SQL语句实现以下要求：</p><ol><li>创建视图，包含列：产品名称=产品表.产品名，客户名称=销售表.客户名称，销售数量=销售表.购买数量，购买数量&gt;12，分别在（企业管理器和用T-SQL）实现。</li></ol><p>create viewpr_sa</p><p>as</p><p>select product.产品名称as 产品名称,sale.客户名称,sale.购买数量as 销售数量</p><p>from product,sale</p><p>where product.产品编号=sale.产品号and 购买数量&gt;12</p><ol><li>查询（1）中的视图，查询出每种产品的销售总量</li></ol><p>select sum(销售数量)as 销售总量from pr_sa</p><p>group by 产品名称。</p><ol><li>销售表中对客户名称建立索引（企业管理器和T-SQL），填充因子30，并查询客户名称为“河北工大”的记录。</li></ol><p>create </p><p>index in_name onsale(客户名称)</p><p>with pad_index,fillfactor=30</p><p>select * from sale where 客户名称=’河北工大’</p><ol><li>产品表中对产品名称建立唯一索引（非聚集索引），并查询包含“IBM”的记录。</li></ol><p>create unique</p><p>index in_product onproduct(产品名称)</p><p>select 产品名称from product</p><p>where 产品名称like ‘%IBM%’</p><ol><li>对产品表的产品名称和定价列建立复合索引。</li></ol><p>create indexin_fuhe on product(产品名称,定价)</p><p>数据库文件分为：1、主数据文件（每个数据库有且只有一个主数据文件  .mdf）2、次数据文件（.ndf  一个数据库可以有多个次数据文件，也可以没有）3、日志文件（.ldf  可有一个或多个日志文件 ）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="sql" scheme="http://hugenye.github.io/categories/sql/"/>
    
    
  </entry>
  
  <entry>
    <title>以前工作内容（搬运网易云笔记）</title>
    <link href="http://hugenye.github.io/2020/04/24/old-work/"/>
    <id>http://hugenye.github.io/2020/04/24/old-work/</id>
    <published>2020-04-24T00:46:26.000Z</published>
    <updated>2020-08-19T08:09:52.099Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="发送短信工具集（阿里云）"><a href="#发送短信工具集（阿里云）" class="headerlink" title="发送短信工具集（阿里云）"></a>发送短信工具集（阿里云）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.test.util;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.DefaultAcsClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.IAcsClient;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.exceptions.ClientException;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.exceptions.ServerException;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.http.MethodType;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.profile.DefaultProfile;</span><br><span class="line"><span class="keyword">import</span> com.aliyuncs.profile.IClientProfile;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendSMS</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">sendSm</span><span class="params">(String phone)</span> <span class="keyword">throws</span> ClientException</span>&#123;</span><br><span class="line"><span class="comment">//设置超时时间-可自行调整</span></span><br><span class="line">System.setProperty(<span class="string">"sun.net.client.defaultConnectTimeout"</span>, <span class="string">"10000"</span>);</span><br><span class="line">System.setProperty(<span class="string">"sun.net.client.defaultReadTimeout"</span>, <span class="string">"10000"</span>);</span><br><span class="line"><span class="comment">//初始化ascClient需要的几个参数</span></span><br><span class="line"><span class="keyword">final</span> String product = <span class="string">"Dysmsapi"</span>;<span class="comment">//短信API产品名称（短信产品名固定，无需修改）</span></span><br><span class="line"><span class="keyword">final</span> String domain = <span class="string">"dysmsapi.aliyuncs.com"</span>;<span class="comment">//短信API产品域名（接口地址固定，无需修改）</span></span><br><span class="line"><span class="comment">//替换成你的AK</span></span><br><span class="line"><span class="keyword">final</span> String accessKeyId = <span class="string">"LTAISz2Gh0v0hApy"</span>;<span class="comment">//你的accessKeyId,参考本文档步骤2</span></span><br><span class="line"><span class="keyword">final</span> String accessKeySecret = <span class="string">"PD9ReGIxxDMski8WAY9HSv9yBOebdk"</span>;<span class="comment">//你的accessKeySecret，参考本文档步骤2</span></span><br><span class="line"><span class="comment">//初始化ascClient,暂时不支持多region（请勿修改）</span></span><br><span class="line">IClientProfile profile = DefaultProfile.getProfile(<span class="string">"cn-hangzhou"</span>, accessKeyId,</span><br><span class="line">accessKeySecret);</span><br><span class="line">DefaultProfile.addEndpoint(<span class="string">"cn-hangzhou"</span>, <span class="string">"cn-hangzhou"</span>, product, domain);</span><br><span class="line">IAcsClient acsClient = <span class="keyword">new</span> DefaultAcsClient(profile);</span><br><span class="line"><span class="comment">//组装请求对象</span></span><br><span class="line">SendSmsRequest request = <span class="keyword">new</span> SendSmsRequest();</span><br><span class="line"><span class="comment">//使用post提交</span></span><br><span class="line">request.setMethod(MethodType.POST);</span><br><span class="line"><span class="comment">//必填:待发送手机号。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式；发送国际/港澳台消息时，接收号码格式为00+国际区号+号码，如“0085200000000”</span></span><br><span class="line">request.setPhoneNumbers(phone);</span><br><span class="line"><span class="comment">//必填:短信签名-可在短信控制台中找到</span></span><br><span class="line">request.setSignName(<span class="string">"追能云"</span>);</span><br><span class="line"><span class="comment">//必填:短信模板-可在短信控制台中找到</span></span><br><span class="line">request.setTemplateCode(<span class="string">"SMS_127215050"</span>);</span><br><span class="line"><span class="keyword">int</span> code=randomInt();</span><br><span class="line"><span class="comment">//可选:模板中的变量替换JSON串,如模板内容为"亲爱的$&#123;name&#125;,您的验证码为$&#123;code&#125;"时,此处的值为</span></span><br><span class="line"><span class="comment">//友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含\r\n的情况在JSON中需要表示成\\r\\n,否则会导致JSON在服务端解析失败</span></span><br><span class="line">request.setTemplateParam(<span class="string">"&#123;\"code\":\""</span>+code+<span class="string">"\"&#125;"</span>);</span><br><span class="line">System.out.print(code);</span><br><span class="line"><span class="comment">//可选-上行短信扩展码(扩展码字段控制在7位或以下，无特殊需求用户请忽略此字段)</span></span><br><span class="line"><span class="comment">//request.setSmsUpExtendCode("90997");</span></span><br><span class="line"><span class="comment">//可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者</span></span><br><span class="line"><span class="comment">//request.setOutId("yourOutId");</span></span><br><span class="line"><span class="comment">//请求失败这里会抛ClientException异常</span></span><br><span class="line">SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request);</span><br><span class="line"><span class="keyword">if</span>(sendSmsResponse.getCode() != <span class="keyword">null</span> &amp;&amp; sendSmsResponse.getCode().equals(<span class="string">"OK"</span>)) &#123;</span><br><span class="line"><span class="comment">//请求成功</span></span><br><span class="line">System.out.print(<span class="string">"请求成功"</span>);</span><br><span class="line"><span class="keyword">return</span> code;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//失败</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6位数随机数</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">randomInt</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> verifyCode = (<span class="keyword">new</span> Random().nextInt(<span class="number">899999</span>) + <span class="number">100000</span>);</span><br><span class="line">         <span class="keyword">return</span> verifyCode;</span><br><span class="line">     &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ClientException </span>&#123;</span><br><span class="line">sendSm(<span class="string">"手机号"</span>);</span><br><span class="line"><span class="comment">//如果想要一个接口servlet就调用该工具集</span></span><br><span class="line"><span class="comment">//public void doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment">//throws ServletException, IOException &#123;</span></span><br><span class="line"><span class="comment">///*String phone=request.getParameter("phone");</span></span><br><span class="line"><span class="comment">//String number=request.getParameter("number");*/</span></span><br><span class="line"><span class="comment">////发送短信</span></span><br><span class="line"><span class="comment">//         try &#123;</span></span><br><span class="line"><span class="comment">//int code =SendSMS.sendSm("手机号");</span></span><br><span class="line"><span class="comment">//System.out.print("生成的随机6位数："+code);</span></span><br><span class="line"><span class="comment">///*System.out.print("填写的随机6位数="+number);</span></span><br><span class="line"><span class="comment">//    if(number.equals(code))&#123;</span></span><br><span class="line"><span class="comment">//    System.out.print("验证成功！");</span></span><br><span class="line"><span class="comment">//    &#125;else&#123;</span></span><br><span class="line"><span class="comment">//    System.out.print("验证失败！");</span></span><br><span class="line"><span class="comment">//    &#125;*/</span></span><br><span class="line"><span class="comment">//&#125; catch (ClientException e) &#123;</span></span><br><span class="line"><span class="comment">//// TODO Auto-generated catch block</span></span><br><span class="line"><span class="comment">//e.printStackTrace();</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//   </span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="工作" scheme="http://hugenye.github.io/tags/%E5%B7%A5%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库</title>
    <link href="http://hugenye.github.io/2020/04/16/mysql/"/>
    <id>http://hugenye.github.io/2020/04/16/mysql/</id>
    <published>2020-04-16T06:14:43.000Z</published>
    <updated>2020-08-19T08:37:49.662Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="SQL语句的分类："><a href="#SQL语句的分类：" class="headerlink" title="SQL语句的分类："></a>SQL语句的分类：</h1><h2 id="DDL-（Data-Definition-Language）"><a href="#DDL-（Data-Definition-Language）" class="headerlink" title="DDL*（Data Definition Language）"></a>DDL*（Data Definition Language）</h2><p>数据定义语言，用来定义数据库对象：库、表、列等；     CREATE、ALTER、DROP </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//数据库</span><br><span class="line">CREATE DATABASE [IF NOT EXISTS] 数据库名</span><br><span class="line">DROP DATABASE [IF EXISTS] 数据库名</span><br><span class="line">//数据表</span><br><span class="line">create table 数据表</span><br><span class="line">(</span><br><span class="line">  id INT(11),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="DML-（Data-Manipulation-Language）："><a href="#DML-（Data-Manipulation-Language）：" class="headerlink" title="DML*（Data Manipulation Language）："></a>DML*（Data Manipulation Language）：</h2><p>数据操作语言，用来定义数据库记录（数据）；INSERT、 UPDATE、 DELETE</p><h2 id="DQL-（Data-Query-Language）："><a href="#DQL-（Data-Query-Language）：" class="headerlink" title="DQL*（Data Query Language）："></a>DQL*（Data Query Language）：</h2><p>数据查询语言，用来查询记录（数据）。SELECT</p><h2 id="DCL-Data-Control-Language）："><a href="#DCL-Data-Control-Language）：" class="headerlink" title="DCL ** Data Control Language）："></a>DCL ** Data Control Language）：</h2><p>数据控制语言，用来定义访问权限和安全级别；</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="sql" scheme="http://hugenye.github.io/categories/sql/"/>
    
    
  </entry>
  
  <entry>
    <title>amCharts图表插件学习</title>
    <link href="http://hugenye.github.io/2020/03/24/amcharts/"/>
    <id>http://hugenye.github.io/2020/03/24/amcharts/</id>
    <published>2020-03-24T01:13:21.000Z</published>
    <updated>2020-08-19T08:09:27.319Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="初步了解"><a href="#初步了解" class="headerlink" title="初步了解"></a>初步了解</h2><p>amCharts是一个图表组件，支持柱状图、条形图、线形图、面积图、烛台图、雷达等基本图形，个人感觉色彩效果特别好，使用起来也很方便，是基于JavaScript和HTML的组合，一般我只用做图表，它还可以做地图，但是我没用过，我用的是amchart3，现在已经更新到4了，添加了ES6形式的图表操作。</p><h2 id="折线图画法"><a href="#折线图画法" class="headerlink" title="折线图画法"></a>折线图画法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">base</span> <span class="attr">href</span>=<span class="string">"&lt;%=basePath%&gt;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>My JSP 'amchart.jsp' starting page<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"pragma"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attr">content</span>=<span class="string">"no-cache"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"expires"</span> <span class="attr">content</span>=<span class="string">"0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"keywords"</span> <span class="attr">content</span>=<span class="string">"keyword1,keyword2,keyword3"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"This is my page"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">&lt;link rel="stylesheet" type="text/css" href="styles.css"&gt;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#chartdiv0</span> &#123;</span></span><br><span class="line">  width: 50%;</span><br><span class="line">  height: 500px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-id">#chartdiv2</span> &#123;</span></span><br><span class="line">  width: 50%;</span><br><span class="line">  height: 500px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- yibiaopan --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"chartdiv0"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/amcharts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/serial.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/themes/light.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/plugins/export/export.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://www.amcharts.com/lib/3/plugins/export/export.css"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chart1;  </span></span><br><span class="line"><span class="javascript">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> collect30 = [ &#123;day : <span class="string">"2018/2/4"</span>,energy: <span class="number">71</span>,control:<span class="number">51</span>&#125;, </span></span><br><span class="line"><span class="actionscript">     &#123;day : <span class="string">"2018/2/5"</span>,energy: <span class="number">1844</span>,control:<span class="number">1528</span>&#125;, </span></span><br><span class="line"><span class="actionscript">     &#123;day : <span class="string">"2018/2/6"</span>,energy: <span class="number">2864</span>,control:<span class="number">2626</span>&#125;, </span></span><br><span class="line"><span class="actionscript">     &#123;day : <span class="string">"2018/2/7"</span>,energy:<span class="number">2728</span>,control:<span class="number">2410</span>&#125;, </span></span><br><span class="line"><span class="actionscript">     &#123;day : <span class="string">"2018/2/8"</span>,energy:<span class="number">2772</span>,control:<span class="number">2467</span>&#125; ];</span></span><br><span class="line"><span class="actionscript"><span class="comment">//一共画折线图，要画图的对象，导入数据，画得div位置 </span></span></span><br><span class="line"><span class="actionscript">amchartDisplay(chart1, collect30, <span class="string">"chartdiv0"</span>);</span></span><br><span class="line">&#125;);</span><br><span class="line">        </span><br><span class="line"><span class="actionscript"><span class="comment">//amcharts画图函数 </span></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">amchartDisplay</span><span class="params">(chart, chartData, div)</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">chart = <span class="keyword">new</span> AmCharts.AmSerialChart();</span></span><br><span class="line"><span class="actionscript">chart.panEventsEnabled = <span class="literal">true</span>;</span></span><br><span class="line">chart.zoomOutButton = &#123;</span><br><span class="line"><span class="actionscript">backgroundColor : <span class="string">"#000000"</span>,</span></span><br><span class="line"><span class="actionscript">backgroundAlpha : <span class="number">0.15</span><span class="comment">//背景透明度</span></span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">/*//设置时间，和原有时间设置出现冲突，仅显示一部分</span><br><span class="line"><span class="actionscript">chart.addListener(<span class="string">"dataUpdated"</span>, zoomChart);</span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">zoomChart</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">    chart.zoomToDates(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2018</span>, <span class="number">2</span>, <span class="number">4</span>), <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="number">2018</span>, <span class="number">3</span>, <span class="number">20</span>));</span></span><br><span class="line">&#125;*/</span><br><span class="line"></span><br><span class="line"><span class="actionscript">chart.dataProvider = chartData;<span class="comment">//传入数据</span></span></span><br><span class="line"><span class="actionscript">chart.validateData();<span class="comment">//校验数据</span></span></span><br><span class="line"><span class="actionscript">chart.categoryField = <span class="string">"day"</span>;</span></span><br><span class="line"><span class="actionscript"><span class="comment">//设置横坐标; </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> categoryAxis = chart.categoryAxis;</span></span><br><span class="line">categoryAxis.gridAlpha = 0;</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">// 设置纵坐标value                </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> valueAxis = <span class="keyword">new</span> AmCharts.ValueAxis();</span></span><br><span class="line"><span class="actionscript">valueAxis.axisColor = <span class="string">"#DADADA"</span>;</span></span><br><span class="line">valueAxis.dashLength = 1;</span><br><span class="line">chart.addValueAxis(valueAxis);</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="comment">// GRAPH </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> graph = <span class="keyword">new</span> AmCharts.AmGraph();</span></span><br><span class="line"><span class="actionscript">graph.type = <span class="string">"smoothedLine"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bullet = <span class="string">"round"</span>;<span class="comment">//节点形状</span></span></span><br><span class="line"><span class="actionscript">graph.bulletColor = <span class="string">"#FFFFFF"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bulletBorderColor = <span class="string">"#00BBCC"</span>;</span></span><br><span class="line">graph.bulletBorderThickness = 2;</span><br><span class="line">graph.bulletSize = 7;</span><br><span class="line"><span class="actionscript">graph.title = <span class="string">"能量值"</span>;</span></span><br><span class="line"><span class="actionscript">graph.valueField = <span class="string">"energy"</span>;</span></span><br><span class="line">graph.lineThickness = 2;</span><br><span class="line"><span class="actionscript">graph.lineColor = <span class="string">"#FF0000"</span>;</span></span><br><span class="line">chart.addGraph(graph);</span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> graph = <span class="keyword">new</span> AmCharts.AmGraph();</span></span><br><span class="line"><span class="actionscript">graph.type = <span class="string">"smoothedLine"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bullet = <span class="string">"round"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bulletColor = <span class="string">"#FFFFF"</span>;</span></span><br><span class="line"><span class="actionscript">graph.bulletBorderColor = <span class="string">"#ff9900"</span>;</span></span><br><span class="line">graph.bulletBorderThickness = 2;</span><br><span class="line">graph.bulletSize = 7;</span><br><span class="line"><span class="actionscript">graph.title = <span class="string">"控制后能量"</span>;</span></span><br><span class="line"><span class="actionscript">graph.valueField = <span class="string">"control"</span>;</span></span><br><span class="line">graph.lineThickness = 2;</span><br><span class="line"><span class="actionscript">graph.lineColor = <span class="string">"#66CD00"</span>;</span></span><br><span class="line">chart.addGraph(graph);</span><br><span class="line"><span class="actionscript"><span class="comment">// CURSOR </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chartCursor = <span class="keyword">new</span> AmCharts.ChartCursor();</span></span><br><span class="line"><span class="actionscript">chartCursor.cursorPosition = <span class="string">"mouse"</span>;</span></span><br><span class="line">chart.addChartCursor(chartCursor);</span><br><span class="line"><span class="actionscript"><span class="comment">// SCROLLBAR </span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chartScrollbar = <span class="keyword">new</span> AmCharts.ChartScrollbar();</span></span><br><span class="line">chart.addChartScrollbar(chartScrollbar);</span><br><span class="line"><span class="actionscript"><span class="comment">// WRITE </span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//var parent = document.getElementById("#"+div);</span></span></span><br><span class="line"><span class="actionscript"><span class="comment">//alert($("#chart").children().length);</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">if</span> ($(<span class="string">"#"</span>+div).children().length) <span class="comment">//注意，此处需要清空div内容，以避免浏览器缓存上次的图形信息。 </span></span></span><br><span class="line">&#123;</span><br><span class="line"><span class="javascript">$(<span class="string">"#"</span>+div).empty(); <span class="comment">//.is(":empty");  </span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript">chart.write(div);<span class="comment">//画图到指定的div上 </span></span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="柱状图画法"><a href="#柱状图画法" class="headerlink" title="柱状图画法"></a>柱状图画法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Styles --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-id">#chartdiv</span> &#123;</span></span><br><span class="line">width: 100%;</span><br><span class="line">height: 500px;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Resources --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/amcharts.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/serial.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/themes/light.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://www.amcharts.com/lib/3/plugins/export/export.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://www.amcharts.com/lib/3/plugins/export/export.css"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">media</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Chart code --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chartData =[&#123;day:<span class="string">"2018/2/1"</span>,val1:<span class="number">0.34</span>,val2:<span class="number">45</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                &#123;day:<span class="string">"2018/2/2"</span>,val1:<span class="number">0.89</span>,val2:<span class="number">15</span>&#125;,</span></span><br><span class="line"><span class="actionscript">               &#123;day:<span class="string">"2018/2/3"</span>,val1:<span class="number">0.3</span>,val2:<span class="number">35</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                &#123;day:<span class="string">"2018/2/4"</span>,val1:<span class="number">0.60</span>,val2:<span class="number">47</span>&#125;,</span></span><br><span class="line"><span class="actionscript">                &#123;day:<span class="string">"2018/2/5"</span>,val1:<span class="number">0.37</span>,val2:<span class="number">45</span>&#125;];</span></span><br><span class="line"></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> chart = AmCharts.makeChart(<span class="string">"chartdiv"</span>, &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="string">"type"</span>: <span class="string">"serial"</span>,</span></span><br><span class="line"><span class="actionscript">    <span class="string">"theme"</span>: <span class="string">"light"</span>,   </span></span><br><span class="line"><span class="actionscript">    <span class="string">"legend"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"useGraphSettings"</span>: <span class="literal">true</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="string">"dataProvider"</span>: chartData,</span></span><br><span class="line"><span class="actionscript">    <span class="string">"synchronizeGrid"</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">    <span class="string">"valueAxes"</span>: [&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"id"</span>:<span class="string">"v1"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisColor"</span>: <span class="string">"#FF6600"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisThickness"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisAlpha"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"position"</span>: <span class="string">"left"</span><span class="comment">//定位纵坐标的位置</span></span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">"id"</span>:<span class="string">"v2"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisColor"</span>: <span class="string">"#FCD202"</span>,<span class="comment">//坐标轴的颜色</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisThickness"</span>: <span class="number">2</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisAlpha"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"position"</span>: <span class="string">"right"</span></span></span><br><span class="line">    &#125;],</span><br><span class="line"><span class="actionscript">    <span class="string">"graphs"</span>: [&#123;<span class="comment">//绘制图形</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"valueAxis"</span>: <span class="string">"v1"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"lineColor"</span>: <span class="string">"#FF6600"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bullet"</span>: <span class="string">"round"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bulletBorderThickness"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bulletColor"</span>:<span class="string">"#FFFFF"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//"bulletColor":"#FFFFF",</span></span></span><br><span class="line"><span class="actionscript">       <span class="comment">// "hideBulletsCount": 30,</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"title"</span>: <span class="string">"平均节能率"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"valueField"</span>: <span class="string">"val1"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"widthField"</span>:<span class="number">120</span>,</span></span><br><span class="line"><span class="actionscript">       <span class="comment">//  "labelOffset":1,</span></span></span><br><span class="line"><span class="actionscript"><span class="string">"fillAlphas"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript"><span class="string">"type"</span>: <span class="string">"column"</span><span class="comment">//设置为矩形</span></span></span><br><span class="line">    &#125;, &#123;</span><br><span class="line"><span class="actionscript">        <span class="string">"valueAxis"</span>: <span class="string">"v2"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"lineColor"</span>: <span class="string">"#FCD202"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bullet"</span>: <span class="string">"square"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bulletBorderThickness"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"bulletColor"</span>:<span class="string">"#FFFFF"</span>,</span></span><br><span class="line"><span class="actionscript">     <span class="comment">//   "hideBulletsCount": 30,</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"title"</span>: <span class="string">"数值2"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"valueField"</span>: <span class="string">"val2"</span>,</span></span><br><span class="line"><span class="actionscript">       <span class="comment">// "labelOffset":40,</span></span></span><br><span class="line"><span class="actionscript">        <span class="string">"widthField"</span>:<span class="number">120</span>,</span></span><br><span class="line"><span class="actionscript"><span class="string">"fillAlphas"</span>: <span class="number">1</span>,</span></span><br><span class="line"><span class="actionscript"><span class="string">"type"</span>: <span class="string">"column"</span></span></span><br><span class="line">    &#125;],</span><br><span class="line"><span class="actionscript">    <span class="string">"chartScrollbar"</span>: &#123;</span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="string">"chartCursor"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="string">"bulletBorderColor"</span>:<span class="string">"yyyy/MM/dd"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"cursorPosition"</span>: <span class="string">"mouse"</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="string">"categoryField"</span>: <span class="string">"day"</span>,</span></span><br><span class="line"><span class="actionscript">    <span class="string">"categoryAxis"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">        <span class="string">"dataDateFormat"</span> : <span class="string">"YYYY-MM-DD"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"axisColor"</span>: <span class="string">"#DADADA"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"minorGridEnabled"</span>: <span class="literal">true</span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="actionscript">    <span class="string">"export"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">    <span class="string">"enabled"</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="string">"position"</span>: <span class="string">"bottom-right"</span></span></span><br><span class="line">     &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"chartdiv"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="amcharts图表使用大全："><a href="#amcharts图表使用大全：" class="headerlink" title="amcharts图表使用大全："></a>amcharts图表使用大全：</h2><p>amcharts图表使用大全</p><p>Amcharts JS 版属性/方法详细说明书 </p><p>1、 坐标轴(Y轴) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 valueAxis对象 图表的Y轴，一个图表中可以有多个Y轴 Var valueAxis = new AmCharts.ValueAxis(); </p><p>2 axisColor 轴的颜色 valueAxis.axisColor= “#FF6600”; </p><p>3 axisThickness 轴的宽度valueAxis.axisThickness = 1; </p><p>4 gridAlpha 轴的透明度，值介于0-1之间，0全透明</p><p> valueAxis1.gridAlpha = 0.2; </p><p>5 tickLength 轴从下到上像左或右伸出来的延长线 </p><p>valueAxis1.tickLength =0; </p><p>6 minimum 轴的最小值，如果不设置那么最小值根据数据动态变化 </p><p>valueAxis1.minimum = -100; </p><p>7 maximum 轴的最大值，如果不设置那么最大值根据数据动态变化 </p><p> valueAxis1.maximum = 100; </p><p>8 title 轴的名称valueAxis1.title=”哈哈”; </p><p>9 logarithmic 是否为对数函数分布，一般轴的刻度是均匀划分的分布， valueAxis1.logarithmic = </p><p>当该属性设置为true的时候，刻度分布呈对数形式false; </p><p>10 integersOnly 是否只显示整数，如果为true轴的刻度只显示整数形式valueAxis1.integersOnly = true; </p><p>11 gridCount 最大刻度个数 valueAxis1.gridCount= 10; </p><p>12 unit 单位 valueAxis1.unit =”%”; </p><p>13 labelsEnabled 是否显示轴标签，默认值为truevalueAxis1.labelsEnabled = true; </p><p>14 inside 轴的刻度值显示在表里面还是外面 valueAxis1.inside = true; 15 position 轴的位置，默认在左侧 valueAxis1.position= “left”; </p><p>16 stackType valueAxis.stackType =”0%”; </p><p>2、 categoryAxis(图表线，相当于X轴) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 valueAxis对象 图表的线，一个图表中可以有多个，每个对应一个Y轴或者共同拥有一个Y轴</p><p>var categoryAxis = chart.categoryAxis; </p><p>2 parseDates 是否以日期为x轴的值 True、falsecategoryAxis.parseDates = false; </p><p>3 minPeriod 当以日期为x轴的时候x轴显示的最小范围SS:分钟 DD:天 categoryAxis.minPeriod = “SS” </p><p>4 dashLength 破折线长度，默认为0是实心线categoryAxis.dashLength = 1; </p><p>5 gridAlpha 网格的透明度，垂直x轴的刻度线形成网格categoryAxis.gridAlpha = 0.15; </p><p>6 axisColor 轴的颜色categoryAxis.axisColor = “#DADADA”; </p><p>7 position 轴的位置，默认在最下方 top:显示在上方 left:左侧right: 右侧   categoryAxis.position = “top”; </p><p>8 gridPosition 网格位置categoryAxis.gridPosition = “start”; </p><p>9 startOnAxis 是否从轴上开始绘制，默认为false，即第一个点绘制是从中间开始的，当设置为true、false</p><p>categoryAxis.startOnAxis = true;</p><p>true的时候，第一个点开始总是从Y轴上</p><p>开始，结束总是在最后一个跟Y轴平行的</p><p>轴上结束 </p><p>10 gridColor 网格颜色 categoryAxis.gridColor= “#FFFFFF”; </p><p>11 dateFormats 日期格式，将数据格式化成对应的日期格式categoryAxis.dateFormats = </p><p>[{ </p><p>period:’DD’, </p><p>format: ‘DD’}, </p><p>{period:’WW’, </p><p>format: ‘MMM DD’}, </p><p>{period: ‘MM’,format:’MMM’}, </p><p>period: ‘YYYY’, </p><p>format: ‘YYYY’ </p><p>}]; </p><p>12 minorGridEnabled Specifies if minor gridshould be true,false </p><p>displayed. </p><p>3、 Legend(图例) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 legend对象 在图表的上方或者下方显示图例，图例的颜色就是对应线条的颜色</p><p>var legend = new AmCharts.AmLegend(); </p><p>2 align 排列样式 center legend.align= “center”; </p><p>3 marginLeft 左边缘 legend.marginLeft =0; </p><p>4 title 标题 legend.title=”测试”; </p><p>5 horizontalGap 水平间隔，一个图表可以有多个图例，图例之间的间隔用此属性 </p><p> legend.horizontalGap = 10; </p><p>6 equalWidths 是否等宽 legend.equalWidths =false;</p><p>7 valueWidth 值的宽度，在图例的右侧会显示该线或者图表的当前选中的值，设置为0时则不显示值 </p><p> legend.valueWidth = 120; </p><p>8 switchType 暂时没明白什么意思 legend.switchType =”v”; </p><p>4、 Guide(向导线) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 1 guide对象 向导线可以是一条根Y轴平行的线，也可以是一个矩形区域</p><p>var guide = new AmCharts.Guide(); </p><p>2 fillAlpha 区域透明度 guide.fillAlpha =0.1;</p><p>3 lineAlpha 线透明度 guide.lineAlpha = 0;</p><p>4 value 其实值，其实指对应Y坐标的值 guide.value = 50; </p><p>5 toValue 到达值，其实指对应Y坐标的值，跟上面属性共同确定了一个从value到toValue的区域，宽度为图表的宽度，高度为(toValue-value)的绝对值 </p><p> guide.toValue = 0; </p><p>6 lineColor 相导线的颜色 guide.lineColor =”#CC0000”;</p><p>7 dashLength 破折长度，默认为0为实心线条，设置值后为破折线 </p><p> guide.dashLength = 4; </p><p>8 label 标签，就是给向导线显示一个名字 guide.label = “平均值”; </p><p>9 inside 是否让向导线显示在图形里面，默认为true True，false guide.inside = true; </p><p>5、 Scrollbar(滚动条) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 scrollbar对象 滚动条可以选择图表显示的区域 </p><p>var chartScrollbar = newAmCharts.ChartScrollbar(); </p><p>3 backgroundAlpha滚动条背景透明度 </p><p>chartScrollbar.backgroundAlpha= 0.1; </p><p>4滚动条背景颜色backgroundColor </p><p>chartScrollbar.backgroundColor=”#000000”; </p><p>5 graphLineAlpha 图像线条的透明度 </p><p>chartScrollbar.graphLineAlpha = 0.1; </p><p>6 graphFillAlpha 图像的填充透明度 </p><p>chartScrollbar.graphFillAlpha = 0; </p><p>7 selectedGraphFillAlpha选中图像的填充色的透明度         b    chartScrollbar.selectedGraphFillAlpha = 0; </p><p>8 selectedGraphLineAlpha选中区域的图像线条透明度chartScrollbar.selectedGraphLineAlpha = 0.25; </p><p>9 scrollbarHeight滚动条高度chartScrollbar.scrollbarHeight = 30; </p><p>10 selectedBackgroundColor选中区域的背景颜色 chartScrollbar.selectedBackgroundColor = “#FFFFFF”; </p><p>6、 Graph (图表) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 graph对象 图像对象，必须有该属性 </p><p>var graph1 = new AmCharts.AmGraph(); </p><p>2 valueAxis 图像的Y轴，一个chart可以添加多个valueAxis</p><p>graph1.valueAxis = graph，一个graph只能有一个valueAxis1;  </p><p>*<em>var *</em>valueAxis1= *<em>new *</em>AmCharts.ValueAxis;//添加坐标轴</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br>**valueAxis1.axisThickness</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br><strong>valueAxis1.axisThickness<br>=</strong>1**;</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br><strong>valueAxis1.axisThickness<br>=</strong>1<strong>;<br>valueAxis1.unit=</strong>“kwh”**;</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br><strong>valueAxis1.axisThickness<br>=</strong>1<strong>;<br>valueAxis1.unit=</strong>“kwh”<strong>;<br>valueAxis1.position=</strong>“left”**;</p><p><strong>var *<em>valueAxis1= *</em>new **AmCharts.ValueAxis;//添加坐标轴<br>valueAxis1.id=</strong>“val2”<br><strong>valueAxis1.axisThickness<br>=</strong>1<strong>;<br>valueAxis1.unit=</strong>“kwh”<strong>;<br>valueAxis1.position=</strong>“left”<strong>;<br>chart.addValueAxis</strong>(<strong>valueAxis1</strong>)**</p><hr><p><strong>//**</strong>图表**</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">var graph = new AmCharts.AmGraph();</span><br><span class="line"></span><br><span class="line">graph.bullet=&quot;round&quot;;</span><br><span class="line"></span><br><span class="line">graph.hideBulletsCount=30;</span><br><span class="line"></span><br><span class="line">graph.useLineColorForBulletBorder=true;</span><br><span class="line"></span><br><span class="line">// graph.fillAlphas=0.8;</span><br><span class="line"></span><br><span class="line">graph.lineAlpha=1;</span><br><span class="line"></span><br><span class="line">graph.id =aa; // 英文字段；</span><br><span class="line"></span><br><span class="line">graph.Title = &quot;能效&quot;+ &quot; Title&quot;;</span><br><span class="line"></span><br><span class="line">// console.log(deduplication(arr)[i])</span><br><span class="line"></span><br><span class="line">graph.valueField = aa; // 英文字段</span><br><span class="line"></span><br><span class="line">// graph.valueAxis=valueAxis1;</span><br><span class="line"></span><br><span class="line">graph.type = &quot;line&quot;; // 表示线性；</span><br><span class="line"></span><br><span class="line">graph.balloonText = &quot;能效&quot;+ &quot;:[[value]]&quot;;</span><br><span class="line"></span><br><span class="line">graph.valueAxis=&quot;val2&quot;;</span><br><span class="line"></span><br><span class="line">chart.addGraph(graph);</span><br></pre></td></tr></table></figure><p>  3 valueField 指定一个字段作为Y坐标值 graph1.valueField = “visits”;</p><p>4 bullet 图像的节点类型 graph1.bullet =”round”; </p><p>5 dashLength 绘制图像时延时，默认为0秒，设置为正整数时可以看到动态生成效果 </p><p> graph1.dashLength= 0; </p><p>6 hideBulletsCount一个图像中当节点大于一定数值后隐藏节点形状 </p><p> graph1.hideBulletsCount = 10; </p><p>7 balloonText 节点显示的文本内容 </p><p>graph1.balloonText = “<a href="[[visits]]">[date]</a>“;</p><p> 8lineColor 图像线颜色 graph1.lineColor = “#d1655d”; </p><p>9 connect 是否连接起来，是指如果数据有x轴值，但是y轴值丢失的时候，如果设置为true则忽略该点，设置为false则线条在此点处断开 </p><p> graph1.connect = false; </p><p>10 bulletBorderColor节点边框颜色 </p><p>graph1.bulletBorderColor = “#FFFFFF”; </p><p>11 bulletBorderThickness节点边框宽度 </p><p>graph1.bulletBorderThickness = 2; </p><p>12 customBulletField用户自定义节点字段</p><p> graph.customBulletField = “bullet”; </p><p>13 bulletOffset 节点偏移量 graph.bulletOffset =16; </p><p>14 cornerRadiusTop graph.cornerRadiusTop = 8; </p><p>15 bulletSize 节点大小 graph.bulletSize =14; </p><p>16 colorField 颜色字段，颜色可以从数据中读取 graph1.colorField = “color”; </p><p>17 type 图像类型，有line、column、smoothedLine类型，第一种为线形图，第二种为柱状图 </p><p>graph1.type = “line”; line/column/smoothedLine </p><p>18 fillAlphas 填充区透明度，默认为0，最大值为1，当设置值时，在线条跟x轴之间的区域会填充颜色 </p><p>graph1.fillAlphas = 0.3; </p><p>19 negativeLineColor当数值为负数时线条的颜色</p><p> graph1.negativeLineColor =”#efcc26”; </p><p>7、 Chart (amcharts 对象) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 chart对象 Amcharts 的核心对象 </p><p>var chart = new AmCharts.AmSerialChart(); </p><p>2 pathToImages 指定chart图片的引用地址 </p><p>chart.pathToImages =”amcharts/images/“; </p><p>3 zoomOutButton 设置放大/缩小按钮的背景色和透明度</p><p> chart.zoomOutButton = { </p><p>backgroundColor: </p><p>‘#000000’, </p><p>backgroundAlpha: 0.15 </p><p>}; </p><p>4 dataProvider 指定数据来源，一般指向一个数组对象 </p><p>chart.dataProvider = chartData; </p><p>5 categoryField 指定X轴由哪个字段决定 chart.categoryField = “date”; </p><p>6 autoMargins 自动调整边距，如果设置为true则边距设置不起效 </p><p> chart.autoMargins = true; </p><p>7 fontSize 字体大小 chart.fontSize = 14;</p><p>8 color 图标颜色 chart.color =”#FFFFFF”; </p><p>9 marginTop 上边距 chart.marginTop =100; </p><p>10 marginLeft 左边距 chart.marginLeft =50; </p><p>11 marginRight 右边距 chart.marginRight =30; </p><p>12 addGraph(graph) 添加一个图形，可以添加多个，想要绘制图形，必须有此方法 </p><p>chart.addGraph(graph1); </p><p>13 validateNow(div) 当数据改变时或者属性改变时，想要重新绘图，可以调用该方法chart.validateNow(‘chartdiv’); </p><p>14 chart.write(‘chartdiv’);将amcharts对象写到一个div中，最常用方法chart.chart.write(‘chartdiv’);</p><p> 15addListener(‘dataUp dated’, zoomChart); </p><p>添加一个监听函数，第一个参数是指定事件，第二个是调用的函数名’, </p><p><strong>对象获取方法/常用属性值</strong></p><p>chart.addListener(‘zoomed’, handleZoom);</p><p>示例：</p><p>chart.addListener(‘dataUpdated’, zoomChart);</p><p> 16 rotate图像是否xy轴互换，默认为false，如果想False，让图像顺时针旋转90?，则设置为true </p><p>true chart.rotate = false; </p><p>17 depth3D 设置为3d图像的厚度值 chart.depth3D = 5018 angle 角度，当设置图像为3d图时使用该属性， chart.angle = 40 </p><p>默认为0 </p><p>19 startDuration chart.startDuration = 2 20plotAreaBorderColor 绘图区域边框颜色 </p><p>chart.plotAreaBorderColor </p><p>= “#000000”; </p><p>21 plotAreaBorderAlpha 绘图区域边框透明度chart.plotAreaBorderAlpha </p><p>= 5; </p><p>22 backgroundImage 设置背景图片的地址 </p><p>chart.backgroundImage = “amcharts/images/bg.jpg”;</p><p>23 addChartScrollbar(chartScrollbar) 添加滚动条，只能添加一个           chart.addChartScrollbar(chartScrollbar); </p><p>24 addLegend(legend) 添加图例，可以添加多个chart.addLegend(legend); </p><p>25 addValueAxis(valueAxis1) 添加Y轴。可以添加多个  chart.addValueAxis(valueAxis1);</p><p>26 addChartCursor(chartCursor)添加鼠标形状 </p><p>chart.addChartCursor(chartCursor); </p><p>8、 ChartCursor(光标) </p><p>序号 属性名/方法名 作用 对象获取方法/常用属性值 示例 </p><p>1 chartCursor 对象设置光标的形状和样式 var chartCursor =new </p><p>AmCharts.ChartCursor(); </p><p>2 zoomable 是否可以缩放，设为true的时候，按住鼠标左键划线可以方法图像True/false </p><p>chartCursor.zoomable = false; </p><p>3 cursorAlpha 光标透明度 </p><p>chartCursor.cursorAlpha = 0; </p><p>4 cursorPosition 光标位置</p><p> chartCursor.cursorPosition =”mouse”; </p><p>5 pan 默认为false，设置为true时，光标变为四个向外的箭头形状，按住左键滑动鼠标可以将图像向左移动向右移动 </p><p> chartCursor.pan = true; </p><p>6 categoryBalloonDateFormat设置光标节点显示的日期格式 </p><p>chartCursor.categoryBalloonDateFormat =”JJ:NN, DD MMMM”; </p><p>9、 动态图表示例 </p><p>1、需要在html页面增加一个div，同时设置div的id和样式，amcharts将图表显示在指定的id的div中 </p><div id="chartdiv" style="width: 50%; height: 300px"></div> <p>2、引用amcharts js 库和css样式 </p><script src="amcharts/amcharts.js" type="text/javascript"></script> <link rel="stylesheet" href="style.css" type="text/css"> <p>3、设定一个定时器，循环调用函数 </p><p>window.setInterval(show,2000);//每隔2秒调用一次show()方法，show方法完成绘图功能 </p><p>function show(){ </p><p>var chart = new AmCharts.AmSerialChart(); </p><p>var valueAxis1 = new AmCharts.ValueAxis(); </p><p>var graph1 = new AmCharts.AmGraph(); </p><p>var categoryAxis = chart.categoryAxis; </p><p>var guide = new AmCharts.Guide(); </p><p>var legend = new AmCharts.AmLegend(); </p><p>var chartCursor = new AmCharts.ChartCursor(); </p><p>//设定最大显示数值个数 </p><p>generateChartData(); </p><p>chart.pathToImages =”amcharts/images/“; </p><p>chart.zoomOutButton = { </p><p>backgroundColor: ‘#000000’, </p><p>backgroundAlpha: 0.15 </p><p>}; </p><p>chart.dataProvider = chartData; </p><p>chart.categoryField = “date”; </p><p>categoryAxis.parseDates = false; // as our datais date-based, we set parseDates to true </p><p>categoryAxis.dashLength = 1; </p><p>categoryAxis.gridAlpha = 0.15; </p><p>categoryAxis.axisColor = “#DADADA”; </p><p>// categoryAxis.position = “top”; </p><p>categoryAxis.gridPosition = “start”; </p><p>categoryAxis.startOnAxis = true; </p><p>categoryAxis.gridColor = “#FFFFFF”; </p><p>// CURSOR </p><p>chartCursor.zoomable = false; // as the chartdisplayes not too many values, we disabled zooming </p><p>chartCursor.cursorAlpha = 0; </p><p>chartCursor.cursorPosition = “mouse”; </p><p>chartCursor.pan = true; // set it to fals if youwant the cursor to work in “select” mode </p><p>chart.addChartCursor(chartCursor); </p><p>valueAxis1.axisColor = “#FF6600”; </p><p>valueAxis1.axisThickness = 1; </p><p>valueAxis1.gridAlpha = 0; </p><p>valueAxis1.tickLength =0; </p><p>valueAxis1.minimum = -100; </p><p>valueAxis1.maximum = 100; </p><p>valueAxis1.title=”哈哈”; </p><p>valueAxis1.logarithmic = false; // this linemakes axis logarithmic </p><p>valueAxis1.integersOnly = true; </p><p>valueAxis1.gridCount = 10; </p><p>valueAxis1.unit = “%”; </p><p>valueAxis1.labelsEnabled = true; </p><p>valueAxis1.inside = true; </p><p>valueAxis1.position = “left”; </p><p>chart.addValueAxis(valueAxis1); </p><p>// LEGEND </p><p>legend.align = “center”; </p><p>legend.marginLeft = 0; </p><p>legend.title=”测试”; </p><p>legend.horizontalGap = 10; </p><p>legend.equalWidths = false; </p><p>legend.valueWidth = 120; </p><p>chart.addLegend(legend); </p><p>guide.fillAlpha = 0.1; </p><p>guide.lineAlpha = 0; </p><p>guide.value = 50; </p><p>guide.toValue = 0; </p><p>guide.lineColor = “#CC0000”; </p><p>guide.dashLength = 4; </p><p>guide.label = “平均值”; </p><p>guide.inside = true; </p><p>guide.lineAlpha = 1; </p><p>var guide1 = new AmCharts.Guide(); </p><p>guide1.lineColor = “#CC0000”; </p><p>guide1.lineAlpha = 1; </p><p>guide1.dashLength = 2; </p><p>guide1.inside = true; </p><p>guide1.labelRotation = 90; </p><p>categoryAxis.addGuide(guide1); </p><p>valueAxis1.addGuide(guide); </p><p>graph1.valueAxis = valueAxis1; // we have toindicate which value axis should be used </p><p>graph1.title = “红色”; </p><p>graph1.valueField = “visits”; </p><p>graph1.bullet = “round”; </p><p>graph1.dashLength = 0; </p><p>graph1.hideBulletsCount = 10; </p><p>graph1.balloonText = “<a href="[[visits]]">[date]</a>“; </p><p>graph1.lineColor = “#d1655d”; </p><p>graph1.connect = false; </p><p>graph1.negativeLineColor = “#efcc26”; </p><p>graph1.bulletBorderColor = “#FFFFFF”; </p><p>graph1.bulletBorderThickness = 2; </p><p>graph1.type = “smoothedLine”; // thisline makes the graph smoothed line. </p><p>graph1.fillAlphas = 0.3; // setting fillAlphasto &gt; 0 value makes it area graph </p><p>chart.addGraph(graph1); </p><p>chart.addTitle(“测试动态报表图”, 5); </p><p>chart.plotAreaBorderColor = “#000000”;</p><p>chart.plotAreaBorderAlpha = 5; </p><p>chart.autoMargins = true; </p><p>chart.fontSize = 14; </p><p>chart.write(‘chartdiv’); </p><p>chart=null; </p><p>valueAxis1 = null; </p><p>graph1 = null; </p><p>categoryAxis = null; </p><p>guide = null; </p><p>legend = null; </p><p>} </p><p>function generateChartData() { </p><p>$.ajax({ </p><p>type : “get”, </p><p>url :”${pageContext.request.contextPath}/getData”, </p><p>dataType : “text”, </p><p>data : { </p><p>}, </p><p>success : function(result) { </p><p>parseData(result,20); </p><p>}, </p><p>error : function(XMLHttpRequest, textStatus,errorThrown) { </p><p>alert(“请求异常，请检查服务器是否正常运行～” + XMLHttpRequest.status + “ “ </p><p>+ XMLHttpRequest.readyState + “ “ +textStatus); </p><p>} </p><p>}); </p><p>} </p><p>function parseData(data,num){ </p><p>var tempDate = []; </p><p>tempDate = data.split(“ “); </p><p>chartData.push({ </p><p>date:tempDate[0], </p><p>visits:tempDate[1] </p><p>}); </p><p>var newChartData=[]; </p><p>var len=chartData.length; </p><p>if(len&gt;num){ </p><p>for(var m=0;m&lt;num;m++){ </p><p>newChartData[m]=chartData[len-num+m]; </p><p>} </p><p>chartData = newChartData; </p><p>newChartData=null; </p><p>} </p><p>len=null; </p><p>visits=null; </p><p>} </p><p>4、写一个servlet程序，给amcharts提供动态数据 public class DataProviderServlet extends HttpServlet{ </p><p>private static final long serialVersionUID = 1L;</p><p>public static Integer i=0; </p><p>public DataProviderServlet() { </p><p>super(); </p><p>} </p><p>protected void doGet(HttpServletRequest request,HttpServletResponse response) throws ServletException, </p><p>IOException { </p><p>StringBuilder sb = new StringBuilder(); </p><p>sb.append(i++).append(“ “).append(newRandom().nextInt(100)*(i%2==0?(-1):(1))); </p><p>System.out.println(sb.toString()); </p><p>response.getWriter().write(sb.toString()); </p><p>} </p><p>protected void doPost(HttpServletRequestrequest, HttpServletResponse response) throws ServletException, IOException { </p><p>doGet(request, response); </p><p>} </p><p>} </p><p>5、效果截图 </p><p><img src="file:///C:/Users/hgy/AppData/Local/Temp/msohtmlclip1/01/clip_image001.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>自动化测试学习</title>
    <link href="http://hugenye.github.io/2020/03/13/auto/"/>
    <id>http://hugenye.github.io/2020/03/13/auto/</id>
    <published>2020-03-13T06:48:56.000Z</published>
    <updated>2020-07-13T06:57:26.445Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="python" scheme="http://hugenye.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>http</title>
    <link href="http://hugenye.github.io/2019/12/10/http/"/>
    <id>http://hugenye.github.io/2019/12/10/http/</id>
    <published>2019-12-10T10:50:06.000Z</published>
    <updated>2020-07-13T06:51:14.541Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h2><h3 id="Content-MD5"><a href="#Content-MD5" class="headerlink" title="Content-MD5"></a>Content-MD5</h3><p><a href="https://www.ituring.com.cn/article/74167" target="_blank" rel="noopener">https://www.ituring.com.cn/article/74167</a></p><p>MD5和Content-MD5的最大区别，MD5的长度是32位，Content-MD5的长度是16位，Content-MD5比MD5安全性要高一些。</p><h3 id="Content-Type"><a href="#Content-Type" class="headerlink" title="Content-Type"></a>Content-Type</h3><p><a href="https://www.cnblogs.com/Im-Victor/p/9408449.html" target="_blank" rel="noopener">https://www.cnblogs.com/Im-Victor/p/9408449.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="http" scheme="http://hugenye.github.io/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>网上习题</title>
    <link href="http://hugenye.github.io/2019/09/29/exercises/"/>
    <id>http://hugenye.github.io/2019/09/29/exercises/</id>
    <published>2019-09-29T05:17:20.000Z</published>
    <updated>2019-09-29T08:35:28.480Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><h3 id="网络协议通俗理解"><a href="#网络协议通俗理解" class="headerlink" title="网络协议通俗理解"></a>网络协议通俗理解</h3><table><thead><tr><th align="center">OSI中的层</th><th align="center">功能</th><th align="center">TCP/IP协议</th></tr></thead><tbody><tr><td align="center">应用层</td><td align="center">文件传输，电子邮件，文件服务，虚拟终端</td><td align="center">TETP,HTTP,SNMP,FTP,SMTP,DNS,RIP,Telnet</td></tr><tr><td align="center">表示层</td><td align="center">数据格式化，代码转换，数据加密</td><td align="center">没有协议</td></tr><tr><td align="center">会话层</td><td align="center">解除或建立于别的接点的联系</td><td align="center">没有协议</td></tr><tr><td align="center">传输层</td><td align="center">提供端与端的接口</td><td align="center">TCP,UDP</td></tr><tr><td align="center">网络层</td><td align="center">为数据包选择路由</td><td align="center">IP,ICMP,OSPF,BGP,IGMP,ARP.RARP</td></tr><tr><td align="center">数据链路层</td><td align="center">传输有地址的帧以及错误检测功能</td><td align="center">SLIP,CSLIP,PPP,MTU,ARP,RARP</td></tr><tr><td align="center">物理层</td><td align="center">以二进制数据形式在物理媒体上传输数据</td><td align="center">ISO2110,IEEE802,IEEE802,2</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="面试题" scheme="http://hugenye.github.io/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Python学习</title>
    <link href="http://hugenye.github.io/2019/09/24/python/"/>
    <id>http://hugenye.github.io/2019/09/24/python/</id>
    <published>2019-09-24T12:37:52.000Z</published>
    <updated>2020-07-17T00:40:04.497Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Python简介"><a href="#Python简介" class="headerlink" title="Python简介"></a>Python简介</h2><p>python跨平台，python应用范围广（操作系统、web平台、3d动画、企业应用、云计算）</p><p><a href="https://fishc.com.cn/thread-35584-1-1.html" target="_blank" rel="noopener">学习参考</a></p><p>python有很多BIF内置函数（dir(<strong>builtins</strong>)查看python中所用BIF）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(__builtins__)  纯小写的是内置函数</span><br><span class="line">[<span class="string">'ArithmeticError'</span>, <span class="string">'AssertionError'</span>, <span class="string">'AttributeError'</span>, <span class="string">'BaseException'</span>, <span class="string">'BlockingIOError'</span>, <span class="string">'BrokenPipeError'</span>, <span class="string">'BufferError'</span>, <span class="string">'BytesWarning'</span>, <span class="string">'ChildProcessError'</span>, <span class="string">'ConnectionAbortedError'</span>, <span class="string">'ConnectionError'</span>, <span class="string">'ConnectionRefusedError'</span>, <span class="string">'ConnectionResetError'</span>, <span class="string">'DeprecationWarning'</span>, <span class="string">'EOFError'</span>, <span class="string">'Ellipsis'</span>, <span class="string">'EnvironmentError'</span>, <span class="string">'Exception'</span>, <span class="string">'False'</span>, <span class="string">'FileExistsError'</span>, <span class="string">'FileNotFoundError'</span>, <span class="string">'FloatingPointError'</span>, <span class="string">'FutureWarning'</span>, <span class="string">'GeneratorExit'</span>, <span class="string">'IOError'</span>, <span class="string">'ImportError'</span>, <span class="string">'ImportWarning'</span>, <span class="string">'IndentationError'</span>, <span class="string">'IndexError'</span>, <span class="string">'InterruptedError'</span>, <span class="string">'IsADirectoryError'</span>, <span class="string">'KeyError'</span>, <span class="string">'KeyboardInterrupt'</span>, <span class="string">'LookupError'</span>, <span class="string">'MemoryError'</span>, <span class="string">'ModuleNotFoundError'</span>, <span class="string">'NameError'</span>, <span class="string">'None'</span>, <span class="string">'NotADirectoryError'</span>, <span class="string">'NotImplemented'</span>, <span class="string">'NotImplementedError'</span>, <span class="string">'OSError'</span>, <span class="string">'OverflowError'</span>, <span class="string">'PendingDeprecationWarning'</span>, <span class="string">'PermissionError'</span>, <span class="string">'ProcessLookupError'</span>, <span class="string">'RecursionError'</span>, <span class="string">'ReferenceError'</span>, <span class="string">'ResourceWarning'</span>, <span class="string">'RuntimeError'</span>, <span class="string">'RuntimeWarning'</span>, <span class="string">'StopAsyncIteration'</span>, <span class="string">'StopIteration'</span>, <span class="string">'SyntaxError'</span>, <span class="string">'SyntaxWarning'</span>, <span class="string">'SystemError'</span>, <span class="string">'SystemExit'</span>, <span class="string">'TabError'</span>, <span class="string">'TimeoutError'</span>, <span class="string">'True'</span>, <span class="string">'TypeError'</span>, <span class="string">'UnboundLocalError'</span>, <span class="string">'UnicodeDecodeError'</span>, <span class="string">'UnicodeEncodeError'</span>, <span class="string">'UnicodeError'</span>, <span class="string">'UnicodeTranslateError'</span>, <span class="string">'UnicodeWarning'</span>, <span class="string">'UserWarning'</span>, <span class="string">'ValueError'</span>, <span class="string">'Warning'</span>, <span class="string">'WindowsError'</span>, <span class="string">'ZeroDivisionError'</span>, <span class="string">'__build_class__'</span>, <span class="string">'__debug__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__import__'</span>, <span class="string">'__loader__'</span>, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>, <span class="string">'abs'</span>, <span class="string">'all'</span>, <span class="string">'any'</span>, <span class="string">'ascii'</span>, <span class="string">'bin'</span>, <span class="string">'bool'</span>, <span class="string">'breakpoint'</span>, <span class="string">'bytearray'</span>, <span class="string">'bytes'</span>, <span class="string">'callable'</span>, <span class="string">'chr'</span>, <span class="string">'classmethod'</span>, <span class="string">'compile'</span>, <span class="string">'complex'</span>, <span class="string">'delattr'</span>, <span class="string">'dict'</span>, <span class="string">'dir'</span>, <span class="string">'divmod'</span>, <span class="string">'enumerate'</span>, <span class="string">'eval'</span>, <span class="string">'exec'</span>, <span class="string">'filter'</span>, <span class="string">'float'</span>, <span class="string">'format'</span>, <span class="string">'frozenset'</span>, <span class="string">'getattr'</span>, <span class="string">'globals'</span>, <span class="string">'hasattr'</span>, <span class="string">'hash'</span>, <span class="string">'hex'</span>, <span class="string">'id'</span>, <span class="string">'input'</span>, <span class="string">'int'</span>, <span class="string">'isinstance'</span>, <span class="string">'issubclass'</span>, <span class="string">'iter'</span>, <span class="string">'len'</span>, <span class="string">'list'</span>, <span class="string">'locals'</span>, <span class="string">'map'</span>, <span class="string">'max'</span>, <span class="string">'memoryview'</span>, <span class="string">'min'</span>, <span class="string">'next'</span>, <span class="string">'object'</span>, <span class="string">'oct'</span>, <span class="string">'open'</span>, <span class="string">'ord'</span>, <span class="string">'pow'</span>, <span class="string">'print'</span>, <span class="string">'property'</span>, <span class="string">'range'</span>, <span class="string">'repr'</span>, <span class="string">'reversed'</span>, <span class="string">'round'</span>, <span class="string">'set'</span>, <span class="string">'setattr'</span>, <span class="string">'slice'</span>, <span class="string">'sorted'</span>, <span class="string">'staticmethod'</span>, <span class="string">'str'</span>, <span class="string">'sum'</span>, <span class="string">'super'</span>, <span class="string">'tuple'</span>, <span class="string">'type'</span>, <span class="string">'vars'</span>, <span class="string">'zip'</span>]</span><br></pre></td></tr></table></figure><h2 id="Python的安装（免安装版）"><a href="#Python的安装（免安装版）" class="headerlink" title="Python的安装（免安装版）"></a>Python的安装（免安装版）</h2><p>1、在<a href="http://python.org/download%20" target="_blank" rel="noopener">官网下载地址</a>，下载windows系统 下的zip安装包</p><p>2、解压安装在c盘</p><p>3、启动python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;cd C:\python37 </span><br><span class="line">&gt;python </span><br><span class="line">Python 3. 7.4 (tags/v3. 7. 4:e09359112e, Jul 8 2019, 20:34:20) CMSC v. 1916 64 bit (kWD64)) on win32</span><br></pre></td></tr></table></figure><p>4、配置python环境变量</p><p>A.右键点击“我的电脑”，点击“属性”；</p><p>B.在弹出的界面中点击“高级系统设置”</p><p>C.在弹出的界面中点击“环境变量”；</p><p>D.在弹出的页面中进行环境变量的配置；</p><h2 id="Idea下Python开发平台的搭建"><a href="#Idea下Python开发平台的搭建" class="headerlink" title="Idea下Python开发平台的搭建"></a><a href="https://www.cnblogs.com/arxive/p/9780158.html" target="_blank" rel="noopener">Idea下Python开发平台的搭建</a></h2><p>\1. python的下载</p><p><a href="https://www.python.org/downloads/" target="_blank" rel="noopener">https://www.python.org/downloads/</a> </p><p>\2. idea下python插件的安装</p><p>点击File-&gt;Settings…-&gt;Plugins，在里面搜索python。</p><p>发现搜索并没有结果。我们点击search in repositories链接</p><p>\3. idea下的配置</p><p>File-&gt;New-&gt;Project，可以看到左边的项目类型中多了一个python。点击它</p><h2 id="基础入门"><a href="#基础入门" class="headerlink" title="基础入门"></a>基础入门</h2><h3 id="变量和字符串"><a href="#变量和字符串" class="headerlink" title="变量和字符串"></a>变量和字符串</h3><p>定义<strong>变量</strong>需要注意：</p><ul><li>在使用变量之前，需要对其先赋值</li><li>变量名可以包括字母、数字、下划线，但是变量名不能以数字开头。</li><li>字母可以是大写或着小写，但是大小写是不同的。也就是说hu和Hu对于python来说是完全不同的两个名字</li><li>变量命名理论上是可以取任何合法的名字。但是尽量给变量取一个专业一点的名字</li></ul><p><strong>字符串</strong></p><p>如果字符串出现单引号（’）或双引号（“）怎么办？</p><p>1.利用转义符号（)对字符串中的引号进行转义；</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">'I\'m Jane'</span>)  打印出I<span class="string">'m Jane</span></span><br></pre></td></tr></table></figure><p> 如果遇到要打印路径之类的比如C:\note，需要反斜杠对自身进行转义</p><p>但是如果对于一个字符串中有很多个反斜杠，可以使用原始字符串比如str=r’C:\note’</p><p><strong>长字符串</strong></p><p>如果想要得到一个跨域多行的字符串，就需要三重引号（’‘’）字符串</p><p>###Python的数据类型 </p><p>‘数字’和数字代表不同的意义</p><p>整型（在版本3.0后和长整型表示一致）</p><p>浮点型（有小数点是浮点型，没有小数点是整型）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">15e10</span>)   <span class="comment">#150000000000.0 </span></span><br><span class="line">print(<span class="number">0.0000000001</span>)  <span class="comment">#1e-10</span></span><br><span class="line">e代表<span class="number">10</span>的含义，小数点左边是正数，右边是负数</span><br></pre></td></tr></table></figure><p>布尔类型（可以当作整数看待）</p><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><img src="/2019/09/24/python/zhuan.PNG" title="这是类型转换的图片"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">b=int(<span class="string">'340'</span>) <span class="comment">#340</span></span><br><span class="line">c=int(<span class="string">'我的'</span>) <span class="comment">#ValueError: invalid literal for int() with base 10: '我的'</span></span><br><span class="line"></span><br><span class="line">f=<span class="number">5.59</span>  </span><br><span class="line">f=int(f)</span><br><span class="line">print(f) <span class="comment">#5  浮点数转型为整型，python采取截断处理，效率高</span></span><br></pre></td></tr></table></figure><p>获取关于数据的类型的信息（type()、isinstance()）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print( isinstance(<span class="string">'字符串'</span>, str)) <span class="comment">#True</span></span><br><span class="line">print( isinstance(<span class="number">1</span>,int)) <span class="comment">#True</span></span><br><span class="line">print( isinstance(<span class="number">2.0</span>,float)) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><p>注意：TypeError: isinstance() arg 2 must be a type or tuple of types，对<code>str</code>进行了赋值，导致了<code>字符串</code>这个字符串比较的时候报错</p><h3 id="常用操作符"><a href="#常用操作符" class="headerlink" title="常用操作符"></a>常用操作符</h3><p>算术操作符大部分和c语言一致</p><p><code>**</code>是幂运算操作符 3<code>**</code>2实际上是3<code>^</code>2</p><p>比较操符</p><p>逻辑操作符（and or not)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">not</span> <span class="number">0</span> <span class="comment"># True  0代表false</span></span><br><span class="line"><span class="keyword">not</span> <span class="number">3</span><span class="comment"># False</span></span><br><span class="line">例外 只用python可以执行的语句</span><br><span class="line"><span class="number">3</span>&lt;<span class="number">4</span>&lt;<span class="number">5</span>  <span class="comment">#True</span></span><br></pre></td></tr></table></figure><img src="/2019/09/24/python/you.PNG" title="这是优先级选择的图片"><h3 id="分支和循环"><a href="#分支和循环" class="headerlink" title="分支和循环"></a>分支和循环</h3><p>elif 是else if的缩写</p><h4 id="条件表达式（三元操作符）"><a href="#条件表达式（三元操作符）" class="headerlink" title="条件表达式（三元操作符）"></a>条件表达式（三元操作符）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">语法： x <span class="keyword">if</span> 条件 <span class="keyword">else</span> y</span><br></pre></td></tr></table></figure><h4 id="断言-assert"><a href="#断言-assert" class="headerlink" title="断言 assert"></a>断言 assert</h4><p>当assert这个关键字后边的条件为假的时候，程序自动崩溃并抛出AssertionError的异常</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">assert</span> <span class="number">3</span>&gt;<span class="number">4</span></span><br></pre></td></tr></table></figure><p>一般用来在程序中置入检查点，当需要确保程序中的某个条件一定为真才能让程序正常工作。</p><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 条件:</span><br><span class="line">循环体</span><br></pre></td></tr></table></figure><h4 id="for循环（与c不太一样，更强大）"><a href="#for循环（与c不太一样，更强大）" class="headerlink" title="for循环（与c不太一样，更强大）"></a>for循环（与c不太一样，更强大）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> 目标 <span class="keyword">in</span> 表达式    </span><br><span class="line"> 循环体</span><br><span class="line">range([start],stop,[step])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):<span class="comment"># 0 1 2 3 4</span></span><br><span class="line">    print(i)</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">3</span>): <span class="comment"># 1 2</span></span><br><span class="line">    print(j)</span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>,<span class="number">2</span>):<span class="comment"># 1 3 5 7 9</span></span><br><span class="line">    print(m)</span><br></pre></td></tr></table></figure><h3 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h3><h4 id="列表、元组和字符串的共同点"><a href="#列表、元组和字符串的共同点" class="headerlink" title="列表、元组和字符串的共同点"></a>列表、元组和字符串的共同点</h4><ul><li>都可以通过索引得到每一个元素</li><li>默认所引致总是从0开始</li><li>可以通过分片的方法得到一个范围内的元素的集合</li><li>有很多共同的操作符（重读操作符、拼接操作符、成员关系操作符）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">list()<span class="comment"># [] 空列表  将对象转为列表</span></span><br><span class="line">list(<span class="string">"www.baidu.com"</span>)</span><br><span class="line"><span class="comment"># ['w', 'w', 'w', '.', 'b', 'a', 'i', 'd', 'u', '.', 'c', 'o', 'm']</span></span><br><span class="line">list((<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>)) <span class="comment">#[1, 2, 3, 4]</span></span><br><span class="line">tuple() 将可迭代对象转换为元组</span><br><span class="line">tuple(<span class="string">"www.baidu.com"</span>)</span><br><span class="line"><span class="comment">#('w', 'w', 'w', '.', 'b', 'a', 'i', 'd', 'u', '.', 'c', 'o', 'm')</span></span><br><span class="line">str()转化为字符串</span><br><span class="line">len(<span class="string">"www.baidu.com"</span>) <span class="comment">#13</span></span><br><span class="line">max()/min() 要保证数据类型是统一的</span><br><span class="line">sum((<span class="number">2.3</span>,<span class="number">3.2</span>,<span class="number">4</span>),<span class="number">3</span>) <span class="comment">#12.5 =&gt;(2.3+3.2+4)+3</span></span><br><span class="line">sorted((<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>)) <span class="comment">#[1, 2, 3, 4, 5]</span></span><br><span class="line">list(reversed((<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>))) <span class="comment">#[1, 4, 3, 2, 5]</span></span><br><span class="line">list(enumerate((<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">1</span>))) <span class="comment">#[(0, 5), (1, 2), (2, 3), (3, 4), (4, 1)]</span></span><br><span class="line">list(zip([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>])) <span class="comment">#[(1, 4), (2, 5), (3, 6)]</span></span><br></pre></td></tr></table></figure><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><h5 id="创建列表"><a href="#创建列表" class="headerlink" title="创建列表"></a>创建列表</h5><p>创建一个普通列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">members=[<span class="string">'字符串1'</span>，<span class="string">'字符串2'</span>，<span class="string">'字符串3'</span>]</span><br><span class="line">number=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>]</span><br></pre></td></tr></table></figure><p>创建一个混合列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="string">'字符串1'</span>,<span class="number">3.2</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br></pre></td></tr></table></figure><p>创建一个空列表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">number=[]</span><br></pre></td></tr></table></figure><h5 id="向列表列表添加元素"><a href="#向列表列表添加元素" class="headerlink" title="向列表列表添加元素"></a>向列表列表添加元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="string">'字符串1'</span>,<span class="number">3.2</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line">mix.append(<span class="string">'添加数据'</span>)</span><br><span class="line">mix.extend([<span class="string">'字符串1'</span>,<span class="number">22</span>,<span class="number">1.2</span>])<span class="comment">#extend必须添加对象的是列表</span></span><br><span class="line">mix.insert(<span class="number">1</span>,<span class="string">'插在第二位'</span>)</span><br></pre></td></tr></table></figure><h5 id="从列表中获取元素"><a href="#从列表中获取元素" class="headerlink" title="从列表中获取元素"></a>从列表中获取元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mix[<span class="number">0</span>] <span class="comment">#1</span></span><br></pre></td></tr></table></figure><h5 id="从列表中删除元素"><a href="#从列表中删除元素" class="headerlink" title="从列表中删除元素"></a>从列表中删除元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">mix=[<span class="number">1</span>,<span class="string">'字符串1'</span>,<span class="number">3.2</span>,[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">'数组二的元素'</span>]]</span><br><span class="line">mix.remove(<span class="number">22</span>) <span class="comment">#要删除的内容 remove('字符串')</span></span><br><span class="line"><span class="keyword">del</span> mix[<span class="number">0</span>] <span class="comment">#也可以删除整个数组</span></span><br><span class="line">mix.pop() <span class="comment">#移除最后的一个元素并返回删除元素的值</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">[1, 2, 3, '数组二的元素'] </span></span><br><span class="line"><span class="string">[1, '字符串1', 3.2]</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">mix.pop(<span class="number">1</span>)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">字符串1</span></span><br><span class="line"><span class="string">[1, 3.2, [1, 2, 3, '数组二的元素']]</span></span><br><span class="line"><span class="string">'''</span></span><br></pre></td></tr></table></figure><h5 id="列表分片slice"><a href="#列表分片slice" class="headerlink" title="列表分片slice"></a>列表分片slice</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(mix[<span class="number">1</span>:<span class="number">3</span>])<span class="comment">#['字符串1', 3.2]</span></span><br><span class="line">print(mix[:<span class="number">3</span>])<span class="comment">#[1, '字符串1', 3.2]</span></span><br><span class="line">print(mix[:])<span class="comment">#列表的拷贝</span></span><br></pre></td></tr></table></figure><h5 id="列表的一些常用操作符"><a href="#列表的一些常用操作符" class="headerlink" title="列表的一些常用操作符"></a>列表的一些常用操作符</h5><p>可以比较大小，但是比较的列表内容是以数组第一个元素进行比较；</p><p>列表组合可以用+号连接，但是不能连接一个字符串等数据；</p><p>列表*次数，列表原有数据增加了次数的几个元素</p><h5 id="列表类型内置函数"><a href="#列表类型内置函数" class="headerlink" title="列表类型内置函数"></a>列表类型内置函数</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dir(list)</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">['__add__', '__class__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__iadd__', '__imul__', '__init__', '__init_subclass__', '__iter__', '__le__', '__len__', '__lt__', '__mul__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__rmul__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'append', 'clear', 'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', 'reverse', 'sort']</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">list3=[<span class="number">110</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">110</span>]</span><br><span class="line">list3.count(<span class="number">110</span>) <span class="comment"># 2</span></span><br><span class="line">list3.index(<span class="number">110</span>) <span class="comment">#0  </span></span><br><span class="line">list3.sort()<span class="comment">#从小到大排序</span></span><br><span class="line">list3.sort(reverse=<span class="literal">True</span>)<span class="comment">#逆序</span></span><br></pre></td></tr></table></figure><h4 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h4><p>元组和列表的不同：</p><p>元组内容是不能被修改的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">temp=()<span class="comment">#空的元组</span></span><br><span class="line">temp=(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>)或者<span class="number">1</span>,<span class="number">34</span> <span class="comment">#元组</span></span><br><span class="line">(<span class="number">3</span>)不是元组是个整型元素</span><br><span class="line"><span class="number">8</span>*(<span class="number">8</span>) 是<span class="number">64</span></span><br><span class="line">而<span class="number">8</span>*(<span class="number">8</span>,)是(<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>,<span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">temp=(<span class="string">"组1"</span>,<span class="string">"数2"</span>,<span class="string">"word"</span>)</span><br><span class="line">temp=temp[:<span class="number">1</span>]+(<span class="string">"插入值"</span>,<span class="number">23.6</span>,)+temp[<span class="number">1</span>:]</span><br><span class="line"><span class="comment">#('组1', '插入值', 23.6, '数2', 'word')</span></span><br><span class="line">新的temp生成，旧的temp会被回收器回收</span><br><span class="line"></span><br><span class="line"><span class="keyword">del</span> temp <span class="comment">#删除整个元组</span></span><br></pre></td></tr></table></figure><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><h5 id="奇葩的内置方法"><a href="#奇葩的内置方法" class="headerlink" title="奇葩的内置方法"></a>奇葩的内置方法</h5><p><a href="https://fishc.com.cn/forum.php?mod=viewthread&tid=38992&extra=page%3D1%26filter%3Dtypeid%26typeid%3D403" target="_blank" rel="noopener">字符串的方法与注释</a></p><h5 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'&#123;0&#125; love &#123;1&#125;.&#123;2&#125;'</span>.format(<span class="string">'I'</span>,<span class="string">'baidu'</span>,<span class="string">'com'</span>)</span><br><span class="line"><span class="comment">#I love baidu.com</span></span><br><span class="line"><span class="string">'&#123;a&#125; love &#123;b&#125;.&#123;c&#125;'</span>.format(a=<span class="string">'I'</span>,b=<span class="string">'baidu'</span>,c=<span class="string">'com'</span>)</span><br><span class="line"><span class="string">'&#123;0&#125; love &#123;b&#125;.&#123;c&#125;'</span>.format(<span class="string">'I'</span>,b=<span class="string">'baidu'</span>,c=<span class="string">'com'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'&#123;0:.1f&#125;&#123;1&#125;'</span>.format(<span class="number">27.698</span>,<span class="string">'GB'</span>)</span><br><span class="line"><span class="comment">#27.7GB   </span></span><br><span class="line">:表示格式化符号的开始</span><br><span class="line"><span class="number">.1</span> 四舍五入保留一位小数点</span><br><span class="line">f定点数</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">格式化符号</span><br><span class="line"><span class="string">'%c %c %c'</span> % (<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>)<span class="comment">#a b c</span></span><br></pre></td></tr></table></figure><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="实参和形参"><a href="#实参和形参" class="headerlink" title="实参和形参"></a>实参和形参</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"fun1"</span>)</span><br><span class="line">fun1()<span class="comment"># fun1()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">(num1,num2)</span>:</span><span class="comment">#num1,num2是形参</span></span><br><span class="line">    <span class="keyword">return</span> num1+num2</span><br><span class="line">print(fun2(<span class="number">2</span>,<span class="number">3</span>))<span class="comment">#2，3是实参</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun3</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">"参数是："</span>+name)</span><br><span class="line">fun3(<span class="string">"数值"</span>)</span><br></pre></td></tr></table></figure><h4 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayWord</span><span class="params">(name,words)</span>:</span></span><br><span class="line">    print(name+<span class="string">"-&gt;"</span>+words)</span><br><span class="line"></span><br><span class="line">sayWord(words=<span class="string">"Hello"</span>,name=<span class="string">"小明"</span>)<span class="comment">#words= ，name= 关键字参数</span></span><br><span class="line">小明-&gt;Hello</span><br></pre></td></tr></table></figure><h4 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayWord</span><span class="params">(name=<span class="string">'小白'</span>,words=<span class="string">'世界和平'</span>)</span>:</span></span><br><span class="line">    print(name+<span class="string">"-&gt;"</span>+words)</span><br><span class="line">sayWord()<span class="comment">#小白-&gt;世界和平</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sayWord</span><span class="params">(name=<span class="string">'小白'</span>,words=<span class="string">'世界和平'</span>)</span>:</span></span><br><span class="line">    print(name+<span class="string">"-&gt;"</span>+words)</span><br><span class="line">sayWord(words=<span class="string">"想看雪"</span>)<span class="comment">#小白-&gt;想看雪</span></span><br></pre></td></tr></table></figure><h4 id="收集参数（可变参数）"><a href="#收集参数（可变参数）" class="headerlink" title="收集参数（可变参数）"></a>收集参数（可变参数）</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(*params)</span>:</span></span><br><span class="line">    print(<span class="string">"参数长度是："</span>,len(params))</span><br><span class="line">    print(<span class="string">"第二个参数是："</span>,params[<span class="number">1</span>])</span><br><span class="line">test(<span class="number">1</span>,<span class="string">"雄安"</span>,<span class="number">3.21</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line"><span class="comment">#参数长度是： 6</span></span><br><span class="line"><span class="comment">#第二个参数是： 雄安</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span><span class="params">(*params,exp=<span class="string">'关键字参数'</span>)</span>:</span></span><br><span class="line">    print(<span class="string">"收集参数长度是："</span>,len(params),exp)</span><br><span class="line">    print(<span class="string">"第二个参数是："</span>,params[<span class="number">1</span>])</span><br><span class="line">test(<span class="number">1</span>,<span class="string">"雄安"</span>,<span class="number">3.21</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>)</span><br><span class="line">收集参数如果有其他参数在里面，</span><br><span class="line">会报错：TypeError: test() missing <span class="number">1</span> required keyword-only argument: <span class="string">'exp'</span></span><br><span class="line">要把关键字参数使用上</span><br></pre></td></tr></table></figure><h4 id="函数和过程"><a href="#函数和过程" class="headerlink" title="函数和过程"></a>函数和过程</h4><p>对于一般的编程语言来说函数是有返回值，过程是没有返回值的；</p><p>但是python只有函数没有过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"Hello World"</span>)</span><br><span class="line"></span><br><span class="line">temp=hello()<span class="comment">#Hello World</span></span><br><span class="line">print(temp)<span class="comment">#None</span></span><br></pre></td></tr></table></figure><h4 id="返回值"><a href="#返回值" class="headerlink" title="返回值"></a>返回值</h4><p>python动态确定返回类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">back</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># return &#123;1,"shu",2.43&#125;  ---》&#123;1,"shu",2.43&#125;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>,<span class="string">"shu"</span>,<span class="number">2.43</span></span><br><span class="line"><span class="comment">#(1, 'shu', 2.43)</span></span><br><span class="line">print(back())</span><br></pre></td></tr></table></figure><h4 id="变量的可见性"><a href="#变量的可见性" class="headerlink" title="变量的可见性"></a>变量的可见性</h4><p>局部变量和（global）全局变量</p><p>在函数中对全局变量修改值时，系统会自创建一个新的同名的局部变量。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">discount</span><span class="params">(price,rate)</span>:</span></span><br><span class="line">    final_price=price*(<span class="number">1</span>-rate)</span><br><span class="line">    old_price=<span class="number">50</span></span><br><span class="line">    print(<span class="string">"修改的old_price："</span>,old_price) <span class="comment"># 50 创建了一个局部变量</span></span><br><span class="line">    <span class="keyword">return</span> final_price</span><br><span class="line"></span><br><span class="line">old_price=float(input(<span class="string">"请输入价格："</span>)) <span class="comment">#100</span></span><br><span class="line">rate=float(input(<span class="string">"请输入折扣率："</span>)) <span class="comment">#0.1</span></span><br><span class="line">new_price=discount(old_price,rate) </span><br><span class="line">print(<span class="string">'修改后old_price的值是：'</span>,old_price)<span class="comment"># 100</span></span><br><span class="line">print(<span class="string">'打折后的价格是：'</span>,new_price) <span class="comment">#90</span></span><br><span class="line"></span><br><span class="line"> <span class="keyword">global</span> old_price</span><br><span class="line"> old_price=<span class="number">50</span><span class="comment">#全在函数中局修饰后，只会被变为全局变量</span></span><br><span class="line">修改的old_price： <span class="number">50</span></span><br><span class="line">修改后old_price的值是： <span class="number">50</span></span><br></pre></td></tr></table></figure><h4 id="内嵌函数和闭包"><a href="#内嵌函数和闭包" class="headerlink" title="内嵌函数和闭包"></a>内嵌函数和闭包</h4><p>内嵌函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">"fun1()函数正在被调用"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">()</span>:</span></span><br><span class="line">        print(<span class="string">"fun2()函数正在被调用"</span>)</span><br><span class="line">    fun2()</span><br><span class="line">    </span><br><span class="line">fun1()</span><br><span class="line"><span class="comment">#fun1()函数正在被调用</span></span><br><span class="line"><span class="comment">#fun2()函数正在被调用</span></span><br><span class="line">fun2()</span><br><span class="line"><span class="comment">#NameError: name 'fun2' is not defined</span></span><br></pre></td></tr></table></figure><p>闭包（）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">(num1)</span>:</span> <span class="comment">#在内部函数的fun2的外部作用域时fun1的整个内部空间的变量x进行引用</span></span><br><span class="line">    print(<span class="string">"num1:"</span>,num1)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">(num2)</span>:</span></span><br><span class="line">        print(<span class="string">"num2:"</span>,num2)</span><br><span class="line">        <span class="keyword">return</span> num1+num2</span><br><span class="line">    <span class="keyword">return</span> fun2</span><br><span class="line"></span><br><span class="line">i=fun1(<span class="number">5</span>) </span><br><span class="line">print(type(i))</span><br><span class="line">print(i(<span class="number">7</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">num1: 5</span></span><br><span class="line"><span class="string">&lt;class 'function'&gt;</span></span><br><span class="line"><span class="string">num2: 7</span></span><br><span class="line"><span class="string">12</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">print(fun1(<span class="number">1</span>)(<span class="number">3</span>))</span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">num1: 1</span></span><br><span class="line"><span class="string">num2: 3</span></span><br><span class="line"><span class="string">4'''</span></span><br><span class="line">在fun2()中返回的之不能是fun2() ，会报错TypeError: fun2() missing <span class="number">1</span> required positional argument: <span class="string">'num2'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span> </span><br><span class="line">    x=<span class="number">2</span></span><br><span class="line">    print(<span class="string">"num1:"</span>,x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="comment"># nonlocal x</span></span><br><span class="line">        x *= x</span><br><span class="line">        print(<span class="string">"num2:"</span>,x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">return</span> fun2()</span><br><span class="line">fun1()</span><br><span class="line">会报错：UnboundLocalError: local variable <span class="string">'x'</span> referenced before assignment</span><br><span class="line">解决方法：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span> <span class="comment">#在内部函数的fun2的外部作用域时fun1的整个内部空间的变量x进行引用</span></span><br><span class="line">    x=[<span class="number">2</span>] 变为列表 </span><br><span class="line">    print(<span class="string">"num1:"</span>,x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">()</span>:</span></span><br><span class="line">        x[<span class="number">0</span>] *= x[<span class="number">0</span>]</span><br><span class="line">        print(<span class="string">"num2:"</span>,x[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">return</span> x[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> fun2()</span><br><span class="line">fun1()</span><br><span class="line"> 可以使用局部变量 推荐</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun1</span><span class="params">()</span>:</span> <span class="comment">#在内部函数的fun2的外部作用域时fun1的整个内部空间的变量x进行引用</span></span><br><span class="line">    x=<span class="number">2</span></span><br><span class="line">    print(<span class="string">"num1:"</span>,x)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">nonlocal</span> x  推荐使用</span><br><span class="line">        x *= x</span><br><span class="line">        print(<span class="string">"num2:"</span>,x)</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">return</span> fun2()</span><br><span class="line">fun1()</span><br><span class="line"><span class="comment">#num1: 2</span></span><br><span class="line"><span class="comment">#num2: 4</span></span><br></pre></td></tr></table></figure><h4 id="lamda表达式"><a href="#lamda表达式" class="headerlink" title="lamda表达式"></a>lamda表达式</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ds</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>*x+<span class="number">3</span></span><br><span class="line">print(ds(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line">g=<span class="keyword">lambda</span> x : <span class="number">2</span>*x+<span class="number">3</span></span><br><span class="line">print(g(<span class="number">5</span>))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(x,y)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> x+y</span><br><span class="line">m=<span class="keyword">lambda</span> x,y : x+y</span><br><span class="line">print(add(<span class="number">1</span>,<span class="number">2</span>)==m(<span class="number">1</span>,<span class="number">2</span>)) <span class="comment">#True</span></span><br></pre></td></tr></table></figure><h5 id="lamda的作用："><a href="#lamda的作用：" class="headerlink" title="lamda的作用："></a>lamda的作用：</h5><ul><li>写脚本时，使用lamda表达式可以省下定义函数过程。</li><li>对于一些比较抽象并且整个程序执行下来只需要带哦用两次的函数，有时候给函数起个名字也是头疼的问题，使用lamda就不需要考虑命名的问题</li><li>简化带的可读性</li></ul><h5 id="比较厉害的BIF内置函数"><a href="#比较厉害的BIF内置函数" class="headerlink" title="比较厉害的BIF内置函数"></a>比较厉害的BIF内置函数</h5><p>filter(过滤的要求，要被过滤的内容)过滤器</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">list(filter(<span class="literal">None</span>,[<span class="number">1</span>,<span class="number">0</span>,<span class="literal">False</span>,<span class="literal">True</span>])) <span class="comment">#[1, True] 过滤非True的内容</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">odd</span><span class="params">(x)</span>:</span> <span class="comment">#获取偶数</span></span><br><span class="line">    <span class="keyword">return</span> x%<span class="number">2</span></span><br><span class="line">temp=range(<span class="number">10</span>)</span><br><span class="line">show=filter(odd,temp) <span class="comment">#odd要过滤的内容，temp取值范围</span></span><br><span class="line">list(show)  </span><br><span class="line"></span><br><span class="line">list(filter(<span class="keyword">lambda</span> x:x%<span class="number">2</span>,range(<span class="number">10</span>))) <span class="comment">#是上面的简化</span></span><br></pre></td></tr></table></figure><p>map映射</p><h4 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h4><h5 id="什么是递归？"><a href="#什么是递归？" class="headerlink" title="什么是递归？"></a>什么是递归？</h5><p>有调用函数自身的行为，有个正确的返回条件</p><p>例子：汉诺塔游戏、树结构的定义、谢尔宾斯基三角形</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">非递归方法</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">factorial</span><span class="params">(n)</span>:</span></span><br><span class="line">    retult=n</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n):</span><br><span class="line">        retult *=i</span><br><span class="line">    <span class="keyword">return</span> retult</span><br><span class="line">number=int(input(<span class="string">'请输入一个参数:'</span>))</span><br><span class="line">result=factorial(number)</span><br><span class="line">print(<span class="string">'阶乘是：'</span>,result)</span><br><span class="line">递归阶乘方法</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recursion</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> recursion(x<span class="number">-1</span>)*x</span><br></pre></td></tr></table></figure><h5 id="递归例子——斐波那契数列："><a href="#递归例子——斐波那契数列：" class="headerlink" title="递归例子——斐波那契数列："></a>递归例子——斐波那契数列：</h5><p>分治思想是递归的主要思想</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">迭代方法：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dei</span><span class="params">(m)</span>:</span></span><br><span class="line">    n1=n2=n3=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> m&lt;<span class="number">1</span>:</span><br><span class="line">       print(<span class="string">'请输入大于或等于1的值：'</span>)</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">       <span class="keyword">while</span> (m<span class="number">-2</span>)&gt;<span class="number">0</span>:</span><br><span class="line">           n3=n1+n2</span><br><span class="line">           n1=n2</span><br><span class="line">           n2=n3</span><br><span class="line">           m-=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> n3</span><br><span class="line">递归方法：</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fei</span><span class="params">(m)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> m&lt;<span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'请输入大于或等于1的值：'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    <span class="keyword">if</span> m==<span class="number">1</span> <span class="keyword">or</span> m==<span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fei(m<span class="number">-1</span>)+fei(m<span class="number">-2</span>)</span><br><span class="line"></span><br><span class="line">result=fei(<span class="number">20</span>)</span><br><span class="line"><span class="keyword">if</span> result!=<span class="number">-1</span>:</span><br><span class="line">    print(<span class="string">"共有多少只兔子："</span>,result)</span><br></pre></td></tr></table></figure><h5 id="递归例子——汉诺塔游戏"><a href="#递归例子——汉诺塔游戏" class="headerlink" title="递归例子——汉诺塔游戏"></a>递归例子——汉诺塔游戏</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hanol</span><span class="params">(n,x,y,z)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">        print(x,<span class="string">'--&gt;'</span>,z)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanol(n<span class="number">-1</span>,x,z,y)<span class="comment"># 将前n-1个盘子从x移动到y上</span></span><br><span class="line">        print(x,<span class="string">'--&gt;'</span>,z)<span class="comment"># 将最底下的最后一个盘子从x移动到z上</span></span><br><span class="line">        hanol(n<span class="number">-1</span>,y,x,z)<span class="comment"># 将y上的n-1个盘子移动到z上</span></span><br><span class="line"></span><br><span class="line">n=int(input(<span class="string">'请输入汉诺塔的层数：'</span>))</span><br><span class="line">hanol(n,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>)</span><br></pre></td></tr></table></figure><h3 id="列表存储（对于大量数据的可以导入为一个数据包）"><a href="#列表存储（对于大量数据的可以导入为一个数据包）" class="headerlink" title="列表存储（对于大量数据的可以导入为一个数据包）"></a>列表存储（对于大量数据的可以导入为一个数据包）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#永久存储 写</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">my_list=[<span class="number">123</span>,<span class="number">23.3</span>,<span class="string">"我的"</span>,[<span class="string">'another list'</span>]]</span><br><span class="line">pickle_file=open(<span class="string">"my_list.pkl"</span>,<span class="string">"wb"</span>)</span><br><span class="line">pickle.dump(my_list, pickle_file)</span><br><span class="line">pickle_file.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开 读数据</span></span><br><span class="line">pickle_file=open(<span class="string">"my_list.pkl"</span>,<span class="string">"rb"</span>)</span><br><span class="line">my_list2=pickle.load(pickle_file)</span><br><span class="line">print(my_list2)</span><br></pre></td></tr></table></figure><h4 id="字典（sadomasochism）："><a href="#字典（sadomasochism）：" class="headerlink" title="字典（sadomasochism）："></a>字典（sadomasochism）：</h4><p>当索引不好用时 ,选用字典</p><h5 id="创建和访问字典"><a href="#创建和访问字典" class="headerlink" title="创建和访问字典"></a>创建和访问字典</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Exception异常处理"><a href="#Exception异常处理" class="headerlink" title="Exception异常处理"></a>Exception异常处理</h3><h2 id="python设计游戏"><a href="#python设计游戏" class="headerlink" title="python设计游戏"></a>python设计游戏</h2><h3 id="猜数字游戏"><a href="#猜数字游戏" class="headerlink" title="猜数字游戏"></a>猜数字游戏</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line">i=<span class="number">2</span></span><br><span class="line">num=random.randint(<span class="number">1</span>,<span class="number">10</span>)</span><br><span class="line">print(<span class="string">'---------欢迎进入猜数字游戏-------------'</span>)</span><br><span class="line">temp=input(<span class="string">"不妨猜一下现在可能出现的是哪个数字："</span>)</span><br><span class="line">guess=int(temp)</span><br><span class="line"><span class="keyword">while</span> guess!=num <span class="keyword">and</span> i!=<span class="number">0</span>:<span class="comment">#联合条件</span></span><br><span class="line">    i=i<span class="number">-1</span><span class="comment">#有三次机会</span></span><br><span class="line">    <span class="comment"># print("i=",i)</span></span><br><span class="line">    temp=input(<span class="string">"猜错了请重新输入："</span>)</span><br><span class="line">    guess=int(temp)</span><br><span class="line">    <span class="keyword">if</span> guess==num:</span><br><span class="line">        print(<span class="string">"猜对了！"</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> guess&lt;num:</span><br><span class="line">           print(<span class="string">"猜小了，正确答案是"</span>,num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"猜大了，正确答案是"</span>,num)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'游戏结束'</span>)</span><br></pre></td></tr></table></figure><h3 id="打飞机"><a href="#打飞机" class="headerlink" title="打飞机"></a>打飞机</h3><p>实现逻辑：</p><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Python" scheme="http://hugenye.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>面试题</title>
    <link href="http://hugenye.github.io/2019/09/22/interview/"/>
    <id>http://hugenye.github.io/2019/09/22/interview/</id>
    <published>2019-09-22T13:34:45.000Z</published>
    <updated>2020-08-02T11:05:31.921Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="杭州智库"><a href="#杭州智库" class="headerlink" title="杭州智库"></a><strong>杭州智库</strong></h2><p>1      set集合的底层结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">红黑树</span><br></pre></td></tr></table></figure><p>2       hashmap的底层结构 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">底层结构是hash表数据结构，可以存入null键和null值，该集合线程不同步，效率较高，代替hashTable。实际上是一个“链表的数组”的数据结构。</span><br></pre></td></tr></table></figure><p>3      案例 图片上传的优化方法</p><p>4      Redis有几种数据类型，分别是什么？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5种，分别是String、list、set、hash、sort set；</span><br><span class="line">string 字符串（可以为整形、浮点型和字符串，统称为元素）</span><br><span class="line">list 列表（实现队列,元素不唯一，先入先出原则）</span><br><span class="line">set 集合（各不相同的元素）</span><br><span class="line">hash hash散列值（hash的key必须是唯一的）</span><br><span class="line">sort set 有序集合</span><br></pre></td></tr></table></figure><p>5     Mysql是什么锁机制  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">行锁</span><br></pre></td></tr></table></figure><p>6    联合索引<br>$$<br>实例问题：有ABC联合的索引，那么哪种情况会触发联合索引。<br>1，AB      2.BC    3.AC   4.CBA<br>$$<br>本文主要总结查询语句触发联合索引（索引定义中至少包含两个索引列）的几种条件。</p><p>示例如下。首先创建表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> E (e1 <span class="built_in">INT</span>, e2 <span class="built_in">VARCHAR</span>(<span class="number">9</span>), e3 <span class="built_in">INT</span>, PRIMARY <span class="keyword">KEY</span>(e1, e3));</span><br></pre></td></tr></table></figure><p>这样就建立了一个联合索引：e1,e3</p><p>触发联合索引是有条件的：</p><p><strong>1</strong>、使用联合索引的全部索引键，可触发索引的使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：SELECT E.* FROM E WHERE E.e1=1 AND E.e3=2</span><br></pre></td></tr></table></figure><p><strong>2</strong>、使用联合索引的前缀部分索引键，如<strong><strong>“key_part_1</strong></strong>常量<strong><strong>”</strong></strong>，可触发索引的使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：SELECT E.* FROM E WHERE E.e1=1</span><br></pre></td></tr></table></figure><p>【注意】 </p><p><strong>3</strong>、使用部分索引键，但不是联合索引的前缀部分，如<strong><strong>“key_part_2</strong></strong>常量<strong><strong>”</strong></strong>，不可触发索引的使用。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> E.* <span class="keyword">FROM</span> E <span class="keyword">WHERE</span> E.e3=<span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>4</strong>、使用联合索引的全部索引键，但索引键不是<strong><strong>AND</strong></strong>操作，不可触发索引的使用。</p><h2 id="罗万信息笔试题"><a href="#罗万信息笔试题" class="headerlink" title="罗万信息笔试题"></a>罗万信息笔试题</h2><ol><li><p>==和equals的区别</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">　1）对于==，比较的是值是否相等</span><br><span class="line"></span><br><span class="line">            如果作用于基本数据类型的变量，则直接比较其存储的 “值”是否相等；</span><br><span class="line"></span><br><span class="line">　　　　如果作用于引用类型的变量，则比较的是所指向的对象的地址</span><br><span class="line"></span><br><span class="line">　　2）对于equals方法，注意：equals方法不能作用于基本数据类型的变量，equals继承Object类，比较的是是否是同一个对象</span><br><span class="line"></span><br><span class="line">　　　　如果没有对equals方法进行重写，则比较的是引用类型的变量所指向的对象的地址；</span><br><span class="line"></span><br><span class="line">　　　　诸如String、Date等类对equals方法进行了重写的话，比较的是所指向的对象的内容。</span><br><span class="line">原文链接：https://blog.csdn.net/qq_27471405/article/details/81010094</span><br></pre></td></tr></table></figure></li><li><p>abstract class和interface 的区别</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">从形态上看</span><br><span class="line">抽象类可以给出一些成员的实现，接口却不包含成员的实现；</span><br><span class="line">抽象类的抽象成员可被子类部分实现，接口的成员需要实现类完全实现；</span><br><span class="line">一个类只能继承一个抽象类，但可实现多个接口等等。</span><br><span class="line"></span><br><span class="line">如何区分</span><br><span class="line">1.类是对对象的抽象，抽象类是对类的抽象；</span><br><span class="line">  接口是对行为的抽象。</span><br><span class="line">2.若行为跨越不同类的对象，可使用接口；</span><br><span class="line">  对于一些相似的类对象，用继承抽象类。</span><br><span class="line">3.抽象类是从子类中发现了公共的东西，泛化出父类，然后子类继承父类；</span><br><span class="line">  接口是根本不知子类的存在，方法如何实现还不确认，预先定义。</span><br><span class="line">原文链接：https://blog.csdn.net/MrBaymax/article/details/84328918</span><br></pre></td></tr></table></figure></li><li><blockquote><p>怎么唤醒一个阻塞的线程</p></blockquote><p>如果线程是因为调用了wait()、sleep()或者join()方法而导致的阻塞，可以中断线程，并且通过抛出InterruptedException来唤醒它；如果线程遇到了IO阻塞，无能为力，因为IO是操作系统实现的，Java代码并没有办法直接接触到操作系统。</p><p>​</p></li><li><p>String,StringBuffer和StringBuilder的区别；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1 .三者在执行速度方面的比较：StringBuilder &gt;  StringBuffer  &gt;  String</span><br><span class="line">2 .String &lt;（StringBuffer，StringBuilder）的原因</span><br><span class="line">String：字符串常量</span><br><span class="line">StringBuffer：字符串常量</span><br><span class="line">StringBuilder：字符串常量</span><br><span class="line">StringBuilder：线程非安全的</span><br><span class="line">StringBuffer：线程安全的</span><br><span class="line">当我们在字符串缓冲去被多个线程使用是，JVM不能保证StringBuilder的操作是安全的，虽然他的速度最快，但是可以保证StringBuffer是可以正确操作的。</span><br><span class="line">当然大多数情况下就是我们是在单线程下进行的操作，所以大多数情况下是建议用StringBuilder而不用StringBuffer的，就是速度的原因。</span><br><span class="line">对于三者使用的总结：  1.如果要操作少量的数据用 = String</span><br><span class="line">                   2.单线程操作字符串缓冲区 下操作大量数据 = StringBuilder</span><br><span class="line">                   3.多线程操作字符串缓冲区 下操作大量数据 = StringBuffer</span><br></pre></td></tr></table></figure></li><li><p>实现多线程有几种方法？分别是什么？实现线程同步有几种方法，分别是什么？</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">实现多线程有三种方法：</span><br><span class="line">1.继承thread类，重写run方法；</span><br><span class="line">2.实现Runnable接口；</span><br><span class="line">3.实现Callable接口。</span><br><span class="line">实现线程同步有五种方法：</span><br><span class="line">1.同步方法（synchronized关键字修饰的方法）；</span><br><span class="line">2.同步代码块（synchronized关键字修饰的语句块）；</span><br><span class="line">3.使用特殊域变量（volatile）实现线程同步；</span><br><span class="line">4.使用重入锁实现线程同步（ReenreantLock）；</span><br><span class="line">5.使用局部变量实现线程同步（ThreadLocal ）。</span><br><span class="line">原文链接：</span><br><span class="line">https://www.cnblogs.com/jiansen/p/7351872.html</span><br></pre></td></tr></table></figure><h2 id="用友笔试题"><a href="#用友笔试题" class="headerlink" title="用友笔试题"></a>用友笔试题</h2><ol><li><p>Java语言中，处理IO的方式都有<strong><strong>_ , _</strong></strong>和____三种。(NIO,BIO,AIO)</p></li><li><p>求交换两个变量的值，不使用第三个变量。即a=3,b=5,交换之后a=5,b=3; ？</p><p>看到这个题在没有考虑必须用JAVA的情况下，我用了C语言的移位的骚操作（转化为二进制3=011，5=101），面试官都笑了。</p><p>百度了一下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//有两种解法, 一种用算术算法, 一种用^(异或) </span></span><br><span class="line">a = a + b; </span><br><span class="line">b = a - b; </span><br><span class="line">a = a - b; </span><br><span class="line">or </span><br><span class="line">a = a^b;<span class="comment">// 只能对int,char.. </span></span><br><span class="line">b = a^b; </span><br><span class="line">a = a^b; </span><br><span class="line">or </span><br><span class="line">a ^= b ^= a;</span><br></pre></td></tr></table></figure></li><li><p>求两个字符串的最长公共字符串</p><p>​</p></li><li><p>数据库笔试题</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br></pre></td><td class="code"><pre><span class="line">Student(Sid,Sname,Sage,Ssex)学生表</span><br><span class="line">Sid：学号</span><br><span class="line">Sname：学生姓名</span><br><span class="line">Sage：学生年龄</span><br><span class="line">Ssex：学生性别</span><br><span class="line">Course(Cid,Cname,T<span class="comment">#)课程表</span></span><br><span class="line">Cid：课程编号</span><br><span class="line">Cname：课程名称</span><br><span class="line">Tid：教师编号</span><br><span class="line">SC(Sid,Cid,score)成绩表</span><br><span class="line">Sid：学号</span><br><span class="line">Cid：课程编号</span><br><span class="line">score：成绩</span><br><span class="line">Teacher(Tid,Tname)教师表</span><br><span class="line">Tid：教师编号：</span><br><span class="line">Tname：教师名字</span><br><span class="line">问题：</span><br><span class="line"></span><br><span class="line">1、查询“001”课程比“002”课程成绩高的所有学生的学号</span><br><span class="line"><span class="keyword">select</span> a.sid <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,score <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'001'</span>)a,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,score <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'002'</span>)b </span><br><span class="line"><span class="keyword">where</span> a.sid = b.sid <span class="keyword">and</span> a.score&gt;b.score;</span><br><span class="line">2、查询平均成绩大于60分的同学的学号和平均成绩</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) <span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> </span><br><span class="line"><span class="keyword">having</span> <span class="keyword">avg</span>(score)&gt;<span class="number">60</span>;</span><br><span class="line">3、查询所有同学的学号、姓名、选课数、总成绩</span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname,count_cid <span class="keyword">as</span> 选课数, </span><br><span class="line">sum_score  <span class="keyword">as</span> 总成绩</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">count</span>(cid) <span class="keyword">as</span> count_cid,<span class="keyword">sum</span>(score) <span class="keyword">as</span> sum_score </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> )sc</span><br><span class="line"><span class="keyword">on</span> s.sid = sc.sid;</span><br><span class="line">4、查询姓‘李’的老师的个数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(tname)</span><br><span class="line"><span class="keyword">from</span> teacher </span><br><span class="line"><span class="keyword">where</span> tname <span class="keyword">like</span> <span class="string">'李%'</span>;</span><br><span class="line">5、查询没有学过“叶平”老师可的同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">where</span> s.sid <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">DISTINCT</span> <span class="keyword">sid</span> </span><br><span class="line">    <span class="keyword">from</span> sc <span class="keyword">as</span> sc </span><br><span class="line">    <span class="keyword">where</span> sc.cid <span class="keyword">in</span> (</span><br><span class="line">        <span class="keyword">select</span> cid </span><br><span class="line">        <span class="keyword">from</span> course <span class="keyword">as</span> c </span><br><span class="line">        <span class="keyword">left</span> <span class="keyword">join</span> teacher <span class="keyword">as</span> t <span class="keyword">on</span> c.tid = t.tid </span><br><span class="line">        <span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>)</span><br><span class="line">);</span><br><span class="line">6、查询学过“叶平”老师所教的所有课的同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">where</span> s.sid <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">distinct</span> sc.sid </span><br><span class="line">  <span class="keyword">from</span> sc <span class="keyword">as</span> sc </span><br><span class="line">  <span class="keyword">where</span> sc.cid <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> cid </span><br><span class="line">    <span class="keyword">from</span> course <span class="keyword">as</span> c </span><br><span class="line">    <span class="keyword">left</span> <span class="keyword">join</span> teacher <span class="keyword">as</span> t <span class="keyword">on</span> c.tid = t.tid </span><br><span class="line">    <span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>)</span><br><span class="line">        <span class="keyword">group</span> <span class="keyword">by</span> sc.sid </span><br><span class="line">    <span class="keyword">HAVING</span> <span class="keyword">count</span>(cid)=</span><br><span class="line">    (<span class="keyword">select</span> <span class="keyword">count</span>(cid) </span><br><span class="line">     <span class="keyword">from</span> course <span class="keyword">as</span> c <span class="keyword">left</span> <span class="keyword">join</span> teacher <span class="keyword">as</span> t <span class="keyword">on</span> c.tid = t.tid </span><br><span class="line">     <span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>)</span><br><span class="line">);</span><br><span class="line">7、查询学过“011”并且也学过编号“002”课程的同学的学号、姓名：</span><br><span class="line"><span class="keyword">SELECT</span> s.sid,s.sname </span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">as</span> sc <span class="keyword">on</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">where</span> sc.cid = <span class="string">'001'</span></span><br><span class="line"><span class="keyword">and</span> <span class="keyword">EXISTS</span>(</span><br><span class="line">  <span class="keyword">select</span> * <span class="keyword">from</span> sc <span class="keyword">as</span> sc_2 </span><br><span class="line">  <span class="keyword">where</span> sc.sid = sc_2.sid </span><br><span class="line">  <span class="keyword">and</span> sc_2.cid=<span class="string">'002'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">as</span> sc </span><br><span class="line"><span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> sc.cid = <span class="string">'001'</span></span><br><span class="line"><span class="keyword">and</span> s.sid <span class="keyword">in</span> (</span><br><span class="line">  <span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">as</span> sc_2 </span><br><span class="line">  <span class="keyword">where</span> sc_2.cid=<span class="string">'002'</span> </span><br><span class="line">  <span class="keyword">and</span> sc_2.sid = sc.sid);</span><br><span class="line">8、查询课程编号“002”的成绩比课程编号“001”课程低的所有同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname</span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> student.sid,student.sname,score,</span><br><span class="line">     (<span class="keyword">select</span> score <span class="keyword">from</span> sc <span class="keyword">as</span> sc_2 </span><br><span class="line">      <span class="keyword">where</span> sc_2.sid = student.sid </span><br><span class="line">      <span class="keyword">and</span> sc_2.cid = <span class="string">'002'</span>) <span class="keyword">as</span> score2 </span><br><span class="line">      <span class="keyword">from</span> student,sc </span><br><span class="line">      <span class="keyword">where</span> student.sid=sc.sid <span class="keyword">and</span> cid = <span class="string">'001'</span>) s_2</span><br><span class="line"><span class="keyword">where</span> score2&lt;score;</span><br><span class="line">9、查询所有课程成绩小于60的同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> s.sid </span><br><span class="line"><span class="keyword">from</span> student s,sc </span><br><span class="line"><span class="keyword">where</span> s.sid=sc.sid <span class="keyword">and</span> score&gt;<span class="number">60</span> );</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname</span><br><span class="line"><span class="keyword">from</span> student s</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">not</span> <span class="keyword">EXISTS</span> (</span><br><span class="line"><span class="keyword">select</span> s.sid <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> sc.sid = s.sid <span class="keyword">and</span> sc.score&gt;<span class="number">60</span>);</span><br><span class="line">10、查询没有学全所有课的同学的学号、姓名：</span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> student s ,sc sc </span><br><span class="line"><span class="keyword">where</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sc.cid)&lt;(</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(cid) </span><br><span class="line"><span class="keyword">from</span> course);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> student s </span><br><span class="line"><span class="keyword">right</span> <span class="keyword">join</span> sc sc <span class="keyword">on</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sc.cid)&lt;</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(cid) <span class="keyword">from</span> course);</span><br><span class="line">11、查询至少有一门课与学号为“1001”同学所学相同的同学的学号和姓名：</span><br><span class="line"><span class="keyword">select</span> student.sid,sname</span><br><span class="line"><span class="keyword">from</span> student,sc </span><br><span class="line"><span class="keyword">where</span> student.sid = sc.sid</span><br><span class="line"><span class="keyword">and</span> cid <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> cid <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1001'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> s.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> sc sc <span class="keyword">left</span> <span class="keyword">join</span> student <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> sc.cid <span class="keyword">in</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1001'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sc_1.sid,s.sname</span><br><span class="line"><span class="keyword">from</span> sc sc_1 <span class="keyword">left</span> <span class="keyword">join</span> student <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> sc_1.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> </span><br><span class="line"><span class="keyword">exists</span> (<span class="keyword">select</span> sc_2.cid <span class="keyword">from</span> sc <span class="keyword">as</span> sc_2 </span><br><span class="line"><span class="keyword">where</span> sc_1.cid = sc_2.cid </span><br><span class="line"><span class="keyword">and</span> sc_2.sid = <span class="string">'1001'</span>);</span><br><span class="line">12、查询至少学过学号为“001”同学所有一门课的其他同学学号和姓名；</span><br><span class="line">13、把“SC”表中“叶平”老师教的课的成绩都更改为此课程的平均成绩：</span><br><span class="line"><span class="keyword">update</span> sc <span class="keyword">set</span> score = </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">avg</span>(sc_2.score) <span class="keyword">from</span> sc sc_2  </span><br><span class="line"><span class="keyword">where</span> sc_2.cid = sc.cid)</span><br><span class="line"><span class="keyword">where</span> cid <span class="keyword">in</span> </span><br><span class="line">(<span class="keyword">select</span> c.cid <span class="keyword">from</span> course c </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> teacher t <span class="keyword">on</span> t.tid = c.tid </span><br><span class="line"><span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>);</span><br><span class="line">14、查询和“1002”号的同学学习的课程完全相同的其他同学学号和姓名：</span><br><span class="line"><span class="keyword">select</span> sc_1.sid </span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1002'</span>)a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc sc_1 <span class="keyword">on</span> a.cid = sc_1.cid</span><br><span class="line"><span class="keyword">where</span> sc_1.sid&lt;&gt;<span class="string">'1002'</span> </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc_1.sid </span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sc_1.cid) = </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">count</span>(cid) <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1002'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> a.sid,s.sname <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">GROUP_CONCAT</span>(cid <span class="keyword">order</span> <span class="keyword">by</span> cid separator <span class="string">','</span>) <span class="keyword">as</span> cid_str </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span>=<span class="string">'1002'</span>)b,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">GROUP_CONCAT</span>(cid <span class="keyword">order</span> <span class="keyword">by</span> cid separator <span class="string">','</span>) <span class="keyword">as</span> cid_str </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>)a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s </span><br><span class="line"><span class="keyword">on</span> a.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> a.cid_str = b.cid_str <span class="keyword">and</span> a.sid&lt;&gt;<span class="string">'1002'</span>;</span><br><span class="line">15、删除学习“叶平”老师课的SC表记录：</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">WHERE</span></span><br><span class="line">cid <span class="keyword">in</span> (</span><br><span class="line"><span class="keyword">select</span> c.cid <span class="keyword">from</span> course c </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> teacher t <span class="keyword">on</span> c.tid=t.tid </span><br><span class="line"><span class="keyword">where</span> t.tname = <span class="string">'叶平'</span>);</span><br><span class="line">16、向SC表中插入一些记录，这些记录要求符合以下条件：没有上过编号“003”课程的同学学号、002号课的平均成绩：</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> sc <span class="keyword">select</span> <span class="keyword">sid</span>,<span class="string">'002'</span>,</span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">avg</span>(score) <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'0022'</span>)</span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'002'</span>);</span><br><span class="line">17、按平均成绩从高到低显示所有学生的“数据库”、“企业管理”、“英语”三门的课程成绩，按如下形式显示：学生ID，数据库，企业管理，英语，有效课程数，有效平均分：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span> <span class="keyword">as</span> 学生<span class="keyword">id</span>,</span><br><span class="line">(<span class="keyword">SELECT</span> score <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> sc.sid = t.sid <span class="keyword">and</span> cid=<span class="string">'004'</span>) <span class="keyword">as</span> 数据库,</span><br><span class="line">(<span class="keyword">select</span> score <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> sc.sid = t.sid <span class="keyword">and</span> cid=<span class="string">'001'</span>) <span class="keyword">as</span> 企业管理,</span><br><span class="line">(<span class="keyword">select</span> score <span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> sc.sid = t.sid <span class="keyword">and</span> cid=<span class="string">'015'</span>) <span class="keyword">as</span> 英语,</span><br><span class="line"><span class="keyword">count</span>(cid) <span class="keyword">as</span> 有效课程数, <span class="keyword">avg</span>(t.score) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> t </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(t.score);</span><br><span class="line">18、查询各科成绩最高和最低的分：以如下的形式显示：课程ID，最高分，最低分</span><br><span class="line"><span class="keyword">select</span> l.cid <span class="keyword">as</span> 课程<span class="keyword">id</span>,l.score <span class="keyword">as</span> 最高分,</span><br><span class="line">r.score <span class="keyword">as</span> 最低分</span><br><span class="line"><span class="keyword">from</span> sc l,sc r</span><br><span class="line"><span class="keyword">where</span> l.cid = r.cid</span><br><span class="line"><span class="keyword">and</span> l.score = </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">max</span>(t.score) <span class="keyword">from</span> sc t </span><br><span class="line"><span class="keyword">where</span> l.cid = t.cid <span class="keyword">group</span> <span class="keyword">by</span> t.cid)</span><br><span class="line"><span class="keyword">and</span> r.score = (<span class="keyword">select</span> <span class="keyword">min</span>(t.score) <span class="keyword">from</span> sc t </span><br><span class="line"><span class="keyword">where</span> r.cid = t.cid <span class="keyword">group</span> <span class="keyword">by</span> t.cid)</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> l.cid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> cid <span class="keyword">as</span> 课程<span class="keyword">id</span>,<span class="keyword">max</span>(score) <span class="keyword">as</span> 最高分,</span><br><span class="line"><span class="keyword">min</span>(score) <span class="keyword">as</span> 最低分</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid;</span><br><span class="line">19、按各科平均成绩从低到高和及格率的百分数从高到低顺序：</span><br><span class="line"><span class="keyword">SELECT</span> t.cid <span class="keyword">as</span> 课程号,</span><br><span class="line">c.cname <span class="keyword">as</span> 课程名,</span><br><span class="line"><span class="keyword">COALESCE</span>(<span class="keyword">avg</span>(score),<span class="number">0</span>) <span class="keyword">as</span> 平均成绩,</span><br><span class="line"><span class="number">100</span>*<span class="keyword">sum</span>(<span class="keyword">case</span> </span><br><span class="line"><span class="keyword">when</span> <span class="keyword">COALESCE</span>(score,<span class="number">0</span>)&gt;=<span class="number">60</span> </span><br><span class="line"><span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">count</span>(*) <span class="keyword">as</span> 及格百分数</span><br><span class="line"><span class="keyword">from</span> sc t</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course c </span><br><span class="line"><span class="keyword">on</span> t.cid = c.cid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> t.cid</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">100</span>*<span class="keyword">sum</span>(<span class="keyword">case</span> </span><br><span class="line"><span class="keyword">when</span> <span class="keyword">COALESCE</span>(score,<span class="number">0</span>)&gt;=<span class="number">60</span> </span><br><span class="line"><span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">END</span>)/<span class="keyword">count</span>(*);</span><br><span class="line">20、查询如下课程平均成绩和及格率的百分数(用”1行”显示): 企业管理（001），马克思（002），OO&amp;UML （003），数据库（004）：</span><br><span class="line">21、查询不同老师所教不同课程平均分从高到低显示：</span><br><span class="line"><span class="keyword">select</span> t.tid <span class="keyword">as</span> 教师<span class="keyword">id</span>,</span><br><span class="line">t.tname <span class="keyword">as</span> 教师姓名,</span><br><span class="line">sc.cid <span class="keyword">as</span> 课程<span class="keyword">id</span>,</span><br><span class="line"><span class="keyword">avg</span>(score) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> sc</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> course c <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> teacher t <span class="keyword">on</span> c.tid = t.tid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.cid </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(sc.score) <span class="keyword">desc</span>;</span><br><span class="line">22、查询如下课程成绩第3名到第6名的学生成绩单：企业管理(001)，马克思(002)，UML(003)，数据库(004)：</span><br><span class="line">23、统计下列各科成绩，各分数段人数：课程ID，课程名称，[100-85],[85-70],[70-60],[ 小于60] ：</span><br><span class="line"><span class="keyword">select</span> sc.cid <span class="keyword">as</span> 课程<span class="keyword">id</span>,cname <span class="keyword">as</span> 课程名称,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score <span class="keyword">between</span> <span class="number">85</span> <span class="keyword">and</span> <span class="number">100</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> <span class="string">'[100-85]'</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score <span class="keyword">between</span> <span class="number">70</span> <span class="keyword">and</span> <span class="number">85</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> <span class="string">'[85-70]'</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score <span class="keyword">between</span> <span class="number">60</span> <span class="keyword">and</span> <span class="number">70</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> <span class="string">'[70-60]'</span>,</span><br><span class="line"><span class="keyword">sum</span>(<span class="keyword">case</span> <span class="keyword">when</span> score&lt;<span class="number">60</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) <span class="keyword">as</span> <span class="string">'[60-0]'</span></span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> sc </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course <span class="keyword">as</span> c</span><br><span class="line"><span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.cid;</span><br><span class="line">24、查询学生平均成绩及其名次：</span><br><span class="line"><span class="keyword">select</span> <span class="number">1</span>+(<span class="keyword">select</span> <span class="keyword">count</span>(<span class="keyword">distinct</span> 平均成绩) </span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) <span class="keyword">as</span> 平均成绩 </span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>)t1 </span><br><span class="line"><span class="keyword">where</span> 平均成绩&gt;t2.平均成绩) <span class="keyword">as</span> 名次,</span><br><span class="line"><span class="keyword">sid</span> <span class="keyword">as</span> 学生学号,平均成绩 </span><br><span class="line"><span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(score) 平均成绩 <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>) <span class="keyword">as</span> t2</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> 平均成绩 <span class="keyword">desc</span>;</span><br><span class="line">25、查询各科成绩前三名的记录（不考虑成绩并列情况）：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,cid,score</span><br><span class="line"><span class="keyword">from</span> sc sc_1</span><br><span class="line"><span class="keyword">where</span> (</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="number">3</span>) <span class="keyword">from</span> sc sc_2 </span><br><span class="line"><span class="keyword">where</span> sc_1.cid = sc_2.cid </span><br><span class="line"><span class="keyword">and</span> sc_2.score&gt;=sc_1.score)&lt;=<span class="number">2</span> </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> sc_1.cid</span><br><span class="line">);</span><br><span class="line">26、查询每门课程被选修的学生数：</span><br><span class="line"><span class="keyword">select</span> cid, <span class="keyword">count</span>(<span class="keyword">sid</span>)</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid;</span><br><span class="line">27、查询出只选修一门课程的全部学生的学号和姓名：</span><br><span class="line"><span class="keyword">select</span> sc.sid,s.sname,</span><br><span class="line"><span class="keyword">count</span>(sc.cid) <span class="keyword">as</span> 课程数</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> sc</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student <span class="keyword">as</span> s</span><br><span class="line"><span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.sid</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(sc.cid)=<span class="number">1</span>;</span><br><span class="line">28、查询男生、女生人数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(ssex) <span class="keyword">as</span> 男生人数</span><br><span class="line"><span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> ssex</span><br><span class="line"><span class="keyword">having</span> ssex = <span class="string">'男'</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="number">2</span>) <span class="keyword">from</span> student</span><br><span class="line"><span class="keyword">where</span> ssex = <span class="string">'女'</span>;</span><br><span class="line">29、查询姓“张”的学生名单：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,sname</span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> sname <span class="keyword">like</span> <span class="string">'张%'</span>;</span><br><span class="line">30、查询同名同姓的学生名单，并统计同名人数：</span><br><span class="line"><span class="keyword">select</span> sname,<span class="keyword">count</span>(<span class="number">8</span>)</span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sname</span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(<span class="number">8</span>)&gt;<span class="number">1</span>;</span><br><span class="line">31、1981年出生的学生名单（注：student表中sage列的类型是datetime）:</span><br><span class="line">32、查询平均成绩大于85的所有学生的学号、姓名和平均成绩：</span><br><span class="line"><span class="keyword">select</span> s.sname,sc.sid,<span class="keyword">avg</span>(sc.score) <span class="keyword">as</span> 平均成绩</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> sc</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student <span class="keyword">as</span> s </span><br><span class="line"><span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> sc.sid </span><br><span class="line"><span class="keyword">having</span> <span class="keyword">avg</span>(sc.score)&gt;<span class="number">85</span>;</span><br><span class="line">33、查询每门课程的平均成绩，结果按平均成绩升序排序，平均成绩相同时，按课程号降序排列：</span><br><span class="line"><span class="keyword">select</span> cid,<span class="keyword">avg</span>(score)</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid</span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">avg</span>(score),cid <span class="keyword">desc</span>;</span><br><span class="line">34、查询课程名称为“数据库”，且分数低于60的学生名字和分数：</span><br><span class="line"><span class="keyword">select</span> c.cname,s.sid,s.sname,sc.score</span><br><span class="line"><span class="keyword">from</span> course c</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> sc <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> student s <span class="keyword">on</span> s.sid = sc.sid</span><br><span class="line"><span class="keyword">where</span> c.cname = <span class="string">'数据库'</span> <span class="keyword">and</span> sc.score&lt;<span class="number">60</span>;</span><br><span class="line">35、查询所有学生的选课情况：</span><br><span class="line"><span class="keyword">select</span> sc.sid,sc.cid,s.sname,c.cname</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> course c <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s <span class="keyword">on</span> sc.sid = s.sid;</span><br><span class="line">36、查询任何一门课程成绩在70分以上的姓名、课程名称和分数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> s.sid,s.sname,sc.cid,sc.score</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s <span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course c <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">where</span> sc.score&gt;<span class="number">70</span>;</span><br><span class="line">37、查询不及格的课程，并按课程号从大到小的排列：</span><br><span class="line"><span class="keyword">select</span> cid</span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">where</span> score&lt;<span class="number">60</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> cid;</span><br><span class="line">38、查询课程编号为“003”且课程成绩在80分以上的学生的学号和姓名：</span><br><span class="line"><span class="keyword">select</span> sc.sid,s.sname </span><br><span class="line"><span class="keyword">from</span> sc </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s <span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">where</span> sc.cid = <span class="string">'003'</span> <span class="keyword">and</span> sc.score&gt;<span class="number">80</span>;</span><br><span class="line">39、求选了课程的学生人数：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(<span class="number">2</span>) <span class="keyword">from</span> </span><br><span class="line">(<span class="keyword">select</span> <span class="keyword">distinct</span> <span class="keyword">sid</span> <span class="keyword">from</span> sc)a;</span><br><span class="line">40、查询选修“叶平”老师所授课程的学生中，成绩最高的学生姓名及其成绩：</span><br><span class="line"><span class="keyword">select</span> s.sname,sc.score</span><br><span class="line"><span class="keyword">from</span> sc sc </span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> student s <span class="keyword">on</span> sc.sid = s.sid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> course c <span class="keyword">on</span> sc.cid = c.cid</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> teacher t <span class="keyword">on</span> c.tid = t.tid</span><br><span class="line"><span class="keyword">where</span> t.tname = <span class="string">'叶平'</span></span><br><span class="line"><span class="keyword">and</span> sc.score = (</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">max</span>(score) </span><br><span class="line"><span class="keyword">from</span> sc sc_1 </span><br><span class="line"><span class="keyword">where</span> sc.cid = sc_1.cid);</span><br><span class="line">41、查询各个课程及相应的选修人数：</span><br><span class="line"><span class="keyword">select</span> cid,<span class="keyword">count</span>(*) <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cid;</span><br><span class="line">42、查询不同课程成绩相同的学生和学号、课程号、学生成绩：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">DISTINCT</span> a.sid,a.cid,a.score</span><br><span class="line"><span class="keyword">from</span> sc <span class="keyword">as</span> a ,sc <span class="keyword">as</span> b </span><br><span class="line"><span class="keyword">where</span> a.score = b.score</span><br><span class="line"><span class="keyword">and</span> a.cid &lt;&gt; b.cid;</span><br><span class="line">43、查询每门课程成绩最好的前两名：</span><br><span class="line"><span class="keyword">SELECT</span> s1.* <span class="keyword">FROM</span> SC s1 <span class="keyword">WHERE</span></span><br><span class="line">(</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>) <span class="keyword">FROM</span> SC s2 <span class="keyword">WHERE</span></span><br><span class="line">s1.cid=s2.cid <span class="keyword">AND</span> s2.score&gt;=s1.score</span><br><span class="line">)&lt;=<span class="number">2</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> s1.cid,s1.score <span class="keyword">DESC</span>;</span><br><span class="line">44、统计每门课程的学生选修人数(超过10人的课程才统计)。要求输出课程号和选修人数，查询结果按人数降序排序，若人数相同，按课程号升序排序：</span><br><span class="line"><span class="keyword">select</span> cid <span class="keyword">as</span> 课程号,<span class="keyword">count</span>(<span class="number">8</span>) <span class="keyword">as</span> 选修人数</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> cid</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">count</span>(<span class="keyword">sid</span>)&gt;<span class="number">10</span></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">count</span>(<span class="number">8</span>) <span class="keyword">desc</span>,cid;</span><br><span class="line">45、检索至少选修两门课程的学生学号：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span></span><br><span class="line"><span class="keyword">having</span> <span class="keyword">count</span>(<span class="number">8</span>)&gt;=<span class="number">2</span>;</span><br><span class="line">46、查询全部学生选修的课程和课程号和课程名：</span><br><span class="line"><span class="keyword">select</span> cid,cname</span><br><span class="line"><span class="keyword">from</span> course </span><br><span class="line"><span class="keyword">where</span> cid <span class="keyword">in</span> (<span class="keyword">select</span> cid <span class="keyword">from</span> sc <span class="keyword">group</span> <span class="keyword">by</span> cid);</span><br><span class="line">47、查询没学过”叶平”老师讲授的任一门课程的学生姓名：</span><br><span class="line"><span class="keyword">select</span> sname </span><br><span class="line"><span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">not</span> <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">sid</span> </span><br><span class="line">    <span class="keyword">from</span> sc,course,teacher </span><br><span class="line">    <span class="keyword">where</span> course.tid = teacher.tid <span class="keyword">and</span> sc.cid = course.cid </span><br><span class="line">    <span class="keyword">and</span> teacher.tname=<span class="string">'叶平'</span></span><br><span class="line">);</span><br><span class="line">48、查询两门以上不及格课程的同学的学号以及其平均成绩：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,<span class="keyword">avg</span>(<span class="keyword">COALESCE</span>(score,<span class="number">0</span>))</span><br><span class="line"><span class="keyword">from</span> sc</span><br><span class="line"><span class="keyword">where</span> <span class="keyword">sid</span> <span class="keyword">in</span> (</span><br><span class="line">    <span class="keyword">select</span> <span class="keyword">sid</span> </span><br><span class="line">    <span class="keyword">from</span> sc </span><br><span class="line">    <span class="keyword">where</span> score&lt;<span class="number">60</span> </span><br><span class="line">    <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span> </span><br><span class="line">    <span class="keyword">having</span> <span class="keyword">count</span>(<span class="number">8</span>)&gt;<span class="number">2</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">sid</span>;</span><br><span class="line">49、检索“004”课程分数小于60，按分数降序排列的同学学号：</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">sid</span>,score <span class="keyword">from</span> sc <span class="keyword">where</span> cid=<span class="string">'004'</span> <span class="keyword">and</span> score&lt;<span class="number">60</span> <span class="keyword">order</span> <span class="keyword">by</span> score <span class="keyword">desc</span>;</span><br><span class="line">50、删除“002”同学的“001”课程的成绩：</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sc <span class="keyword">where</span> <span class="keyword">sid</span> = <span class="string">'002'</span><span class="keyword">and</span> cid = <span class="string">'001'</span>;</span><br></pre></td></tr></table></figure><h2 id="呆萝卜面试题"><a href="#呆萝卜面试题" class="headerlink" title="呆萝卜面试题"></a>呆萝卜面试题</h2><ol><li><p>list和map的区别？map的底层结构？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List：是存储单列数据的集合，存储的数据是有序并且是可以重复的</span><br><span class="line">Map：存储双列数据的集合，通过键值对存储数据，存储的数据是无序的，Key值不能重复，value值可以重复</span><br><span class="line">map的底层是由数组和链表组成。</span><br></pre></td></tr></table></figure></li><li><p>HashMap中通过key获取value源码剖析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>在一个长度为n的数组中插入一个元素的算法复杂度是多少？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">o(n)</span><br></pre></td></tr></table></figure></li><li><p>int、double、float的大小？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">一般情况下：</span><br><span class="line"></span><br><span class="line">32位编译器：</span><br><span class="line"></span><br><span class="line">char      short      int      long      float      double      指针</span><br><span class="line"></span><br><span class="line">   1            2           4         4            4              8       </span><br><span class="line"></span><br><span class="line">64位编译器：</span><br><span class="line"></span><br><span class="line">char      short      int      long      float      double      指针</span><br><span class="line"></span><br><span class="line">   1            2           4         8            4              8</span><br></pre></td></tr></table></figure></li><li><p>堆和栈的区别？<a href="https://jingyan.baidu.com/article/6c67b1d6a09f9a2786bb1e4a.html" target="_blank" rel="noopener">什么是“堆”,”栈”,”堆栈”,”队列”,它们的区别？</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">1.堆栈空间分配</span><br><span class="line"></span><br><span class="line"> ①栈（操作系统）：由操作系统自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。</span><br><span class="line"></span><br><span class="line"> ②堆（操作系统）： 一般由程序员分配释放， 若程序员不释放，程序结束时可能由OS回收，分配方式倒是类似于链表。</span><br><span class="line"></span><br><span class="line">2.堆栈缓存方式</span><br><span class="line"></span><br><span class="line">①栈使用的是一级缓存， 他们通常都是被调用时处于存储空间中，调用完毕立即释放。</span><br><span class="line"></span><br><span class="line">②堆则是存放在二级缓存中，生命周期由虚拟机的垃圾回收算法来决定（并不是一旦成为孤儿对象就能被回收）。所以调用这些对象的速度要相对来得低一些。</span><br><span class="line"></span><br><span class="line">3.堆栈数据结构区别</span><br><span class="line"></span><br><span class="line">①堆（数据结构）：堆可以被看成是一棵树，如：堆排序。</span><br><span class="line"></span><br><span class="line">②栈（数据结构）：一种先进后出的数据结构。</span><br></pre></td></tr></table></figure></li><li><p>mysql有那些存储引擎？哪一种支持事务？<a href="https://www.cnblogs.com/ray-mr-huang/p/9058053.html" target="_blank" rel="noopener">数据库事务</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在mysql中用的最多的存储引擎有：innodb，bdb，myisam ,memory 等。其中innodb和bdb支持事务而myisam等不支持事务。</span><br></pre></td></tr></table></figure></li><li><p>mysql的索引有哪些<a href="https://blog.csdn.net/liutong123987/article/details/79384395" target="_blank" rel="noopener">什么是索引？Mysql目前主要的几种索引类型</a>？优化索引的方法有哪些<a href="https://www.cnblogs.com/yyjie/p/7486975.html" target="_blank" rel="noopener">索引性能优化</a>？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">索引有：</span><br><span class="line">普通类型（CREATE INDEX)</span><br><span class="line">唯一索引，索引列的值必须唯一（CREATE UNIQUE INDEX)</span><br><span class="line">多列索引</span><br><span class="line">主键索引（PRIMARY KEY），一个表只能有一个</span><br><span class="line">全文索引（FULLTEXT INDEX），InnoDB 不支持</span><br><span class="line">索引的优化方法：</span><br><span class="line">非空字段 NOT NULL，Mysql 很难对空值作查询优化</span><br><span class="line">区分度高，离散度大，作为索引的字段值尽量不要有大量相同值</span><br><span class="line">索引的长度不要太长（比较耗费时间）</span><br></pre></td></tr></table></figure></li><li><p>二叉树的优势（查询速度快）</p></li><li><p>String IOC的理解<a href="https://blog.csdn.net/qq_35347459/article/details/70810725" target="_blank" rel="noopener">Spring中IOC与AOP的理解</a>？它是如何如何实现的（用了哪些设计模式）？</p><p><a href="https://www.cnblogs.com/superjt/p/4311577.html" target="_blank" rel="noopener">Spring的IOC原理[通俗解释一下]</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IOC也称控制反转，其实是和依赖注入的含义是一样的，就是把原先控制代码对象的生产由代码转换到IOC容器中去实现。作用是为了解耦，降低类之间的耦合度，其设计思想就是设计模式的工厂模式，不懂什么是工厂模式的点击此：。。。。。，我们并不需要知道其生产的具体过程，我们只要其产出的对象即可。其工作流程就是：在Spring容器启动的时候，Spring会把你在application.xml中配置好的bean都初始化，在你需要调用的时候，把已经初始化的bean分配给你要调用这些bean的类，而不用去创建一个对象的实例。</span><br><span class="line"></span><br><span class="line">1 工厂模式：BeanFactory、ApplicationContext创建中</span><br><span class="line">2 模板模式：BeanFactory、ApplicationContext实现中</span><br><span class="line">3 代理模式：在AOP实现中用到了JDK的动态代理</span><br><span class="line">4 策略模式：加载资源文件的方式；AOP实现中采用了两种不同的代理，如JDK代理和CGLIB代理</span><br><span class="line">5 单例模式：创建bean</span><br></pre></td></tr></table></figure></li><li><p>用过哪一些设计模式在项目中，如何在具体的项目中使用的？（一般单例经常被使用）</p></li></ol><h2 id="正方"><a href="#正方" class="headerlink" title="正方"></a>正方</h2><ol><li><p>一个叫 team 的表，里面只有一个字段name, 一共有4 条纪录，分别是a,b,c,d, 对应四个球对，现在四个球对进行比赛，用一条sql 语句显示所有可能的比赛组合.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  a.name,b.name <span class="keyword">from</span> team <span class="keyword">AS</span> a,team <span class="keyword">AS</span> b <span class="keyword">where</span> a.name&lt;b.name</span><br><span class="line"><span class="comment">--如果觉得顺序有些乱可以排一下序</span></span><br><span class="line"><span class="keyword">SELECT</span>  a.name,b.name <span class="keyword">from</span> team <span class="keyword">AS</span> a,team <span class="keyword">AS</span> b <span class="keyword">where</span> a.name&lt;b.name  <span class="keyword">ORDER</span> <span class="keyword">BY</span> a.name</span><br></pre></td></tr></table></figure></li><li><p>写一个ArrayList的动态代理类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> TestProxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> ArrayList&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;String&gt; listProxy=(List&lt;String&gt;) Proxy.newProxyInstance(list.getClass().getClassLoader(), list.getClass().getInterfaces(), <span class="keyword">new</span> InvocationHandler() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> method.invoke(list,args);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">       listProxy.add(<span class="string">"你好"</span>) ;</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="leetcode习题"><a href="#leetcode习题" class="headerlink" title="leetcode习题"></a>leetcode习题</h1></li></ol><h2 id="算法思想"><a href="#算法思想" class="headerlink" title="算法思想"></a>算法思想</h2><h3 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h3><p>题目：在有序组中找出两个数，是他们的和为target。</p><p>使用双面指针，一个指针指向较小的元素，一个指针指向较大的元素。指向较小元素的指针从头向尾遍历，指向较大元素的指针从尾向头遍历。</p><p>如果要判断sum==target，那么就可以等到要求的结果</p><p>如果sum&gt;target,移动较大的元素，使sum变小，</p><p>反之sum&lt;target，移动较小元素，是sum变大</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers,<span class="keyword">int</span> target)&#123;  </span><br><span class="line">  <span class="keyword">if</span>(numbers==<span class="keyword">null</span>) </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;  </span><br><span class="line">  <span class="keyword">int</span> i=<span class="number">0</span>;j=numbers.length-<span class="number">1</span>;  </span><br><span class="line">  <span class="keyword">while</span>(i&lt;j)&#123;    </span><br><span class="line">    <span class="keyword">int</span> sum=numbers[i]+numbers[j];    </span><br><span class="line">    <span class="keyword">if</span>(sum==target)&#123;        </span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;i+<span class="number">1</span>,j+<span class="number">1</span>&#125;;    </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(sum&lt;target)&#123;        </span><br><span class="line">      i++;    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      j++;</span><br><span class="line">    &#125;  </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps：时间空间复杂度–》判断一个算法的好坏</p><p>时间复杂度BigO</p><p><strong>大O表示法</strong>是算法的渐进时间复杂度</p><p>T(n)=O(f(n))—》f(n)代表代码执行的次数，大O表示正比例关系；</p><p>比如O(logN) </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line">  i=i*<span class="number">2</span>;  <span class="comment">//i*2 i++次后会越来越接近n ，设循环次数为k：2的k次方等于n==》k=log2n ，n取极限为，为logN</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>O(n)–单层for循环；</p><p>O(n^2)–双层for循环；</p><p>有特殊情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  i++;</span><br><span class="line">&#125;<span class="comment">//f(3n+1),n取极限，为O(n)</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">  i++;<span class="comment">//f(3n+1),n取极限，为O(n)</span></span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">    j++;</span><br><span class="line">  &#125;<span class="comment">//f(3n+1),n取极限，为O(n)</span></span><br><span class="line">&#125;<span class="comment">//两层循环，就是O(n^2) </span></span><br><span class="line">一个代码块是这个样子，T(n)=O(n^<span class="number">2</span>+n) ,n在这里取极限相当于常量，所以T(n)=O(n^<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>普通代码数据操作–O(1);</p><p>其它复杂度的指标有：</p><p>O(Big O) 最差情况</p><p>Ω(big Omega) 最好情况</p><p>θ(big theta) 一个算法区间</p><p>2、空间复杂度—》内存空间增长的趋势</p><p>常用的空间复杂度O(1)、O(n)、O(n^2)</p><p><strong>时间空间复杂度</strong>=时间和空间增长的趋势</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="面试" scheme="http://hugenye.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Bootstrap</title>
    <link href="http://hugenye.github.io/2019/07/13/bootstrap/"/>
    <id>http://hugenye.github.io/2019/07/13/bootstrap/</id>
    <published>2019-07-13T07:00:48.000Z</published>
    <updated>2020-08-19T08:08:53.521Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h4 id="1-Bootstrap是什么？"><a href="#1-Bootstrap是什么？" class="headerlink" title="1.Bootstrap是什么？"></a>1.Bootstrap是什么？</h4><p>​    一个用于快u开发web应用程序和网站的前端框架。Bootstrap是基于HTML、CSS、JAVASCRIPT 。</p><p>​    给我使用的感觉是对于掌握一般的前端知识就可以学会怎么去使用Bootstrap，它包含了功能强大的内置组件，易于定制，最重要的是它是开源的。</p><p>   工作中用到是Bootstrap3，学习在线文档<a href="https://v3.bootcss.com/" target="_blank" rel="noopener">https://v3.bootcss.com/</a></p><h4 id="2-如何使用"><a href="#2-如何使用" class="headerlink" title="2.如何使用"></a>2.如何使用</h4><p>可以选择在官网下载该文件包，或者使用在线工具库，但是要注意，在线的地址有可能会失效，有一次布局没了觉得很奇怪，查看页面代码发现我继承别人代码全部使用在线的工具库，瞬间心凉凉。为了保险起见还是自己下载个安心些。</p><p><em>注意:</em> Bootstrap插件全部依赖jQuery，必须在Bootstrap之前引入。</p><h4 id="3-如何使用它来布局"><a href="#3-如何使用它来布局" class="headerlink" title="3.如何使用它来布局"></a>3.如何使用它来布局</h4><p>作为一个前端不是特别好的开发，我用了Bootstrap可视化布局，个人感觉还不错。组件只要拖拽自己想要的样子就可以。<a href="https://www.runoob.com/try/bootstrap/layoutit/" target="_blank" rel="noopener">https://www.runoob.com/try/bootstrap/layoutit/</a></p><p>通过定义容器的大小，平分为12份（也有24份，23份的，取12份是一打，表示进阶完美的意思），再调整内外边距，最后结合媒体查询，制作出了强大的响应式网格系统。(可以通过重新编译LESS码源来修改12这个数值)。</p><p>1.数据行(.row)必须包含在容器(.container)中，以便赋予合适的对其方式和内边距(padding)。</p><p>2.在行(.row)中可以添加列(.column)，但列数之和不能超过平分的总列数，比如：12.</p><p>3.通过设置内边距(padding)从而创建列于列之间的间距。然后通过为第一列和最后一列设置负值的外距(margin)来抵消内距(padding)的影响。</p><p>4.不希望相邻的两个列紧靠近在一起，就用offset功能来实现。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap Template<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- HTML5 shim 和 Respond.js 是为了让 IE8 支持 HTML5 元素和媒体查询（media queries）功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 警告：通过 file:// 协议（就是直接将 html 页面拖拽到浏览器中）访问页面时 Respond.js 不起作用 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/html5shiv@3.7.3/dist/html5shiv.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">      &lt;script src="https://cdn.jsdelivr.net/npm/respond.js@1.4.2/dest/respond.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">    &lt;![endif]--&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row clearfix"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12 column"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line">                    h3. 这是一套可视化布局系统.</span><br><span class="line">                <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/jquery@1.12.4/dist/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-多种插件的应用"><a href="#4-多种插件的应用" class="headerlink" title="4.多种插件的应用"></a>4.多种插件的应用</h4><h5 id="4-1-Bootstrap-treeView-树形菜单的实际操作总结"><a href="#4-1-Bootstrap-treeView-树形菜单的实际操作总结" class="headerlink" title="4.1 Bootstrap-treeView 树形菜单的实际操作总结"></a>4.1 Bootstrap-treeView 树形菜单的实际操作总结</h5><p>1、资源引用</p><p><code>&lt;``script</code> <code>src=&quot;bootstrap-treeview.js&quot;&gt;</code>script``&gt;`</p><p>2、在一个dom元素绑定该组件</p><p><code>&lt;``div</code> <code>id=&quot;treeview1&quot;&gt;</code>div<code>&gt;&lt;</code>br``&gt;`</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#treeview1'</span>).treeview(&#123;</span><br><span class="line">data: getTree(), <span class="comment">// 获取数据节点</span></span><br><span class="line">levels: <span class="number">5</span>,<span class="comment">//节点层级数</span></span><br><span class="line">color: <span class="string">"#000"</span>,<span class="comment">//每一级通用的 节点字体颜色</span></span><br><span class="line">backColor: <span class="string">"#fff"</span>,<span class="comment">//每一级通用的 节点字背景色</span></span><br><span class="line">onhoverColor: <span class="string">"orange"</span>,<span class="comment">//选中浮动颜色</span></span><br><span class="line">borderColor: <span class="string">"red"</span>,<span class="comment">//设置组件的边框颜色; 设置showBorder为false，如果你不想要一个可见的边框</span></span><br><span class="line">showBorder: <span class="literal">false</span>,</span><br><span class="line">showTags: <span class="literal">true</span>,<span class="comment">//是否在每个节点的右侧显示标签。 其值必须在每个节点的数据结构中提供</span></span><br><span class="line"></span><br><span class="line">highlightSelected: <span class="literal">true</span>,<span class="comment">//是否突出显示选定的节点</span></span><br><span class="line">selectedColor: <span class="string">"#fff"</span>,<span class="comment">//设置选定节点的前景色</span></span><br><span class="line">selectedBackColor: <span class="string">"darkorange"</span>,<span class="comment">//设置选定节点的背景色</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>代码截取</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">**初始化数据</span><br><span class="line">$(<span class="string">'#treeview1'</span>).treeview(<span class="string">'collapseAll'</span>, &#123;  </span><br><span class="line">  data : treedata, </span><br><span class="line">  silent : <span class="literal">false</span><span class="comment">//设置初始化节点关闭    </span></span><br><span class="line">  &#125;);</span><br><span class="line"> **清空搜索选项**</span><br><span class="line"> $(<span class="string">'#treeview1'</span>).treeview(<span class="string">'clearSearch'</span>);</span><br><span class="line"> **查询功能</span><br><span class="line"> <span class="keyword">var</span> search = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line"><span class="keyword">var</span> result;</span><br><span class="line"><span class="comment">// 获取要搜索的信息</span></span><br><span class="line"><span class="keyword">var</span> pattern = $.trim($(<span class="string">'#input-search'</span>).val());  </span><br><span class="line"><span class="built_in">console</span>.log(pattern)</span><br><span class="line"><span class="comment">/*var len=0;</span></span><br><span class="line"><span class="comment">for (var i = 0; i &lt; pattern.length; i++) &#123;</span></span><br><span class="line"><span class="comment">if (pattern[i].match(/[^\x00-\xff]/ig) != null) //全角 </span></span><br><span class="line"><span class="comment">len += 2; //如果是全角，占用两个字节</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">len += 1; //半角占用一个字节</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">var</span> reg=<span class="regexp">/^[1-9]\d*$|^0$/</span>;</span><br><span class="line"><span class="keyword">if</span>(reg.test(pattern))&#123;</span><br><span class="line"><span class="built_in">window</span>.alert(<span class="string">"搜索内容不可以为纯数字"</span>);</span><br><span class="line">$(<span class="string">'#input-search'</span>).val(<span class="string">""</span>);</span><br><span class="line">clear();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">var</span> options = &#123;      </span><br><span class="line">ignoreCase: <span class="literal">true</span>,      <span class="comment">//忽略大小写</span></span><br><span class="line">exactMatch: <span class="literal">false</span>,    <span class="comment">//必须为精确的值</span></span><br><span class="line">revealResults: <span class="literal">true</span>   <span class="comment">//显示匹配的节点</span></span><br><span class="line">&#125;; </span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> results = $(<span class="string">'#treeview1'</span>).treeview(<span class="string">'search'</span>, [ pattern, options ]);</span><br><span class="line"><span class="comment">//var output = '&lt;p&gt;' + results.length + ' 匹配的搜索结果&lt;/p&gt;';  </span></span><br><span class="line">$.each(results, <span class="function"><span class="keyword">function</span> (<span class="params">index, result</span>) </span>&#123; </span><br><span class="line"><span class="built_in">console</span>.log(result)</span><br><span class="line">result.text += <span class="string">'&lt;p&gt;- &lt;span style="color:red;"&gt;'</span> + result.text + <span class="string">'&lt;/span&gt;&lt;/p&gt;'</span>; </span><br><span class="line"><span class="comment">//console.log(result.text);</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//$('#treediv').html(result.text);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>对treeview组件的操作参考：</p><p>bootstrap treeview树形菜单 动态扩展 连数据库 - 愿生命从容 - 博客园<a href="https://www.cnblogs.com/chenhtblog/p/8342534.htmlbootstrap-treeview" target="_blank" rel="noopener">https://www.cnblogs.com/chenhtblog/p/8342534.htmlbootstrap-treeview</a> 扩展addNode方法 动态添加子节点的方法 - CSDN博客<a href="https://blog.csdn.net/qq_25628235/article/details/51719917bootstrap" target="_blank" rel="noopener">https://blog.csdn.net/qq_25628235/article/details/51719917bootstrap</a> treeview 增删改的正确姿势 - CSDN博客<a href="https://blog.csdn.net/hotqin888/article/details/54798737/" target="_blank" rel="noopener">https://blog.csdn.net/hotqin888/article/details/54798737/</a></p><h5 id="4-2-Bootstrap-FileInput文件上传的使用"><a href="#4-2-Bootstrap-FileInput文件上传的使用" class="headerlink" title="4.2 Bootstrap FileInput文件上传的使用"></a>4.2 Bootstrap FileInput文件上传的使用</h5><p>html页面使用该插件上传图片并显示在轮播图中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span> <span class="attr">style</span>=<span class="string">"height:80%; overflow-y:scroll;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"input-b5"</span> <span class="attr">name</span>=<span class="string">"input-b5"</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">multiple</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JavaScript：删除图片必须要配置的两个属性initialPreview和initialPreviewConfig</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">init</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#input-b5"</span>).fileinput(&#123;</span><br><span class="line">          <span class="string">'theme'</span>: <span class="string">'fa'</span>,</span><br><span class="line">          showCaption:<span class="literal">true</span>,</span><br><span class="line">          showPreview :<span class="literal">true</span>, <span class="comment">//是否显示预览</span></span><br><span class="line">          overwriteInitial: <span class="literal">false</span>,<span class="comment">//不覆盖已存在的图片</span></span><br><span class="line">          validateInitialCount: <span class="literal">true</span>,</span><br><span class="line">          initialPreview:array,---&gt;预览时可以看到</span><br><span class="line">          language: <span class="string">'zh'</span>,</span><br><span class="line">          uploadExtraData:&#123;<span class="attr">pictitle</span>:<span class="built_in">JSON</span>.stringify(jsonstr)&#125;,</span><br><span class="line">          <span class="string">'uploadUrl'</span>: <span class="string">'/FileUpload'</span>,</span><br><span class="line">          uploadAsync: <span class="literal">false</span>,<span class="comment">//同步上传</span></span><br><span class="line">          allowedFileExtensions: [<span class="string">'png'</span>, <span class="string">'jpg'</span>,<span class="string">'gif'</span>],</span><br><span class="line">          hideThumbnailContent:<span class="literal">true</span>,</span><br><span class="line">          layoutTemplates :&#123;</span><br><span class="line">              <span class="comment">//actionDelete:'', //去除上传预览的缩略图中的删除图标</span></span><br><span class="line">              actionUpload:<span class="string">''</span>,<span class="comment">//去除上传预览缩略图中的上传图片；</span></span><br><span class="line">              <span class="comment">//actionZoom:''   //去除上传预览缩略图中的查看详情预览的缩略图标。</span></span><br><span class="line">          &#125;,</span><br><span class="line">          initialPreviewConfig:con,----&gt;预览时可以看到</span><br><span class="line">      &#125;)</span><br><span class="line">&#125;</span><br><span class="line">配置动态数据需要添加一个函数：</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getImg</span>(<span class="params">dat</span>)</span>&#123;<span class="comment">//获取图片信息</span></span><br><span class="line">  ........</span><br><span class="line"><span class="keyword">return</span> array,con;<span class="comment">//传递配置参数的值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置预览轮播图的界面设置</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">setimg</span>(<span class="params">dat</span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line">删除时添加的两个函数：</span><br><span class="line">$(<span class="string">'#input-b5'</span>).on(<span class="string">'filebeforedelete'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">$.confirm(&#123;</span><br><span class="line">title: <span class="string">'警告!'</span>,</span><br><span class="line">content: <span class="string">'你是否想要删除这个图片?'</span>,</span><br><span class="line">type: <span class="string">'red'</span>,</span><br><span class="line">buttons: &#123;   </span><br><span class="line">确定: &#123;</span><br><span class="line">btnClass: <span class="string">'btn-primary text-white'</span>,</span><br><span class="line">keys: [<span class="string">'enter'</span>],</span><br><span class="line">action: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  resolve();</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">取消: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$.alert(<span class="string">'图片删除被中止! '</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">'#input-b5'</span>).on(<span class="string">'filedeleted'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"> event,index ,data,val</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(data.status==<span class="number">200</span>)&#123;<span class="comment">//判断删除成功后要把前端的图片更新一下</span></span><br><span class="line"><span class="keyword">var</span> picimg=val.picimg;<span class="comment">//获取已经修改过的图片数据信息</span></span><br><span class="line"><span class="keyword">var</span> a=<span class="built_in">JSON</span>.parse(picimg).arrs.split(<span class="string">"#"</span>);</span><br><span class="line"><span class="keyword">var</span> b=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==<span class="built_in">JSON</span>.parse(picimg).obj)&#123;</span><br><span class="line">b+=<span class="string">""</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">b+=a[i]+<span class="string">"#"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b==<span class="string">""</span>)&#123;</span><br><span class="line"><span class="comment">//显示没图片的界面设置</span></span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">b=b.substring(<span class="number">0</span>,b.length<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//重新加载资源数据</span></span><br><span class="line">         setimg(b);</span><br><span class="line">getImg(b);</span><br><span class="line">init();</span><br><span class="line">$(<span class="string">'#myModal'</span>).modal(<span class="string">'hide'</span>);</span><br><span class="line">$(<span class="string">"#strong"</span>).html(<span class="string">"图片删除成功"</span>);</span><br><span class="line">$(<span class="string">'#strong'</span>).removeClass(<span class="string">"hidden"</span>);</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$(<span class="string">'#strong'</span>).addClass(<span class="string">"hidden"</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$(<span class="string">"#strong"</span>).html(<span class="string">"图片删除异常"</span>);</span><br><span class="line">$(<span class="string">'#strong'</span>).removeClass(<span class="string">"hidden"</span>);</span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">$(<span class="string">'#strong'</span>).addClass(<span class="string">"hidden"</span>);</span><br><span class="line">&#125;, <span class="number">2000</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>后端代码</p><p>文件上传代码略，基于公司需求增加了删除图片的功能，在前端js函数获取要删除的图片的信息，在后端添加一个删除图片的对应方法。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="Bootstrap" scheme="http://hugenye.github.io/tags/Bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>企业部署阿里云服务器(Windows)</title>
    <link href="http://hugenye.github.io/2019/06/16/aliba/"/>
    <id>http://hugenye.github.io/2019/06/16/aliba/</id>
    <published>2019-06-16T03:07:47.000Z</published>
    <updated>2020-08-19T08:15:10.579Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、用客户账号密码登录阿里"><a href="#一、用客户账号密码登录阿里" class="headerlink" title="一、用客户账号密码登录阿里"></a>一、用客户账号密码登录阿里</h1><p>ps：最好由客户本人注册，代客户注册会使客户的新人优惠失效，因为其识别主机，已经注册过新用户的主机就不能用了。</p><h1 id="二、需要购买的服务器清单"><a href="#二、需要购买的服务器清单" class="headerlink" title="二、需要购买的服务器清单"></a>二、需要购买的服务器清单</h1><p>2核4G 1M</p><p>windows Server 2008 R2企业版 64</p><p>一年大概1500元</p><p>MySQL 5.6</p><p>1核1G</p><p>存储空间100G</p><p>一年大概2300元</p><h1 id="三、-购买域名，添加连接域名"><a href="#三、-购买域名，添加连接域名" class="headerlink" title="三、 购买域名，添加连接域名"></a>三、 购买域名，添加连接域名</h1><p>域名分为一级、二级、三级域名。比如<a href="http://www.baidu.com，baidu是一级域名，www是二级域名；" target="_blank" rel="noopener">www.baidu.com，baidu是一级域名，www是二级域名；</a></p><p>比如etd.<a href="http://www.baidu.com,etdo就是三级域名" target="_blank" rel="noopener">www.baidu.com,etdo就是三级域名</a></p><p>域名解析:</p><p>操作：域名与网站（购买域名，进入控制台）–&gt;云解析DNS–&gt;添加记录</p><p>记录类型选A ，主机记录要写上自己的二级域名或者三级域名。解析线路选择默认，记录值为要绑定的ip（是服务器的公网），TTL选10分钟就可以</p><img src="/2019/06/16/aliba/1.png" title="购买域名，添加记录"><h1 id="四、-配置安全组规则"><a href="#四、-配置安全组规则" class="headerlink" title="四、 配置安全组规则"></a>四、 配置安全组规则</h1><p>QServer服务器需要开通9710、9705端口</p><p>平台服务器需要开通80端口（一般买完服务器默认都会开通）</p><img src="/2019/06/16/aliba/配置安全组.png" title="配置安全组"><p>配置服务器(60.xxx.xx.xxx(公) 172.xx.xx.x(私有))端口</p><p>在本地远程连接如果出现凭据无法工作的问题需要设置关闭保护密码共享</p><img src="/2019/06/16/aliba/2.png" title="关闭密码保护共享"><p>远程连接（在阿里云远程连接密码123456）(重置服务器密码：xxxxxxxxx）</p><p>计算机连接地址为公网IP,</p><p>启动服务器</p><p>所有服务器都开防火墙</p><img src="/2019/06/16/aliba/3.png" title="关闭防火墙"><p>QServer服务器需要入站开通9710、9705端口，9705设置白名单</p><p>采集程序服务器需要入站开通9706端口，设置白名单</p><p>平台程序服务器需要入站开通80端口</p><p>报警程序服务器需要入站开通8980端口，设置白名单（一台服务器不用设置）</p><img src="/2019/06/16/aliba/4.png" title="入站规则"><h1 id="五、服务器环境搭建"><a href="#五、服务器环境搭建" class="headerlink" title="五、服务器环境搭建"></a>五、服务器环境搭建</h1><h2 id="数据库服务器端口"><a href="#数据库服务器端口" class="headerlink" title="数据库服务器端口"></a>数据库服务器端口</h2><p>入站开启65530端口，设置白名单</p><h2 id="安装JDK，配置环境变量"><a href="#安装JDK，配置环境变量" class="headerlink" title="安装JDK，配置环境变量"></a>安装JDK，配置环境变量</h2><p>QServer服务器、平台服务器需要安装jdk1.7，并配置环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;java -version</span><br></pre></td></tr></table></figure><h2 id="安装tomcat7"><a href="#安装tomcat7" class="headerlink" title="安装tomcat7"></a>安装tomcat7</h2><p>平台服务器需要安装tomcat7</p><p>1）解压tomcat，重命名为tomcat80和tomcat8980</p><p>80：</p><p>2）进入tomcat80\conf,打开server.xml文件,主要是修改端口</p><p>port=”8005” shutdown=”SHUTDOWN”</p><p>port=”80” protocol=”HTTP/1.1”</p><p>port=”8009” protocol=”AJP/1.3”</p><p>3）进入tomcat80\bin,打开service.bat,将tomcat7通过全部替换的方式改为tomcat8980</p><p>4）重命名tomcat7.exe为tomcat80.exe 和tomcat7w.exe为tomcat80w.exe</p><p>5）通过命令方式进入tomcat80\bin,执行服务安装 service.bat install,出现the service ‘tomcat8980’ has been installed表示服务安装成功</p><img src="/2019/06/16/aliba/5.png" title="tomcat服务器安装成功"><p>8980：</p><p>tomcat8980\conf,打开server.xml文件,主要是修改端口</p><p>port=”8006” shutdown=”SHUTDOWN”</p><p>port=”8980” protocol=”HTTP/1.1”</p><p>port=”8010” protocol=”AJP/1.3”</p><h1 id="六、-部署程序"><a href="#六、-部署程序" class="headerlink" title="六、 部署程序"></a>六、 部署程序</h1><p>1）设置白名单：</p><img src="/2019/06/16/aliba/6.png" title="配置白名单"><p>2）设置数据库账号：xxxx，数据库密码：<strong>****</strong></p><img src="/2019/06/16/aliba/8.png" title="配置数据库账号"><p>3）创建一个数据库xxx</p><img src="/2019/06/16/aliba/9.png" title="创建数据库"><p>4）数据库内外网地址：</p><p>内网地址:rm-xxxxxxxxxxxn.mysql.rds.aliyuncs.com 内网端口:3306</p><p>外网地址:rm-xxxxxxxxxxxnao.mysql.rds.aliyuncs.com 外网端口:3306</p><p>5）QServer：有4个文件，其中有2个配置文件，修改configure.properties里的ip为本地ip，修改log4j.properties里的路径</p><p>6）采集程序：有3个配置文件，修改3个里的库名，修改其中一个里的ip为QServer服务器ip，本地ip、监听ip为本地ip，连接端口为9705，数据库地址</p><img src="/2019/06/16/aliba/10.png" title="采集程序"><p>7）平台程序：修改\项目名\WEB-INF\classes下的数据库配置文件，log4j配置文件，myproperties里的socketip1、socketip2为采集程序服务器ip，nextprocessurl为报警模块接收数据servlet，basepathnew为访问域名</p><p>8）报警程序：修改数据库连接（url，username，passeword），在applicationContext.xml中修改</p><h1 id="七、-连调测试"><a href="#七、-连调测试" class="headerlink" title="七、 连调测试"></a>七、 连调测试</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
    
      <category term="阿里云服务器部署" scheme="http://hugenye.github.io/tags/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
</feed>
